    1|       |typedef unsigned long size_t;
    2|       |typedef long ptrdiff_t;
    3|       |typedef unsigned long __ino_t;
    4|       |typedef long __off_t;
    5|       |typedef __builtin_va_list __gnuc_va_list;
    6|       |typedef __gnuc_va_list va_list;
    7|       |typedef long __off64_t;
    8|       |typedef long __ssize_t;
    9|       |struct _IO_FILE;
   10|       |struct _IO_FILE;
   11|       |struct _IO_FILE;
   12|       |typedef struct _IO_FILE FILE;
   13|       |typedef void _IO_lock_t;
   14|       |struct _IO_marker {
   15|       |    struct _IO_marker *_next;
   16|       |    struct _IO_FILE *_sbuf;
   17|       |    int _pos;
   18|       |};
   19|       |struct _IO_FILE {
   20|       |    int _flags;
   21|       |    char *_IO_read_ptr;
   22|       |    char *_IO_read_end;
   23|       |    char *_IO_read_base;
   24|       |    char *_IO_write_base;
   25|       |    char *_IO_write_ptr;
   26|       |    char *_IO_write_end;
   27|       |    char *_IO_buf_base;
   28|       |    char *_IO_buf_end;
   29|       |    char *_IO_save_base;
   30|       |    char *_IO_backup_base;
   31|       |    char *_IO_save_end;
   32|       |    struct _IO_marker *_markers;
   33|       |    struct _IO_FILE *_chain;
   34|       |    int _fileno;
   35|       |    int _flags2;
   36|       |    __off_t _old_offset;
   37|       |    unsigned short _cur_column;
   38|       |    signed char _vtable_offset;
   39|       |    char _shortbuf[1];
   40|       |    _IO_lock_t *_lock;
   41|       |    __off64_t _offset;
   42|       |    void *__pad1;
   43|       |    void *__pad2;
   44|       |    void *__pad3;
   45|       |    void *__pad4;
   46|       |    size_t __pad5;
   47|       |    int _mode;
   48|       |    char _unused2[(15UL * sizeof(int) - 4UL * sizeof(void *)) - sizeof(size_t)];
   49|       |};
   50|       |typedef __ssize_t ssize_t;
   51|       |enum quoting_style {
   52|       |    literal_quoting_style = 0,
   53|       |    shell_quoting_style = 1,
   54|       |    shell_always_quoting_style = 2,
   55|       |    c_quoting_style = 3,
   56|       |    c_maybe_quoting_style = 4,
   57|       |    escape_quoting_style = 5,
   58|       |    locale_quoting_style = 6,
   59|       |    clocale_quoting_style = 7,
   60|       |    custom_quoting_style = 8
   61|       |};
   62|       |struct allocator;
   63|       |struct allocator;
   64|       |struct allocator;
   65|       |struct allocator {
   66|       |    void *(*allocate)(size_t);
   67|       |    void *(*reallocate)(void *, size_t);
   68|       |    void (*free)(void *);
   69|       |    void (*die)(size_t);
   70|       |};
   71|       |struct option {
   72|       |    char const *name;
   73|       |    int has_arg;
   74|       |    int *flag;
   75|       |    int val;
   76|       |};
   77|       |typedef long intmax_t;
   78|       |typedef long __time_t;
   79|       |typedef long __syscall_slong_t;
   80|       |struct timespec {
   81|       |    __time_t tv_sec;
   82|       |    __syscall_slong_t tv_nsec;
   83|       |};
   84|       |typedef unsigned int __gid_t;
   85|       |typedef unsigned long __dev_t;
   86|       |typedef unsigned int __uid_t;
   87|       |typedef unsigned int __mode_t;
   88|       |typedef unsigned long __nlink_t;
   89|       |typedef long __blksize_t;
   90|       |typedef long __blkcnt_t;
   91|       |struct stat {
   92|       |    __dev_t st_dev;
   93|       |    __ino_t st_ino;
   94|       |    __nlink_t st_nlink;
   95|       |    __mode_t st_mode;
   96|       |    __uid_t st_uid;
   97|       |    __gid_t st_gid;
   98|       |    int __pad0;
   99|       |    __dev_t st_rdev;
  100|       |    __off_t st_size;
  101|       |    __blksize_t st_blksize;
  102|       |    __blkcnt_t st_blocks;
  103|       |    struct timespec st_atim;
  104|       |    struct timespec st_mtim;
  105|       |    struct timespec st_ctim;
  106|       |    __syscall_slong_t __glibc_reserved[3];
  107|       |};
  108|       |typedef int wchar_t;
  109|       |typedef int nl_item;
  110|       |typedef unsigned int wint_t;
  111|       |typedef long __suseconds_t;
  112|       |struct timeval {
  113|       |    __time_t tv_sec;
  114|       |    __suseconds_t tv_usec;
  115|       |};
  116|       |typedef __time_t time_t;
  117|       |union __anonunion___value_23 {
  118|       |    unsigned int __wch;
  119|       |    char __wchb[4];
  120|       |};
  121|       |struct __anonstruct___mbstate_t_22 {
  122|       |    int __count;
  123|       |    union __anonunion___value_23 __value;
  124|       |};
  125|       |typedef struct __anonstruct___mbstate_t_22 __mbstate_t;
  126|       |typedef __mbstate_t mbstate_t;
  127|       |struct tm {
  128|       |    int tm_sec;
  129|       |    int tm_min;
  130|       |    int tm_hour;
  131|       |    int tm_mday;
  132|       |    int tm_mon;
  133|       |    int tm_year;
  134|       |    int tm_wday;
  135|       |    int tm_yday;
  136|       |    int tm_isdst;
  137|       |    long tm_gmtoff;
  138|       |    char const *tm_zone;
  139|       |};
  140|       |typedef int __clockid_t;
  141|       |typedef __clockid_t clockid_t;
  142|       |struct timezone {
  143|       |    int tz_minuteswest;
  144|       |    int tz_dsttime;
  145|       |};
  146|       |typedef unsigned long reg_syntax_t;
  147|       |typedef __off_t off_t;
  148|       |typedef struct timezone *__restrict __timezone_ptr_t;
  149|       |struct quoting_options;
  150|       |struct quoting_options;
  151|       |struct quoting_options;
  152|       |struct quoting_options {
  153|       |    enum quoting_style style;
  154|       |    int flags;
  155|       |    unsigned int quote_these_too[255UL / (sizeof(int) * 8UL) + 1UL];
  156|       |    char const *left_quote;
  157|       |    char const *right_quote;
  158|       |};
  159|       |struct slotvec {
  160|       |    size_t size;
  161|       |    char *val;
  162|       |};
  163|       |typedef long long_time_t;
  164|       |struct __anonstruct_textint_27 {
  165|       |    _Bool negative;
  166|       |    long value;
  167|       |    size_t digits;
  168|       |};
  169|       |typedef struct __anonstruct_textint_27 textint;
  170|       |struct __anonstruct_table_28 {
  171|       |    char const *name;
  172|       |    int type;
  173|       |    int value;
  174|       |};
  175|       |typedef struct __anonstruct_table_28 table;
  176|       |struct __anonstruct_relative_time_31 {
  177|       |    long year;
  178|       |    long month;
  179|       |    long day;
  180|       |    long hour;
  181|       |    long minutes;
  182|       |    long_time_t seconds;
  183|       |    long ns;
  184|       |};
  185|       |typedef struct __anonstruct_relative_time_31 relative_time;
  186|       |struct __anonstruct_parser_control_32 {
  187|       |    char const *input;
  188|       |    long day_ordinal;
  189|       |    int day_number;
  190|       |    int local_isdst;
  191|       |    long time_zone;
  192|       |    int meridian;
  193|       |    textint year;
  194|       |    long month;
  195|       |    long day;
  196|       |    long hour;
  197|       |    long minutes;
  198|       |    struct timespec seconds;
  199|       |    relative_time rel;
  200|       |    _Bool timespec_seen;
  201|       |    _Bool rels_seen;
  202|       |    size_t dates_seen;
  203|       |    size_t days_seen;
  204|       |    size_t local_zones_seen;
  205|       |    size_t dsts_seen;
  206|       |    size_t times_seen;
  207|       |    size_t zones_seen;
  208|       |    table local_time_zone_table[3];
  209|       |};
  210|       |typedef struct __anonstruct_parser_control_32 parser_control;
  211|       |union YYSTYPE;
  212|       |union YYSTYPE;
  213|       |union YYSTYPE;
  214|       |union YYSTYPE {
  215|       |    long intval;
  216|       |    textint textintval;
  217|       |    struct timespec timespec;
  218|       |    relative_time rel;
  219|       |};
  220|       |typedef union YYSTYPE YYSTYPE;
  221|       |typedef unsigned char yytype_uint8;
  222|       |typedef signed char yytype_int8;
  223|       |typedef short yytype_int16;
  224|       |union yyalloc {
  225|       |    yytype_int16 yyss_alloc;
  226|       |    YYSTYPE yyvs_alloc;
  227|       |};
  228|       |enum Time_spec {
  229|       |    TIME_SPEC_DATE = 0,
  230|       |    TIME_SPEC_SECONDS = 1,
  231|       |    TIME_SPEC_NS = 2,
  232|       |    TIME_SPEC_HOURS = 3,
  233|       |    TIME_SPEC_MINUTES = 4
  234|       |};
  235|       |int c_strcasecmp(char const *s1, char const *s2) __attribute__((__pure__));
  236|       |int c_tolower(int c) __attribute__((__const__));
  237|       |int c_strcasecmp(char const *s1, char const *s2) __attribute__((__pure__));
  238|       |int c_strcasecmp(char const *s1, char const *s2)
  239|      0|{
  240|      0|    register unsigned char const *p1;
  241|      0|    register unsigned char const *p2;
  242|      0|    unsigned char c1;
  243|      0|    unsigned char c2;
  244|       |
  245|      0|    {
  246|      0|        p1 = (unsigned char const *)s1;
  247|      0|        p2 = (unsigned char const *)s2;
  248|      0|        if ((unsigned long)p1 == (unsigned long)p2) {
  249|      0|            return (0);
  250|      0|        }
  251|      0|        while (1) {
  252|      0|            c1 = (unsigned char)c_tolower((int)*p1);
  253|      0|            c2 = (unsigned char)c_tolower((int)*p2);
  254|      0|            if ((int)c1 == 0) {
  255|      0|                goto while_break;
  256|      0|            }
  257|      0|            p1++;
  258|      0|            p2++;
  259|      0|            if (!((int)c1 == (int)c2)) {
  260|      0|                goto while_break;
  261|      0|            }
  262|      0|        }
  263|      0|while_break:
  264|      0|        ;
  265|      0|        return ((int)c1 - (int)c2);
  266|      0|    }
  267|      0|}
  268|       |_Bool c_isalpha(int c) __attribute__((__const__));
  269|       |_Bool c_isspace(int c) __attribute__((__const__));
  270|       |int c_toupper(int c) __attribute__((__const__));
  271|       |_Bool c_isalpha(int c) __attribute__((__const__));
  272|       |_Bool c_isalpha(int c)
  273|     35|{
  274|     35|    int tmp;
  275|       |
  276|     35|    {
  277|     35|        if ((c & -33) >= 65) {
  278|     27|            if ((c & -33) <= 90) {
  279|     27|                tmp = 1;
  280|     27|            }
  281|      0|            else {
  282|      0|                tmp = 0;
  283|      0|            }
  284|     27|        }
  285|      8|        else {
  286|      8|            tmp = 0;
  287|      8|        }
  288|     35|        return ((_Bool)tmp);
  289|     35|    }
  290|     35|}
  291|       |_Bool c_isspace(int c) __attribute__((__const__));
  292|       |_Bool c_isspace(int c)
  293|     13|{
  294|     13|    int tmp;
  295|       |
  296|     13|    {
  297|     13|        if (c == 32) {
  298|      2|            tmp = 1;
  299|      2|        }
  300|     11|        else {
  301|     11|            if (c == 9) {
  302|      0|                tmp = 1;
  303|      0|            }
  304|     11|            else {
  305|     11|                if (c == 10) {
  306|      0|                    tmp = 1;
  307|      0|                }
  308|     11|                else {
  309|     11|                    if (c == 11) {
  310|      0|                        tmp = 1;
  311|      0|                    }
  312|     11|                    else {
  313|     11|                        if (c == 12) {
  314|      0|                            tmp = 1;
  315|      0|                        }
  316|     11|                        else {
  317|     11|                            if (c == 13) {
  318|      0|                                tmp = 1;
  319|      0|                            }
  320|     11|                            else {
  321|     11|                                tmp = 0;
  322|     11|                            }
  323|     11|                        }
  324|     11|                    }
  325|     11|                }
  326|     11|            }
  327|     11|        }
  328|     13|        return ((_Bool)tmp);
  329|     13|    }
  330|     13|}
  331|       |int c_tolower(int c) __attribute__((__const__));
  332|       |int c_tolower(int c)
  333|      0|{
  334|      0|    int tmp;
  335|       |
  336|      0|    {
  337|      0|        if (c >= 65) {
  338|      0|            if (c <= 90) {
  339|      0|                tmp = (c - 65) + 97;
  340|      0|            }
  341|      0|            else {
  342|      0|                tmp = c;
  343|      0|            }
  344|      0|        }
  345|      0|        else {
  346|      0|            tmp = c;
  347|      0|        }
  348|      0|        return (tmp);
  349|      0|    }
  350|      0|}
  351|       |int c_toupper(int c) __attribute__((__const__));
  352|       |int c_toupper(int c)
  353|     27|{
  354|     27|    int tmp;
  355|       |
  356|     27|    {
  357|     27|        if (c >= 97) {
  358|     26|            if (c <= 122) {
  359|     26|                tmp = (c - 97) + 65;
  360|     26|            }
  361|      0|            else {
  362|      0|                tmp = c;
  363|      0|            }
  364|     26|        }
  365|      1|        else {
  366|      1|            tmp = c;
  367|      1|        }
  368|     27|        return (tmp);
  369|     27|    }
  370|     27|}
  371|       |#pragma GCC diagnostic push
  372|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  373|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  374|       |#pragma GCC diagnostic pop
  375|       |#pragma GCC diagnostic push
  376|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  377|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  378|       |#pragma GCC diagnostic pop
  379|       |char *last_component(char const *name) __attribute__((__pure__));
  380|       |#pragma GCC diagnostic push
  381|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  382|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  383|       |__attribute__((__noreturn__)) void xalloc_die(void);
  384|       |void *xmalloc(size_t n) __attribute__((__malloc__, __alloc_size__(1)));
  385|       |void *xrealloc(void *p, size_t n) __attribute__((__alloc_size__(2)));
  386|       |__inline void *xnmalloc(size_t n, size_t s)
  387|       |__attribute__((__malloc__, __alloc_size__(1, 2)));
  388|       |__inline void *xnmalloc(size_t n, size_t s)
  389|       |__attribute__((__malloc__, __alloc_size__(1, 2)));
  390|       |__inline void *xnmalloc(size_t n, size_t s)
  391|      0|{
  392|      0|    int tmp;
  393|      0|    void *tmp___0;
  394|      0|
  395|      0|    {
  396|      0|        if (sizeof(ptrdiff_t) <= sizeof(size_t)) {
  397|      0|            tmp = -1;
  398|      0|        }
  399|      0|        else {
  400|      0|            tmp = -2;
  401|      0|        }
  402|      0|        if ((size_t)tmp / s < n) {
  403|      0|            xalloc_die();
  404|      0|        }
  405|      0|        tmp___0 = xmalloc(n * s);
  406|      0|        return (tmp___0);
  407|      0|    }
  408|      0|}
  409|       |char *xcharalloc(size_t n)
  410|      0|{
  411|      0|    void *tmp;
  412|      0|    void *tmp___0;
  413|      0|    void *tmp___1;
  414|       |
  415|      0|    {
  416|      0|        if (sizeof(char) == 1UL) {
  417|      0|            tmp = xmalloc(n);
  418|      0|            tmp___1 = tmp;
  419|      0|        }
  420|      0|        else {
  421|      0|            tmp___0 = xnmalloc(n, sizeof(char));
  422|      0|            tmp___1 = tmp___0;
  423|      0|        }
  424|      0|        return ((char *)tmp___1);
  425|      0|    }
  426|      0|}
  427|       |extern __attribute__((__nothrow__))
  428|       |size_t(__attribute__((__nonnull__(1), __leaf__)) strlen)(char const *__s)
  429|       |__attribute__((__pure__));
  430|       |char *last_component(char const *name) __attribute__((__pure__));
  431|       |char *last_component(char const *name)
  432|      0|{
  433|      0|    char const *base;
  434|      0|    char const *p;
  435|      0|    _Bool saw_slash;
  436|       |
  437|      0|    {
  438|      0|        base = name + 0;
  439|      0|        saw_slash = (_Bool)0;
  440|      0|        while (1) {
  441|       |
  442|      0|            if (!((int const) * base == 47)) {
  443|      0|                goto while_break;
  444|      0|            }
  445|      0|            base++;
  446|      0|        }
  447|      0|while_break:
  448|      0|        p = base;
  449|      0|        while (1) {
  450|       |
  451|      0|            if (!*p) {
  452|      0|                goto while_break___0;
  453|      0|            }
  454|      0|            if ((int const) * p == 47) {
  455|      0|                saw_slash = (_Bool)1;
  456|      0|            }
  457|      0|            else {
  458|      0|                if (saw_slash) {
  459|      0|                    base = p;
  460|      0|                    saw_slash = (_Bool)0;
  461|      0|                }
  462|      0|            }
  463|      0|            p++;
  464|      0|        }
  465|      0|while_break___0:
  466|      0|        ;
  467|      0|        return ((char *)base);
  468|      0|    }
  469|      0|}
  470|       |extern __attribute__((__nothrow__)) void *(__attribute__((__leaf__)) malloc)(
  471|       |    size_t __size) __attribute__((__malloc__));
  472|       |extern __attribute__((__nothrow__)) void(__attribute__((__leaf__)) free)(
  473|       |    void *__ptr);
  474|       |char const *simple_backup_suffix;
  475|       |void (*argmatch_die)(void);
  476|       |ptrdiff_t __xargmatch_internal(char const *context, char const *arg,
  477|       |                               char const *const *arglist, char const *vallist,
  478|       |                               size_t valsize, void (*exit_fn)(void));
  479|       |#pragma GCC diagnostic push
  480|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  481|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  482|       |extern __attribute__((__nothrow__)) int *(
  483|       |    __attribute__((__leaf__)) __errno_location)(void)__attribute__((__const__));
  484|       |extern __attribute__((__nothrow__)) char *(
  485|       |    __attribute__((__nonnull__(1), __leaf__)) getenv)(char const *__name);
  486|       |extern __attribute__((__nothrow__)) void *(__attribute__((__nonnull__(1, 2),
  487|       |        __leaf__)) memcpy)(
  488|       |            void *__restrict __dest, void const *__restrict __src, size_t __n);
  489|       |extern __attribute__((__nothrow__)) int(__attribute__((
  490|       |        __nonnull__(1, 2), __leaf__)) memcmp)(void const *__s1, void const *__s2,
  491|       |                size_t __n) __attribute__((__pure__));
  492|       |extern __attribute__((__nothrow__)) char *(__attribute__((
  493|       |            __nonnull__(1, 2), __leaf__)) strcpy)(char *__restrict __dest,
  494|       |                    char const *__restrict __src);
  495|       |#pragma GCC diagnostic push
  496|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  497|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  498|       |#pragma GCC diagnostic pop
  499|       |char const *simple_backup_suffix = "~";
  500|       |ptrdiff_t argmatch(char const *arg, char const *const *arglist,
  501|       |                   char const *vallist, size_t valsize)
  502|       |__attribute__((__pure__));
  503|       |void argmatch_invalid(char const *context, char const *value,
  504|       |                      ptrdiff_t problem);
  505|       |void argmatch_valid(char const *const *arglist, char const *vallist,
  506|       |                    size_t valsize);
  507|       |extern struct _IO_FILE *stderr;
  508|       |extern int fprintf(FILE *__restrict __stream, char const *__restrict __format,
  509|       |                   ...);
  510|       |extern int putc_unlocked(int __c, FILE *__stream);
  511|       |extern int fputs_unlocked(char const *__restrict __s,
  512|       |                          FILE *__restrict __stream);
  513|       |extern __attribute__((__nothrow__)) int(__attribute__((__nonnull__(1, 2),
  514|       |                                        __leaf__)) strncmp)(
  515|       |                                                char const *__s1, char const *__s2, size_t __n) __attribute__((__pure__));
  516|       |extern __attribute__((__nothrow__)) char *(__attribute__((__leaf__)) gettext)(
  517|       |    char const *__msgid) __attribute__((__format_arg__(1)));
  518|       |extern void error(int __status, int __errnum, char const *__format, ...);
  519|       |char *quotearg_n_style(int n, enum quoting_style s, char const *arg);
  520|       |char const *quote_n(int n, char const *arg);
  521|       |char const *quote(char const *arg);
  522|       |__attribute__((__noreturn__)) void usage(int status);
  523|       |static void __argmatch_die(void)
  524|      0|{
  525|       |
  526|      0|    {
  527|      0|        usage(1);
  528|      0|        return;
  529|      0|    }
  530|      0|}
  531|       |void (*argmatch_die)(void) = &__argmatch_die;
  532|       |ptrdiff_t argmatch(char const *arg, char const *const *arglist,
  533|       |                   char const *vallist, size_t valsize)
  534|       |__attribute__((__pure__));
  535|       |ptrdiff_t argmatch(char const *arg, char const *const *arglist,
  536|       |                   char const *vallist, size_t valsize)
  537|      0|{
  538|      0|    size_t i;
  539|      0|    size_t arglen;
  540|      0|    ptrdiff_t matchind;
  541|      0|    _Bool ambiguous;
  542|      0|    int tmp;
  543|      0|    size_t tmp___0;
  544|      0|    int tmp___1;
  545|       |
  546|      0|    {
  547|      0|        matchind = (ptrdiff_t)-1;
  548|      0|        ambiguous = (_Bool)0;
  549|      0|        arglen = strlen(arg);
  550|      0|        i = (size_t)0;
  551|      0|        while (1) {
  552|       |
  553|      0|            if (!*(arglist + i)) {
  554|      0|                goto while_break;
  555|      0|            }
  556|      0|            tmp___1 = strncmp((char const *)*(arglist + i), arg, arglen);
  557|      0|            if (!tmp___1) {
  558|      0|                tmp___0 = strlen((char const *)*(arglist + i));
  559|      0|                if (tmp___0 == arglen) {
  560|      0|                    return ((ptrdiff_t)i);
  561|      0|                }
  562|      0|                else {
  563|      0|                    if (matchind == -1L) {
  564|      0|                        matchind = (ptrdiff_t)i;
  565|      0|                    }
  566|      0|                    else {
  567|      0|                        if ((unsigned long)vallist == (unsigned long)((void *)0)) {
  568|      0|                            ambiguous = (_Bool)1;
  569|      0|                        }
  570|      0|                        else {
  571|      0|                            tmp = memcmp((void const *)(vallist + valsize * (size_t)matchind),
  572|      0|                                         (void const *)(vallist + valsize * i), valsize);
  573|      0|                            if (tmp) {
  574|      0|                                ambiguous = (_Bool)1;
  575|      0|                            }
  576|      0|                        }
  577|      0|                    }
  578|      0|                }
  579|      0|            }
  580|      0|            i++;
  581|      0|        }
  582|      0|while_break:
  583|      0|        ;
  584|      0|        if (ambiguous) {
  585|      0|            return ((ptrdiff_t)-2);
  586|      0|        }
  587|      0|        else {
  588|      0|            return (matchind);
  589|      0|        }
  590|      0|    }
  591|      0|}
  592|       |void argmatch_invalid(char const *context, char const *value,
  593|       |                      ptrdiff_t problem)
  594|      0|{
  595|      0|    char const *format;
  596|      0|    char *tmp;
  597|      0|    char *tmp___0;
  598|      0|    char *tmp___1;
  599|      0|    char const *tmp___2;
  600|      0|    char *tmp___3;
  601|       |
  602|      0|    {
  603|      0|        if (problem == -1L) {
  604|      0|            tmp = gettext("invalid argument %s for %s");
  605|      0|            tmp___1 = tmp;
  606|      0|        }
  607|      0|        else {
  608|      0|            tmp___0 = gettext("ambiguous argument %s for %s");
  609|      0|            tmp___1 = tmp___0;
  610|      0|        }
  611|      0|        format = (char const *)tmp___1;
  612|      0|        tmp___2 = quote_n(1, context);
  613|      0|        tmp___3 = quotearg_n_style(0, (enum quoting_style)6, value);
  614|      0|        error(0, 0, format, tmp___3, tmp___2);
  615|      0|        return;
  616|      0|    }
  617|      0|}
  618|       |void argmatch_valid(char const *const *arglist, char const *vallist,
  619|       |                    size_t valsize)
  620|      0|{
  621|      0|    size_t i;
  622|      0|    char const *last_val;
  623|      0|    char *tmp;
  624|      0|    char const *tmp___0;
  625|      0|    char const *tmp___1;
  626|      0|    int tmp___2;
  627|       |
  628|      0|    {
  629|      0|        last_val = (char const *)((void *)0);
  630|      0|        tmp = gettext("Valid arguments are:");
  631|      0|        fputs_unlocked((char const *)tmp, stderr);
  632|      0|        i = (size_t)0;
  633|      0|        while (1) {
  634|       |
  635|      0|            if (!*(arglist + i)) {
  636|      0|                goto while_break;
  637|      0|            }
  638|      0|            if (i == 0UL) {
  639|      0|                tmp___0 = quote((char const *)*(arglist + i));
  640|      0|                fprintf(stderr, "\n  - %s", tmp___0);
  641|      0|                last_val = vallist + valsize * i;
  642|      0|            }
  643|      0|            else {
  644|      0|                tmp___2 = memcmp((void const *)last_val,
  645|      0|                                 (void const *)(vallist + valsize * i), valsize);
  646|      0|                if (tmp___2) {
  647|      0|                    tmp___0 = quote((char const *)*(arglist + i));
  648|      0|                    fprintf(stderr, "\n  - %s", tmp___0);
  649|      0|                    last_val = vallist + valsize * i;
  650|      0|                }
  651|      0|                else {
  652|      0|                    tmp___1 = quote((char const *)*(arglist + i));
  653|      0|                    fprintf(stderr, ", %s", tmp___1);
  654|      0|                }
  655|      0|            }
  656|      0|            i++;
  657|      0|        }
  658|      0|while_break:
  659|      0|        putc_unlocked('\n', stderr);
  660|      0|        return;
  661|      0|    }
  662|      0|}
  663|       |ptrdiff_t __xargmatch_internal(char const *context, char const *arg,
  664|       |                               char const *const *arglist, char const *vallist,
  665|       |                               size_t valsize, void (*exit_fn)(void))
  666|      0|{
  667|      0|    ptrdiff_t res;
  668|      0|    ptrdiff_t tmp;
  669|       |
  670|      0|    {
  671|      0|        tmp = argmatch(arg, arglist, vallist, valsize);
  672|      0|        res = tmp;
  673|      0|        if (res >= 0L) {
  674|      0|            return (res);
  675|      0|        }
  676|      0|        argmatch_invalid(context, arg, res);
  677|      0|        argmatch_valid(arglist, vallist, valsize);
  678|      0|        (*exit_fn)();
  679|      0|        return ((ptrdiff_t)-1);
  680|      0|    }
  681|      0|}
  682|       |#pragma GCC diagnostic push
  683|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  684|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  685|       |#pragma GCC diagnostic pop
  686|       |#pragma GCC diagnostic push
  687|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  688|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  689|       |#pragma GCC diagnostic pop
  690|       |#pragma GCC diagnostic push
  691|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  692|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  693|       |#pragma GCC diagnostic pop
  694|       |struct allocator const stdlib_allocator;
  695|       |extern __attribute__((__nothrow__)) void *(__attribute__((
  696|       |            __warn_unused_result__, __leaf__)) realloc)(void *__ptr, size_t __size);
  697|       |struct allocator const stdlib_allocator = {
  698|       |    (void *(*)(size_t))(&malloc), (void *(*)(void *, size_t))(&realloc),
  699|       |    (void (*)(void *))(&free), (void (*)(size_t))((void *)0)
  700|       |};
  701|       |extern struct _IO_FILE *stdin;
  702|       |extern __ssize_t getline(char **__restrict __lineptr, size_t *__restrict __n,
  703|       |                         FILE *__restrict __stream);
  704|       |#pragma GCC diagnostic push
  705|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  706|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  707|       |#pragma GCC diagnostic push
  708|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  709|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  710|       |#pragma GCC diagnostic pop
  711|       |#pragma GCC diagnostic push
  712|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  713|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  714|       |extern __attribute__((__nothrow__)) unsigned short const **(
  715|       |    __attribute__((__leaf__)) __ctype_b_loc)(void)__attribute__((__const__));
  716|       |extern __attribute__((__nothrow__)) char *(
  717|       |    __attribute__((__nonnull__(1), __leaf__)) strchr)(char const *__s, int __c)
  718|       |__attribute__((__pure__));
  719|       |extern
  720|       |__attribute__((__nothrow__,
  721|       |               __noreturn__)) void(__attribute__((__leaf__)) abort)(void);
  722|       |int volatile exit_failure;
  723|       |#pragma GCC diagnostic push
  724|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  725|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  726|       |#pragma GCC diagnostic push
  727|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  728|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  729|       |#pragma GCC diagnostic push
  730|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  731|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  732|       |#pragma GCC diagnostic pop
  733|       |#pragma GCC diagnostic push
  734|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  735|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  736|       |extern struct _IO_FILE *stdout;
  737|       |#pragma GCC diagnostic push
  738|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  739|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  740|       |#pragma GCC diagnostic pop
  741|       |#pragma GCC diagnostic push
  742|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  743|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  744|       |void *xmemdup(void const *p, size_t s)
  745|       |__attribute__((__malloc__, __alloc_size__(2)));
  746|       |extern __attribute__((__nothrow__)) void *(__attribute__((
  747|       |            __nonnull__(1), __leaf__)) memset)(void *__s, int __c, size_t __n);
  748|       |void *xmalloc(size_t n) __attribute__((__malloc__, __alloc_size__(1)));
  749|       |void *xmalloc(size_t n)
  750|      0|{
  751|      0|    void *p;
  752|      0|    void *tmp;
  753|       |
  754|      0|    {
  755|      0|        tmp = malloc(n);
  756|      0|        p = tmp;
  757|      0|        if (!p) {
  758|      0|            if (n != 0UL) {
  759|      0|                xalloc_die();
  760|      0|            }
  761|      0|        }
  762|      0|        return (p);
  763|      0|    }
  764|      0|}
  765|       |void *xrealloc(void *p, size_t n) __attribute__((__alloc_size__(2)));
  766|       |void *xrealloc(void *p, size_t n)
  767|      0|{
  768|       |
  769|      0|    {
  770|      0|        if (!n) {
  771|      0|            if (p) {
  772|      0|                free(p);
  773|      0|                return ((void *)0);
  774|      0|            }
  775|      0|        }
  776|      0|        p = realloc(p, n);
  777|      0|        if (!p) {
  778|      0|            if (n) {
  779|      0|                xalloc_die();
  780|      0|            }
  781|      0|        }
  782|      0|        return (p);
  783|      0|    }
  784|      0|}
  785|       |void *xmemdup(void const *p, size_t s)
  786|       |__attribute__((__malloc__, __alloc_size__(2)));
  787|       |void *xmemdup(void const *p, size_t s)
  788|      0|{
  789|      0|    void *tmp;
  790|      0|    void *tmp___0;
  791|       |
  792|      0|    {
  793|      0|        tmp = xmalloc(s);
  794|      0|        tmp___0 = memcpy(tmp, p, s);
  795|      0|        return (tmp___0);
  796|      0|    }
  797|      0|}
  798|       |#pragma GCC diagnostic push
  799|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  800|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  801|       |#pragma GCC diagnostic pop
  802|       |#pragma GCC diagnostic push
  803|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  804|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  805|       |#pragma GCC diagnostic push
  806|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  807|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  808|       |#pragma GCC diagnostic push
  809|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  810|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  811|       |#pragma GCC diagnostic pop
  812|       |#pragma GCC diagnostic push
  813|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  814|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  815|       |#pragma GCC diagnostic push
  816|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  817|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  818|       |#pragma GCC diagnostic push
  819|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  820|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  821|       |__attribute__((__noreturn__)) void xalloc_die(void);
  822|       |void xalloc_die(void)
  823|      0|{
  824|      0|    char *tmp;
  825|       |
  826|      0|    {
  827|      0|        tmp = gettext("memory exhausted");
  828|      0|        error((int)exit_failure, 0, "%s", tmp);
  829|      0|        abort();
  830|      0|    }
  831|      0|}
  832|       |#pragma GCC diagnostic push
  833|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  834|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  835|       |#pragma GCC diagnostic pop
  836|       |#pragma GCC diagnostic push
  837|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  838|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  839|       |#pragma GCC diagnostic pop
  840|       |extern __attribute__((__nothrow__)) int(__attribute__((
  841|       |        __nonnull__(1, 2), __leaf__)) strcmp)(char const *__s1, char const *__s2)
  842|       |__attribute__((__pure__));
  843|       |#pragma GCC diagnostic push
  844|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  845|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  846|       |#pragma GCC diagnostic pop
  847|       |extern __attribute__((__nothrow__)) int(
  848|       |    __attribute__((__nonnull__(1), __leaf__)) atexit)(void (*__func)(void));
  849|       |#pragma GCC diagnostic push
  850|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  851|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  852|       |#pragma GCC diagnostic pop
  853|       |#pragma GCC diagnostic push
  854|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
  855|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
  856|       |extern size_t fwrite(void const *__restrict __ptr, size_t __size, size_t __n,
  857|       |                     FILE *__restrict __s);
  858|       |extern int printf(char const *__restrict __format, ...);
  859|       |char const version_etc_copyright[47];
  860|       |void version_etc_arn(FILE *stream, char const *command_name,
  861|       |                     char const *package, char const *version,
  862|       |                     char const *const *authors, size_t n_authors);
  863|       |void version_etc_va(FILE *stream, char const *command_name, char const *package,
  864|       |                    char const *version, va_list authors);
  865|       |void version_etc(FILE *stream, char const *command_name, char const *package,
  866|       |                 char const *version, ...) __attribute__((__sentinel__));
  867|       |void version_etc_arn(FILE *stream, char const *command_name,
  868|       |                     char const *package, char const *version,
  869|       |                     char const *const *authors, size_t n_authors)
  870|      0|{
  871|      0|    char *tmp;
  872|      0|    char *tmp___0;
  873|      0|    char *tmp___1;
  874|      0|    char *tmp___2;
  875|      0|    char *tmp___3;
  876|      0|    char *tmp___4;
  877|      0|    char *tmp___5;
  878|      0|    char *tmp___6;
  879|      0|    char *tmp___7;
  880|      0|    char *tmp___8;
  881|      0|    char *tmp___9;
  882|      0|    char *tmp___10;
  883|       |
  884|      0|    {
  885|      0|        if (command_name) {
  886|      0|            fprintf(stream, "%s (%s) %s\n", command_name, package, version);
  887|      0|        }
  888|      0|        else {
  889|      0|            fprintf(stream, "%s %s\n", package, version);
  890|      0|        }
  891|      0|        tmp = gettext("(C)");
  892|      0|        fprintf(stream, version_etc_copyright, tmp, 2013);
  893|      0|        tmp___0 =
  894|      0|            gettext("\nLicense GPLv3+: GNU GPL version 3 or later "
  895|      0|                    "<http://gnu.org/licenses/gpl.html>.\nThis is free software: "
  896|      0|                    "you are free to change and redistribute it.\nThere is NO "
  897|      0|                    "WARRANTY, to the extent permitted by law.\n\n");
  898|      0|        fputs_unlocked((char const *)tmp___0, stream);
  899|      0|        if (n_authors == 0UL) {
  900|      0|            goto case_0;
  901|      0|        }
  902|      0|        if (n_authors == 1UL) {
  903|      0|            goto case_1;
  904|      0|        }
  905|      0|        if (n_authors == 2UL) {
  906|      0|            goto case_2;
  907|      0|        }
  908|      0|        if (n_authors == 3UL) {
  909|      0|            goto case_3;
  910|      0|        }
  911|      0|        if (n_authors == 4UL) {
  912|      0|            goto case_4;
  913|      0|        }
  914|      0|        if (n_authors == 5UL) {
  915|      0|            goto case_5;
  916|      0|        }
  917|      0|        if (n_authors == 6UL) {
  918|      0|            goto case_6;
  919|      0|        }
  920|      0|        if (n_authors == 7UL) {
  921|      0|            goto case_7;
  922|      0|        }
  923|      0|        if (n_authors == 8UL) {
  924|      0|            goto case_8;
  925|      0|        }
  926|      0|        if (n_authors == 9UL) {
  927|      0|            goto case_9;
  928|      0|        }
  929|      0|        goto switch_default;
  930|      0|case_0:
  931|      0|        abort();
  932|      0|case_1:
  933|      0|        tmp___1 = gettext("Written by %s.\n");
  934|      0|        fprintf(stream, (char const *)tmp___1, *(authors + 0));
  935|      0|        goto switch_break;
  936|      0|case_2:
  937|      0|        tmp___2 = gettext("Written by %s and %s.\n");
  938|      0|        fprintf(stream, (char const *)tmp___2, *(authors + 0), *(authors + 1));
  939|      0|        goto switch_break;
  940|      0|case_3:
  941|      0|        tmp___3 = gettext("Written by %s, %s, and %s.\n");
  942|      0|        fprintf(stream, (char const *)tmp___3, *(authors + 0), *(authors + 1),
  943|      0|                *(authors + 2));
  944|      0|        goto switch_break;
  945|      0|case_4:
  946|      0|        tmp___4 = gettext("Written by %s, %s, %s,\nand %s.\n");
  947|      0|        fprintf(stream, (char const *)tmp___4, *(authors + 0), *(authors + 1),
  948|      0|                *(authors + 2), *(authors + 3));
  949|      0|        goto switch_break;
  950|      0|case_5:
  951|      0|        tmp___5 = gettext("Written by %s, %s, %s,\n%s, and %s.\n");
  952|      0|        fprintf(stream, (char const *)tmp___5, *(authors + 0), *(authors + 1),
  953|      0|                *(authors + 2), *(authors + 3), *(authors + 4));
  954|      0|        goto switch_break;
  955|      0|case_6:
  956|      0|        tmp___6 = gettext("Written by %s, %s, %s,\n%s, %s, and %s.\n");
  957|      0|        fprintf(stream, (char const *)tmp___6, *(authors + 0), *(authors + 1),
  958|      0|                *(authors + 2), *(authors + 3), *(authors + 4), *(authors + 5));
  959|      0|        goto switch_break;
  960|      0|case_7:
  961|      0|        tmp___7 = gettext("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n");
  962|      0|        fprintf(stream, (char const *)tmp___7, *(authors + 0), *(authors + 1),
  963|      0|                *(authors + 2), *(authors + 3), *(authors + 4), *(authors + 5),
  964|      0|                *(authors + 6));
  965|      0|        goto switch_break;
  966|      0|case_8:
  967|      0|        tmp___8 = gettext("Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n");
  968|      0|        fprintf(stream, (char const *)tmp___8, *(authors + 0), *(authors + 1),
  969|      0|                *(authors + 2), *(authors + 3), *(authors + 4), *(authors + 5),
  970|      0|                *(authors + 6), *(authors + 7));
  971|      0|        goto switch_break;
  972|      0|case_9:
  973|      0|        tmp___9 = gettext("Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n");
  974|      0|        fprintf(stream, (char const *)tmp___9, *(authors + 0), *(authors + 1),
  975|      0|                *(authors + 2), *(authors + 3), *(authors + 4), *(authors + 5),
  976|      0|                *(authors + 6), *(authors + 7), *(authors + 8));
  977|      0|        goto switch_break;
  978|      0|switch_default:
  979|      0|        tmp___10 = gettext(
  980|      0|                       "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n");
  981|      0|        fprintf(stream, (char const *)tmp___10, *(authors + 0), *(authors + 1),
  982|      0|                *(authors + 2), *(authors + 3), *(authors + 4), *(authors + 5),
  983|      0|                *(authors + 6), *(authors + 7), *(authors + 8));
  984|      0|        goto switch_break;
  985|      0|switch_break:
  986|      0|        ;
  987|      0|        return;
  988|      0|    }
  989|      0|}
  990|       |void version_etc_va(FILE *stream, char const *command_name, char const *package,
  991|       |                    char const *version, va_list authors)
  992|      0|{
  993|      0|    size_t n_authors;
  994|      0|    char const *authtab[10];
  995|      0|    char const *tmp;
  996|       |
  997|      0|    {
  998|      0|        n_authors = (size_t)0;
  999|      0|        while (1) {
 1000|       |
 1001|      0|            if (n_authors < 10UL) {
 1002|      0|                tmp = __builtin_va_arg(authors, char const *);
 1003|      0|                authtab[n_authors] = tmp;
 1004|      0|                if (!((unsigned long)tmp != (unsigned long)((void *)0))) {
 1005|      0|                    goto while_break;
 1006|      0|                }
 1007|      0|            }
 1008|      0|            else {
 1009|      0|                goto while_break;
 1010|      0|            }
 1011|      0|            n_authors++;
 1012|      0|        }
 1013|      0|while_break:
 1014|      0|        version_etc_arn(stream, command_name, package, version,
 1015|      0|                        (char const *const *)(authtab), n_authors);
 1016|      0|        return;
 1017|      0|    }
 1018|      0|}
 1019|       |void version_etc(FILE *stream, char const *command_name, char const *package,
 1020|       |                 char const *version, ...) __attribute__((__sentinel__));
 1021|       |void version_etc(FILE *stream, char const *command_name, char const *package,
 1022|       |                 char const *version, ...)
 1023|      0|{
 1024|      0|    va_list authors;
 1025|       |
 1026|      0|    {
 1027|      0|        __builtin_va_start(authors, version);
 1028|      0|        version_etc_va(stream, command_name, package, version, authors);
 1029|      0|        __builtin_va_end(authors);
 1030|      0|        return;
 1031|      0|    }
 1032|      0|}
 1033|       |char const version_etc_copyright[47] = {
 1034|       |    (char const)'C', (char const)'o', (char const)'p',   (char const)'y',
 1035|       |    (char const)'r', (char const)'i', (char const)'g',   (char const)'h',
 1036|       |    (char const)'t', (char const)' ', (char const)'%',   (char const)'s',
 1037|       |    (char const)' ', (char const)'%', (char const)'d',   (char const)' ',
 1038|       |    (char const)'F', (char const)'r', (char const)'e',   (char const)'e',
 1039|       |    (char const)' ', (char const)'S', (char const)'o',   (char const)'f',
 1040|       |    (char const)'t', (char const)'w', (char const)'a',   (char const)'r',
 1041|       |    (char const)'e', (char const)' ', (char const)'F',   (char const)'o',
 1042|       |    (char const)'u', (char const)'n', (char const)'d',   (char const)'a',
 1043|       |    (char const)'t', (char const)'i', (char const)'o',   (char const)'n',
 1044|       |    (char const)',', (char const)' ', (char const)'I',   (char const)'n',
 1045|       |    (char const)'c', (char const)'.', (char const)'\000'
 1046|       |};
 1047|       |extern __attribute__((__nothrow__)) char *(
 1048|       |    __attribute__((__leaf__)) nl_langinfo)(nl_item __item);
 1049|       |#pragma GCC diagnostic push
 1050|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1051|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1052|       |#pragma GCC diagnostic pop
 1053|       |#pragma GCC diagnostic push
 1054|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1055|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1056|       |#pragma GCC diagnostic pop
 1057|       |#pragma GCC diagnostic push
 1058|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1059|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1060|       |struct timespec get_stat_mtime(struct stat const *st)
 1061|      0|{
 1062|       |
 1063|      0|    {
 1064|      0|        return ((struct timespec)st->st_mtim);
 1065|      0|    }
 1066|      0|}
 1067|       |#pragma GCC diagnostic pop
 1068|       |#pragma GCC diagnostic push
 1069|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1070|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1071|       |#pragma GCC diagnostic pop
 1072|       |#pragma GCC diagnostic push
 1073|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1074|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1075|       |#pragma GCC diagnostic pop
 1076|       |#pragma GCC diagnostic push
 1077|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1078|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1079|       |#pragma GCC diagnostic pop
 1080|       |#pragma GCC diagnostic push
 1081|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1082|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1083|       |#pragma GCC diagnostic pop
 1084|       |extern __attribute__((__nothrow__)) int(__attribute__((
 1085|       |        __nonnull__(1, 2), __leaf__)) stat)(char const *__restrict __file,
 1086|       |                struct stat *__restrict __buf);
 1087|       |#pragma GCC diagnostic push
 1088|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1089|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1090|       |#pragma GCC diagnostic pop
 1091|       |#pragma GCC diagnostic push
 1092|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1093|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1094|       |#pragma GCC diagnostic pop
 1095|       |#pragma GCC diagnostic push
 1096|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1097|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1098|       |#pragma GCC diagnostic pop
 1099|       |#pragma GCC diagnostic push
 1100|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1101|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1102|       |void gettime(struct timespec *ts);
 1103|       |#pragma GCC diagnostic pop
 1104|       |#pragma GCC diagnostic push
 1105|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1106|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1107|       |#pragma GCC diagnostic pop
 1108|       |#pragma GCC diagnostic push
 1109|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1110|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1111|       |#pragma GCC diagnostic pop
 1112|       |#pragma GCC diagnostic push
 1113|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1114|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1115|       |#pragma GCC diagnostic pop
 1116|       |#pragma GCC diagnostic push
 1117|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1118|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1119|       |#pragma GCC diagnostic pop
 1120|       |#pragma GCC diagnostic push
 1121|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1122|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1123|       |#pragma GCC diagnostic push
 1124|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1125|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1126|       |#pragma GCC diagnostic pop
 1127|       |char const *locale_charset(void);
 1128|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 1129|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 1130|       |#pragma GCC diagnostic push
 1131|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1132|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1133|       |#pragma GCC diagnostic pop
 1134|       |extern __attribute__((__nothrow__))
 1135|       |size_t(__attribute__((__leaf__)) __ctype_get_mb_cur_max)(void);
 1136|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) mbsinit)(
 1137|       |    mbstate_t const *__ps) __attribute__((__pure__));
 1138|       |extern __attribute__((__nothrow__)) size_t(__attribute__((__leaf__)) mbrtowc)(
 1139|       |    wchar_t *__restrict __pwc, char const *__restrict __s, size_t __n,
 1140|       |    mbstate_t *__restrict __p);
 1141|       |#pragma GCC diagnostic push
 1142|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1143|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1144|       |#pragma GCC diagnostic pop
 1145|       |#pragma GCC diagnostic push
 1146|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1147|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1148|       |unsigned int const is_basic_table[8];
 1149|       |#pragma GCC diagnostic pop
 1150|       |#pragma GCC diagnostic push
 1151|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1152|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1153|       |#pragma GCC diagnostic pop
 1154|       |#pragma GCC diagnostic push
 1155|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1156|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1157|       |#pragma weak pthread_key_create
 1158|       |#pragma weak pthread_getspecific
 1159|       |#pragma weak pthread_setspecific
 1160|       |#pragma weak pthread_key_delete
 1161|       |#pragma weak pthread_self
 1162|       |#pragma weak pthread_cancel
 1163|       |#pragma GCC diagnostic push
 1164|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1165|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1166|       |#pragma GCC diagnostic pop
 1167|       |extern int(__attribute__((__nonnull__(1))) open)(char const *__file,
 1168|       |        int __oflag, ...);
 1169|       |#pragma GCC diagnostic push
 1170|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1171|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1172|       |#pragma GCC diagnostic pop
 1173|       |#pragma GCC diagnostic push
 1174|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1175|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1176|       |#pragma GCC diagnostic pop
 1177|       |extern __attribute__((__nothrow__))
 1178|       |time_t(__attribute__((__leaf__)) mktime)(struct tm *__tp);
 1179|       |extern __attribute__((__nothrow__)) size_t(__attribute__((__leaf__)) strftime)(
 1180|       |    char *__restrict __s, size_t __maxsize, char const *__restrict __format,
 1181|       |    struct tm const *__restrict __tp);
 1182|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) tolower)(
 1183|       |    int __c);
 1184|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) toupper)(
 1185|       |    int __c);
 1186|       |__inline static int iso_week_days(int yday, int wday)
 1187|      0|{
 1188|      0|    int big_enough_multiple_of_7;
 1189|       |
 1190|      0|    {
 1191|      0|        big_enough_multiple_of_7 = 378;
 1192|      0|        return (
 1193|      0|                   ((yday - (((yday - wday) + 4) + big_enough_multiple_of_7) % 7) + 4) -
 1194|      0|                   1);
 1195|      0|    }
 1196|      0|}
 1197|       |#pragma GCC diagnostic push
 1198|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1199|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1200|       |#pragma GCC diagnostic pop
 1201|       |#pragma GCC diagnostic push
 1202|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1203|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1204|       |#pragma GCC diagnostic pop
 1205|       |#pragma GCC diagnostic push
 1206|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1207|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1208|       |#pragma GCC diagnostic pop
 1209|       |extern int close(int __fd);
 1210|       |#pragma GCC diagnostic push
 1211|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1212|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1213|       |#pragma GCC diagnostic pop
 1214|       |extern __attribute__((__nothrow__)) int
 1215|       |sprintf(char *__restrict __s, char const *__restrict __format, ...);
 1216|       |#pragma GCC diagnostic push
 1217|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1218|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1219|       |#pragma GCC diagnostic pop
 1220|       |extern __attribute__((__nothrow__)) int(
 1221|       |    __attribute__((__leaf__)) ferror_unlocked)(FILE *__stream);
 1222|       |#pragma GCC diagnostic push
 1223|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1224|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1225|       |#pragma GCC diagnostic pop
 1226|       |extern
 1227|       |__attribute__((__nothrow__)) int(__attribute__((__leaf__)) clock_settime)(
 1228|       |    clockid_t __clock_id, struct timespec const *__tp);
 1229|       |#pragma GCC diagnostic push
 1230|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1231|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1232|       |int settime(struct timespec const *ts);
 1233|       |#pragma GCC diagnostic pop
 1234|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) settimeofday)(
 1235|       |    struct timeval const *__tv, struct timezone const *__tz);
 1236|       |#pragma GCC diagnostic push
 1237|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1238|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1239|       |#pragma GCC diagnostic pop
 1240|       |int settime(struct timespec const *ts)
 1241|      0|{
 1242|      0|    int r;
 1243|      0|    int tmp;
 1244|      0|    int *tmp___0;
 1245|      0|    struct timeval tv;
 1246|      0|    int tmp___1;
 1247|       |
 1248|      0|    {
 1249|      0|        tmp = clock_settime(0, ts);
 1250|      0|        r = tmp;
 1251|      0|        if (r == 0) {
 1252|      0|            return (r);
 1253|      0|        }
 1254|      0|        else {
 1255|      0|            tmp___0 = __errno_location();
 1256|      0|            if (*tmp___0 == 1) {
 1257|      0|                return (r);
 1258|      0|            }
 1259|      0|        }
 1260|      0|        tv.tv_sec = (__time_t)ts->tv_sec;
 1261|      0|        tv.tv_usec = (__suseconds_t)(ts->tv_nsec / 1000L);
 1262|      0|        tmp___1 =
 1263|      0|            settimeofday((struct timeval const *)(&tv), (struct timezone const *)0);
 1264|      0|        return (tmp___1);
 1265|      0|    }
 1266|      0|}
 1267|       |#pragma GCC diagnostic push
 1268|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1269|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1270|       |#pragma GCC diagnostic pop
 1271|       |#pragma GCC diagnostic push
 1272|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1273|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1274|       |#pragma GCC diagnostic push
 1275|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1276|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1277|       |#pragma GCC diagnostic push
 1278|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1279|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1280|       |#pragma GCC diagnostic pop
 1281|       |#pragma GCC diagnostic push
 1282|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1283|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1284|       |#pragma GCC diagnostic pop
 1285|       |#pragma GCC diagnostic push
 1286|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1287|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1288|       |#pragma GCC diagnostic pop
 1289|       |#pragma GCC diagnostic push
 1290|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1291|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1292|       |#pragma GCC diagnostic push
 1293|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1294|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1295|       |#pragma GCC diagnostic push
 1296|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1297|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1298|       |#pragma GCC diagnostic pop
 1299|       |#pragma GCC diagnostic push
 1300|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1301|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1302|       |#pragma GCC diagnostic pop
 1303|       |extern __attribute__((__noreturn__)) void _exit(int __status);
 1304|       |#pragma GCC diagnostic push
 1305|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1306|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1307|       |#pragma GCC diagnostic pop
 1308|       |#pragma GCC diagnostic push
 1309|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1310|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1311|       |#pragma GCC diagnostic push
 1312|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1313|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1314|       |#pragma GCC diagnostic pop
 1315|       |#pragma GCC diagnostic push
 1316|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1317|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1318|       |#pragma GCC diagnostic pop
 1319|       |#pragma GCC diagnostic push
 1320|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1321|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1322|       |#pragma GCC diagnostic pop
 1323|       |#pragma GCC diagnostic push
 1324|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1325|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1326|       |#pragma GCC diagnostic pop
 1327|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=pure"
 1328|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 1329|       |reg_syntax_t rpl_re_syntax_options;
 1330|       |#pragma GCC diagnostic push
 1331|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1332|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1333|       |#pragma GCC diagnostic pop
 1334|       |#pragma GCC diagnostic push
 1335|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1336|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1337|       |extern int getc_unlocked(FILE *__stream);
 1338|       |#pragma GCC diagnostic push
 1339|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1340|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1341|       |extern FILE *fopen(char const *__restrict __filename,
 1342|       |                   char const *__restrict __modes);
 1343|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) fileno)(
 1344|       |    FILE *__stream);
 1345|       |int(__attribute__((__nonnull__(1))) rpl_fclose)(FILE *fp);
 1346|       |char *quotearg_colon(char const *arg);
 1347|       |extern __attribute__((__nothrow__)) int(__attribute__((
 1348|       |        __nonnull__(1), __leaf__)) gettimeofday)(struct timeval *__restrict __tv,
 1349|       |                __timezone_ptr_t __tz);
 1350|       |#pragma GCC diagnostic push
 1351|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1352|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1353|       |#pragma GCC diagnostic pop
 1354|       |#pragma GCC diagnostic push
 1355|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1356|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1357|       |#pragma GCC diagnostic push
 1358|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1359|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1360|       |#pragma GCC diagnostic push
 1361|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1362|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1363|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=pure"
 1364|       |char const *const quoting_style_args[9];
 1365|       |enum quoting_style const quoting_style_vals[8];
 1366|       |int set_char_quoting(struct quoting_options *o, char c, int i);
 1367|       |char *quotearg_char(char const *arg, char ch);
 1368|       |char *quotearg_char_mem(char const *arg, size_t argsize, char ch);
 1369|       |struct quoting_options quote_quoting_options;
 1370|       |char const *quote_n_mem(int n, char const *arg, size_t argsize);
 1371|       |#pragma GCC diagnostic push
 1372|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1373|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1374|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) iswprint)(
 1375|       |    wint_t __wc);
 1376|       |#pragma GCC diagnostic push
 1377|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 1378|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 1379|       |#pragma GCC diagnostic pop
 1380|       |char const *const quoting_style_args[9] = {
 1381|       |    "literal", "shell",   "shell-always", "c", "c-maybe", "escape",
 1382|       |    "locale",  "clocale", (char const *)0
 1383|       |};
 1384|       |enum quoting_style const quoting_style_vals[8] = {
 1385|       |    (enum quoting_style const)0, (enum quoting_style const)1,
 1386|       |    (enum quoting_style const)2, (enum quoting_style const)3,
 1387|       |    (enum quoting_style const)4, (enum quoting_style const)5,
 1388|       |    (enum quoting_style const)6, (enum quoting_style const)7
 1389|       |};
 1390|       |static struct quoting_options default_quoting_options;
 1391|       |int set_char_quoting(struct quoting_options *o, char c, int i)
 1392|      0|{
 1393|      0|    unsigned char uc;
 1394|      0|    unsigned int *p;
 1395|      0|    struct quoting_options *tmp;
 1396|      0|    int shift;
 1397|      0|    int r;
 1398|       |
 1399|      0|    {
 1400|      0|        uc = (unsigned char)c;
 1401|      0|        if (o) {
 1402|      0|            tmp = o;
 1403|      0|        }
 1404|      0|        else {
 1405|      0|            tmp = &default_quoting_options;
 1406|      0|        }
 1407|      0|        p = tmp->quote_these_too + (unsigned long)uc / (sizeof(int) * 8UL);
 1408|      0|        shift = (int)((unsigned long)uc % (sizeof(int) * 8UL));
 1409|      0|        r = (int)((*p >> shift) & 1U);
 1410|      0|        *p ^= (unsigned int)(((i & 1) ^ r) << shift);
 1411|      0|        return (r);
 1412|      0|    }
 1413|      0|}
 1414|       |static struct quoting_options
 1415|       |quoting_options_from_style(enum quoting_style style)
 1416|      0|{
 1417|      0|    struct quoting_options o;
 1418|      0|    unsigned int tmp;
 1419|       |
 1420|      0|    {
 1421|      0|        o.style = (enum quoting_style)0;
 1422|      0|        o.flags = 0;
 1423|      0|        o.quote_these_too[0] = 0U;
 1424|      0|        tmp = 1U;
 1425|      0|        while (1) {
 1426|       |
 1427|      0|            if (!(!(tmp >= 8U))) {
 1428|      0|                goto while_break;
 1429|      0|            }
 1430|      0|            o.quote_these_too[tmp] = 0U;
 1431|      0|            tmp++;
 1432|      0|        }
 1433|      0|while_break:
 1434|      0|        o.left_quote = (char const *)((void *)0);
 1435|      0|        o.right_quote = (char const *)((void *)0);
 1436|      0|        if ((unsigned int)style == 8U) {
 1437|      0|            abort();
 1438|      0|        }
 1439|      0|        o.style = style;
 1440|      0|        return (o);
 1441|      0|    }
 1442|      0|}
 1443|       |static char const *gettext_quote(char const *msgid, enum quoting_style s)
 1444|      0|{
 1445|      0|    char const *translation;
 1446|      0|    char const *tmp;
 1447|      0|    char const *locale_code;
 1448|      0|    char const *tmp___0;
 1449|      0|    int tmp___1;
 1450|      0|    char const *tmp___2;
 1451|      0|    int tmp___3;
 1452|      0|    char const *tmp___4;
 1453|       |
 1454|      0|    {
 1455|      0|        tmp = (char const *)gettext(msgid);
 1456|      0|        translation = tmp;
 1457|      0|        if ((unsigned long)translation != (unsigned long)msgid) {
 1458|      0|            return (translation);
 1459|      0|        }
 1460|      0|        locale_code = locale_charset();
 1461|      0|        tmp___1 = c_strcasecmp(locale_code, "UTF-8");
 1462|      0|        if (tmp___1 == 0) {
 1463|      0|            if ((int const) * (msgid + 0) == 96) {
 1464|      0|                tmp___0 = "\342\200\230";
 1465|      0|            }
 1466|      0|            else {
 1467|      0|                tmp___0 = "\342\200\231";
 1468|      0|            }
 1469|      0|            return (tmp___0);
 1470|      0|        }
 1471|      0|        tmp___3 = c_strcasecmp(locale_code, "GB18030");
 1472|      0|        if (tmp___3 == 0) {
 1473|      0|            if ((int const) * (msgid + 0) == 96) {
 1474|      0|                tmp___2 = "\241\ae";
 1475|      0|            }
 1476|      0|            else {
 1477|      0|                tmp___2 = "\241\257";
 1478|      0|            }
 1479|      0|            return (tmp___2);
 1480|      0|        }
 1481|      0|        if ((unsigned int)s == 7U) {
 1482|      0|            tmp___4 = "\"";
 1483|      0|        }
 1484|      0|        else {
 1485|      0|            tmp___4 = "\'";
 1486|      0|        }
 1487|      0|        return (tmp___4);
 1488|      0|    }
 1489|      0|}
 1490|       |static size_t
 1491|       |quotearg_buffer_restyled(char *buffer, size_t buffersize, char const *arg,
 1492|       |                         size_t argsize, enum quoting_style quoting_style,
 1493|       |                         int flags, unsigned int const *quote_these_too,
 1494|       |                         char const *left_quote, char const *right_quote)
 1495|      0|{
 1496|      0|    size_t i;
 1497|      0|    size_t len;
 1498|      0|    char const *quote_string;
 1499|      0|    size_t quote_string_len;
 1500|      0|    _Bool backslash_escapes;
 1501|      0|    _Bool unibyte_locale;
 1502|      0|    size_t tmp;
 1503|      0|    _Bool elide_outer_quotes;
 1504|      0|    unsigned char c;
 1505|      0|    unsigned char esc;
 1506|      0|    _Bool is_right_quote;
 1507|      0|    int tmp___0;
 1508|      0|    int tmp___1;
 1509|      0|    size_t m;
 1510|      0|    _Bool printable;
 1511|      0|    unsigned short const **tmp___2;
 1512|      0|    mbstate_t mbstate;
 1513|      0|    wchar_t w;
 1514|      0|    size_t bytes;
 1515|      0|    size_t tmp___3;
 1516|      0|    size_t j;
 1517|      0|    int tmp___4;
 1518|      0|    int tmp___5;
 1519|      0|    size_t ilim;
 1520|      0|    int tmp___6;
 1521|      0|    size_t tmp___7;
 1522|       |
 1523|      0|    {
 1524|      0|        len = (size_t)0;
 1525|      0|        quote_string = (char const *)0;
 1526|      0|        quote_string_len = (size_t)0;
 1527|      0|        backslash_escapes = (_Bool)0;
 1528|      0|        tmp = __ctype_get_mb_cur_max();
 1529|      0|        unibyte_locale = (_Bool)(tmp == 1UL);
 1530|      0|        elide_outer_quotes = (_Bool)((flags & 2) != 0);
 1531|      0|        if ((unsigned int)quoting_style == 4U) {
 1532|      0|            goto case_4;
 1533|      0|        }
 1534|      0|        if ((unsigned int)quoting_style == 3U) {
 1535|      0|            goto case_3;
 1536|      0|        }
 1537|      0|        if ((unsigned int)quoting_style == 5U) {
 1538|      0|            goto case_5;
 1539|      0|        }
 1540|      0|        if ((unsigned int)quoting_style == 6U) {
 1541|      0|            goto case_6;
 1542|      0|        }
 1543|      0|        if ((unsigned int)quoting_style == 7U) {
 1544|      0|            goto case_6;
 1545|      0|        }
 1546|      0|        if ((unsigned int)quoting_style == 8U) {
 1547|      0|            goto case_6;
 1548|      0|        }
 1549|      0|        if ((unsigned int)quoting_style == 1U) {
 1550|      0|            goto case_1;
 1551|      0|        }
 1552|      0|        if ((unsigned int)quoting_style == 2U) {
 1553|      0|            goto case_2;
 1554|      0|        }
 1555|      0|        if ((unsigned int)quoting_style == 0U) {
 1556|      0|            goto case_0;
 1557|      0|        }
 1558|      0|        goto switch_default;
 1559|      0|case_4:
 1560|      0|        quoting_style = (enum quoting_style)3;
 1561|      0|        elide_outer_quotes = (_Bool)1;
 1562|      0|case_3:
 1563|      0|        if (!elide_outer_quotes) {
 1564|      0|            while (1) {
 1565|       |
 1566|      0|                if (len < buffersize) {
 1567|      0|                    *(buffer + len) = (char)'\"';
 1568|      0|                }
 1569|      0|                len++;
 1570|      0|                goto while_break;
 1571|      0|            }
 1572|      0|while_break:
 1573|      0|            ;
 1574|      0|        }
 1575|      0|        backslash_escapes = (_Bool)1;
 1576|      0|        quote_string = "\"";
 1577|      0|        quote_string_len = (size_t)1;
 1578|      0|        goto switch_break;
 1579|      0|case_5:
 1580|      0|        backslash_escapes = (_Bool)1;
 1581|      0|        elide_outer_quotes = (_Bool)0;
 1582|      0|        goto switch_break;
 1583|      0|case_6:
 1584|      0|        if ((unsigned int)quoting_style != 8U) {
 1585|      0|            left_quote = gettext_quote("`", quoting_style);
 1586|      0|            right_quote = gettext_quote("\'", quoting_style);
 1587|      0|        }
 1588|      0|        if (!elide_outer_quotes) {
 1589|      0|            quote_string = left_quote;
 1590|      0|            while (1) {
 1591|       |
 1592|      0|                if (!*quote_string) {
 1593|      0|                    goto while_break___0;
 1594|      0|                }
 1595|      0|                while (1) {
 1596|       |
 1597|      0|                    if (len < buffersize) {
 1598|      0|                        *(buffer + len) = (char)*quote_string;
 1599|      0|                    }
 1600|      0|                    len++;
 1601|      0|                    goto while_break___1;
 1602|      0|                }
 1603|      0|while_break___1:
 1604|      0|                quote_string++;
 1605|      0|            }
 1606|      0|while_break___0:
 1607|      0|            ;
 1608|      0|        }
 1609|      0|        backslash_escapes = (_Bool)1;
 1610|      0|        quote_string = right_quote;
 1611|      0|        quote_string_len = strlen(quote_string);
 1612|      0|        goto switch_break;
 1613|      0|case_1:
 1614|      0|        quoting_style = (enum quoting_style)2;
 1615|      0|        elide_outer_quotes = (_Bool)1;
 1616|      0|case_2:
 1617|      0|        if (!elide_outer_quotes) {
 1618|      0|            while (1) {
 1619|       |
 1620|      0|                if (len < buffersize) {
 1621|      0|                    *(buffer + len) = (char)'\'';
 1622|      0|                }
 1623|      0|                len++;
 1624|      0|                goto while_break___2;
 1625|      0|            }
 1626|      0|while_break___2:
 1627|      0|            ;
 1628|      0|        }
 1629|      0|        quote_string = "\'";
 1630|      0|        quote_string_len = (size_t)1;
 1631|      0|        goto switch_break;
 1632|      0|case_0:
 1633|      0|        elide_outer_quotes = (_Bool)0;
 1634|      0|        goto switch_break;
 1635|      0|switch_default:
 1636|      0|        abort();
 1637|      0|switch_break:
 1638|      0|        i = (size_t)0;
 1639|      0|        while (1) {
 1640|       |
 1641|      0|            if (argsize == 0xffffffffffffffffUL) {
 1642|      0|                tmp___6 = (int const) * (arg + i) == 0;
 1643|      0|            }
 1644|      0|            else {
 1645|      0|                tmp___6 = i == argsize;
 1646|      0|            }
 1647|      0|            if (tmp___6) {
 1648|      0|                goto while_break___3;
 1649|      0|            }
 1650|      0|            is_right_quote = (_Bool)0;
 1651|      0|            if (backslash_escapes) {
 1652|      0|                if (quote_string_len) {
 1653|      0|                    if (i + quote_string_len <= argsize) {
 1654|      0|                        tmp___0 = memcmp((void const *)(arg + i),
 1655|      0|                                         (void const *)quote_string, quote_string_len);
 1656|      0|                        if (tmp___0 == 0) {
 1657|      0|                            if (elide_outer_quotes) {
 1658|      0|                                goto force_outer_quoting_style;
 1659|      0|                            }
 1660|      0|                            is_right_quote = (_Bool)1;
 1661|      0|                        }
 1662|      0|                    }
 1663|      0|                }
 1664|      0|            }
 1665|      0|            c = (unsigned char)*(arg + i);
 1666|      0|            if ((int)c == 0) {
 1667|      0|                goto case_0___0;
 1668|      0|            }
 1669|      0|            if ((int)c == 63) {
 1670|      0|                goto case_63;
 1671|      0|            }
 1672|      0|            if ((int)c == 7) {
 1673|      0|                goto case_7___0;
 1674|      0|            }
 1675|      0|            if ((int)c == 8) {
 1676|      0|                goto case_8___0;
 1677|      0|            }
 1678|      0|            if ((int)c == 12) {
 1679|      0|                goto case_12;
 1680|      0|            }
 1681|      0|            if ((int)c == 10) {
 1682|      0|                goto case_10;
 1683|      0|            }
 1684|      0|            if ((int)c == 13) {
 1685|      0|                goto case_13;
 1686|      0|            }
 1687|      0|            if ((int)c == 9) {
 1688|      0|                goto case_9;
 1689|      0|            }
 1690|      0|            if ((int)c == 11) {
 1691|      0|                goto case_11;
 1692|      0|            }
 1693|      0|            if ((int)c == 92) {
 1694|      0|                goto case_92;
 1695|      0|            }
 1696|      0|            if ((int)c == 123) {
 1697|      0|                goto case_123;
 1698|      0|            }
 1699|      0|            if ((int)c == 125) {
 1700|      0|                goto case_123;
 1701|      0|            }
 1702|      0|            if ((int)c == 35) {
 1703|      0|                goto case_35;
 1704|      0|            }
 1705|      0|            if ((int)c == 126) {
 1706|      0|                goto case_35;
 1707|      0|            }
 1708|      0|            if ((int)c == 32) {
 1709|      0|                goto case_32;
 1710|      0|            }
 1711|      0|            if ((int)c == 33) {
 1712|      0|                goto case_32;
 1713|      0|            }
 1714|      0|            if ((int)c == 34) {
 1715|      0|                goto case_32;
 1716|      0|            }
 1717|      0|            if ((int)c == 36) {
 1718|      0|                goto case_32;
 1719|      0|            }
 1720|      0|            if ((int)c == 38) {
 1721|      0|                goto case_32;
 1722|      0|            }
 1723|      0|            if ((int)c == 40) {
 1724|      0|                goto case_32;
 1725|      0|            }
 1726|      0|            if ((int)c == 41) {
 1727|      0|                goto case_32;
 1728|      0|            }
 1729|      0|            if ((int)c == 42) {
 1730|      0|                goto case_32;
 1731|      0|            }
 1732|      0|            if ((int)c == 59) {
 1733|      0|                goto case_32;
 1734|      0|            }
 1735|      0|            if ((int)c == 60) {
 1736|      0|                goto case_32;
 1737|      0|            }
 1738|      0|            if ((int)c == 61) {
 1739|      0|                goto case_32;
 1740|      0|            }
 1741|      0|            if ((int)c == 62) {
 1742|      0|                goto case_32;
 1743|      0|            }
 1744|      0|            if ((int)c == 91) {
 1745|      0|                goto case_32;
 1746|      0|            }
 1747|      0|            if ((int)c == 94) {
 1748|      0|                goto case_32;
 1749|      0|            }
 1750|      0|            if ((int)c == 96) {
 1751|      0|                goto case_32;
 1752|      0|            }
 1753|      0|            if ((int)c == 124) {
 1754|      0|                goto case_32;
 1755|      0|            }
 1756|      0|            if ((int)c == 39) {
 1757|      0|                goto case_39___0;
 1758|      0|            }
 1759|      0|            if ((int)c == 37) {
 1760|      0|                goto case_37;
 1761|      0|            }
 1762|      0|            if ((int)c == 43) {
 1763|      0|                goto case_37;
 1764|      0|            }
 1765|      0|            if ((int)c == 44) {
 1766|      0|                goto case_37;
 1767|      0|            }
 1768|      0|            if ((int)c == 45) {
 1769|      0|                goto case_37;
 1770|      0|            }
 1771|      0|            if ((int)c == 46) {
 1772|      0|                goto case_37;
 1773|      0|            }
 1774|      0|            if ((int)c == 47) {
 1775|      0|                goto case_37;
 1776|      0|            }
 1777|      0|            if ((int)c == 48) {
 1778|      0|                goto case_37;
 1779|      0|            }
 1780|      0|            if ((int)c == 49) {
 1781|      0|                goto case_37;
 1782|      0|            }
 1783|      0|            if ((int)c == 50) {
 1784|      0|                goto case_37;
 1785|      0|            }
 1786|      0|            if ((int)c == 51) {
 1787|      0|                goto case_37;
 1788|      0|            }
 1789|      0|            if ((int)c == 52) {
 1790|      0|                goto case_37;
 1791|      0|            }
 1792|      0|            if ((int)c == 53) {
 1793|      0|                goto case_37;
 1794|      0|            }
 1795|      0|            if ((int)c == 54) {
 1796|      0|                goto case_37;
 1797|      0|            }
 1798|      0|            if ((int)c == 55) {
 1799|      0|                goto case_37;
 1800|      0|            }
 1801|      0|            if ((int)c == 56) {
 1802|      0|                goto case_37;
 1803|      0|            }
 1804|      0|            if ((int)c == 57) {
 1805|      0|                goto case_37;
 1806|      0|            }
 1807|      0|            if ((int)c == 58) {
 1808|      0|                goto case_37;
 1809|      0|            }
 1810|      0|            if ((int)c == 65) {
 1811|      0|                goto case_37;
 1812|      0|            }
 1813|      0|            if ((int)c == 66) {
 1814|      0|                goto case_37;
 1815|      0|            }
 1816|      0|            if ((int)c == 67) {
 1817|      0|                goto case_37;
 1818|      0|            }
 1819|      0|            if ((int)c == 68) {
 1820|      0|                goto case_37;
 1821|      0|            }
 1822|      0|            if ((int)c == 69) {
 1823|      0|                goto case_37;
 1824|      0|            }
 1825|      0|            if ((int)c == 70) {
 1826|      0|                goto case_37;
 1827|      0|            }
 1828|      0|            if ((int)c == 71) {
 1829|      0|                goto case_37;
 1830|      0|            }
 1831|      0|            if ((int)c == 72) {
 1832|      0|                goto case_37;
 1833|      0|            }
 1834|      0|            if ((int)c == 73) {
 1835|      0|                goto case_37;
 1836|      0|            }
 1837|      0|            if ((int)c == 74) {
 1838|      0|                goto case_37;
 1839|      0|            }
 1840|      0|            if ((int)c == 75) {
 1841|      0|                goto case_37;
 1842|      0|            }
 1843|      0|            if ((int)c == 76) {
 1844|      0|                goto case_37;
 1845|      0|            }
 1846|      0|            if ((int)c == 77) {
 1847|      0|                goto case_37;
 1848|      0|            }
 1849|      0|            if ((int)c == 78) {
 1850|      0|                goto case_37;
 1851|      0|            }
 1852|      0|            if ((int)c == 79) {
 1853|      0|                goto case_37;
 1854|      0|            }
 1855|      0|            if ((int)c == 80) {
 1856|      0|                goto case_37;
 1857|      0|            }
 1858|      0|            if ((int)c == 81) {
 1859|      0|                goto case_37;
 1860|      0|            }
 1861|      0|            if ((int)c == 82) {
 1862|      0|                goto case_37;
 1863|      0|            }
 1864|      0|            if ((int)c == 83) {
 1865|      0|                goto case_37;
 1866|      0|            }
 1867|      0|            if ((int)c == 84) {
 1868|      0|                goto case_37;
 1869|      0|            }
 1870|      0|            if ((int)c == 85) {
 1871|      0|                goto case_37;
 1872|      0|            }
 1873|      0|            if ((int)c == 86) {
 1874|      0|                goto case_37;
 1875|      0|            }
 1876|      0|            if ((int)c == 87) {
 1877|      0|                goto case_37;
 1878|      0|            }
 1879|      0|            if ((int)c == 88) {
 1880|      0|                goto case_37;
 1881|      0|            }
 1882|      0|            if ((int)c == 89) {
 1883|      0|                goto case_37;
 1884|      0|            }
 1885|      0|            if ((int)c == 90) {
 1886|      0|                goto case_37;
 1887|      0|            }
 1888|      0|            if ((int)c == 93) {
 1889|      0|                goto case_37;
 1890|      0|            }
 1891|      0|            if ((int)c == 95) {
 1892|      0|                goto case_37;
 1893|      0|            }
 1894|      0|            if ((int)c == 97) {
 1895|      0|                goto case_37;
 1896|      0|            }
 1897|      0|            if ((int)c == 98) {
 1898|      0|                goto case_37;
 1899|      0|            }
 1900|      0|            if ((int)c == 99) {
 1901|      0|                goto case_37;
 1902|      0|            }
 1903|      0|            if ((int)c == 100) {
 1904|      0|                goto case_37;
 1905|      0|            }
 1906|      0|            if ((int)c == 101) {
 1907|      0|                goto case_37;
 1908|      0|            }
 1909|      0|            if ((int)c == 102) {
 1910|      0|                goto case_37;
 1911|      0|            }
 1912|      0|            if ((int)c == 103) {
 1913|      0|                goto case_37;
 1914|      0|            }
 1915|      0|            if ((int)c == 104) {
 1916|      0|                goto case_37;
 1917|      0|            }
 1918|      0|            if ((int)c == 105) {
 1919|      0|                goto case_37;
 1920|      0|            }
 1921|      0|            if ((int)c == 106) {
 1922|      0|                goto case_37;
 1923|      0|            }
 1924|      0|            if ((int)c == 107) {
 1925|      0|                goto case_37;
 1926|      0|            }
 1927|      0|            if ((int)c == 108) {
 1928|      0|                goto case_37;
 1929|      0|            }
 1930|      0|            if ((int)c == 109) {
 1931|      0|                goto case_37;
 1932|      0|            }
 1933|      0|            if ((int)c == 110) {
 1934|      0|                goto case_37;
 1935|      0|            }
 1936|      0|            if ((int)c == 111) {
 1937|      0|                goto case_37;
 1938|      0|            }
 1939|      0|            if ((int)c == 112) {
 1940|      0|                goto case_37;
 1941|      0|            }
 1942|      0|            if ((int)c == 113) {
 1943|      0|                goto case_37;
 1944|      0|            }
 1945|      0|            if ((int)c == 114) {
 1946|      0|                goto case_37;
 1947|      0|            }
 1948|      0|            if ((int)c == 115) {
 1949|      0|                goto case_37;
 1950|      0|            }
 1951|      0|            if ((int)c == 116) {
 1952|      0|                goto case_37;
 1953|      0|            }
 1954|      0|            if ((int)c == 117) {
 1955|      0|                goto case_37;
 1956|      0|            }
 1957|      0|            if ((int)c == 118) {
 1958|      0|                goto case_37;
 1959|      0|            }
 1960|      0|            if ((int)c == 119) {
 1961|      0|                goto case_37;
 1962|      0|            }
 1963|      0|            if ((int)c == 120) {
 1964|      0|                goto case_37;
 1965|      0|            }
 1966|      0|            if ((int)c == 121) {
 1967|      0|                goto case_37;
 1968|      0|            }
 1969|      0|            if ((int)c == 122) {
 1970|      0|                goto case_37;
 1971|      0|            }
 1972|      0|            goto switch_default___2;
 1973|      0|case_0___0:
 1974|      0|            if (backslash_escapes) {
 1975|      0|                if (elide_outer_quotes) {
 1976|      0|                    goto force_outer_quoting_style;
 1977|      0|                }
 1978|      0|                while (1) {
 1979|       |
 1980|      0|                    if (len < buffersize) {
 1981|      0|                        *(buffer + len) = (char)'\\';
 1982|      0|                    }
 1983|      0|                    len++;
 1984|      0|                    goto while_break___4;
 1985|      0|                }
 1986|      0|while_break___4:
 1987|      0|                ;
 1988|      0|                if (i + 1UL < argsize) {
 1989|      0|                    if (48 <= (int)*(arg + (i + 1UL))) {
 1990|      0|                        if ((int const) * (arg + (i + 1UL)) <= 57) {
 1991|      0|                            while (1) {
 1992|       |
 1993|      0|                                if (len < buffersize) {
 1994|      0|                                    *(buffer + len) = (char)'0';
 1995|      0|                                }
 1996|      0|                                len++;
 1997|      0|                                goto while_break___5;
 1998|      0|                            }
 1999|      0|while_break___5:
 2000|      0|                            ;
 2001|      0|                            while (1) {
 2002|       |
 2003|      0|                                if (len < buffersize) {
 2004|      0|                                    *(buffer + len) = (char)'0';
 2005|      0|                                }
 2006|      0|                                len++;
 2007|      0|                                goto while_break___6;
 2008|      0|                            }
 2009|      0|while_break___6:
 2010|      0|                            ;
 2011|      0|                        }
 2012|      0|                    }
 2013|      0|                }
 2014|      0|                c = (unsigned char)'0';
 2015|      0|            }
 2016|      0|            else {
 2017|      0|                if (flags & 1) {
 2018|      0|                    goto __Cont;
 2019|      0|                }
 2020|      0|            }
 2021|      0|            goto switch_break___0;
 2022|      0|case_63:
 2023|      0|            if ((unsigned int)quoting_style == 2U) {
 2024|      0|                goto case_2___0;
 2025|      0|            }
 2026|      0|            if ((unsigned int)quoting_style == 3U) {
 2027|      0|                goto case_3___0;
 2028|      0|            }
 2029|      0|            goto switch_default___1;
 2030|      0|case_2___0:
 2031|      0|            if (elide_outer_quotes) {
 2032|      0|                goto force_outer_quoting_style;
 2033|      0|            }
 2034|      0|            goto switch_break___1;
 2035|      0|case_3___0:
 2036|      0|            if (flags & 4) {
 2037|      0|                if (i + 2UL < argsize) {
 2038|      0|                    if ((int const) * (arg + (i + 1UL)) == 63) {
 2039|      0|                        if ((int const) * (arg + (i + 2UL)) == 33) {
 2040|      0|                            goto case_33;
 2041|      0|                        }
 2042|      0|                        if ((int const) * (arg + (i + 2UL)) == 39) {
 2043|      0|                            goto case_33;
 2044|      0|                        }
 2045|      0|                        if ((int const) * (arg + (i + 2UL)) == 40) {
 2046|      0|                            goto case_33;
 2047|      0|                        }
 2048|      0|                        if ((int const) * (arg + (i + 2UL)) == 41) {
 2049|      0|                            goto case_33;
 2050|      0|                        }
 2051|      0|                        if ((int const) * (arg + (i + 2UL)) == 45) {
 2052|      0|                            goto case_33;
 2053|      0|                        }
 2054|      0|                        if ((int const) * (arg + (i + 2UL)) == 47) {
 2055|      0|                            goto case_33;
 2056|      0|                        }
 2057|      0|                        if ((int const) * (arg + (i + 2UL)) == 60) {
 2058|      0|                            goto case_33;
 2059|      0|                        }
 2060|      0|                        if ((int const) * (arg + (i + 2UL)) == 61) {
 2061|      0|                            goto case_33;
 2062|      0|                        }
 2063|      0|                        if ((int const) * (arg + (i + 2UL)) == 62) {
 2064|      0|                            goto case_33;
 2065|      0|                        }
 2066|      0|                        goto switch_default___0;
 2067|      0|case_33:
 2068|      0|                        if (elide_outer_quotes) {
 2069|      0|                            goto force_outer_quoting_style;
 2070|      0|                        }
 2071|      0|                        c = (unsigned char)*(arg + (i + 2UL));
 2072|      0|                        i += 2UL;
 2073|      0|                        while (1) {
 2074|       |
 2075|      0|                            if (len < buffersize) {
 2076|      0|                                *(buffer + len) = (char)'?';
 2077|      0|                            }
 2078|      0|                            len++;
 2079|      0|                            goto while_break___7;
 2080|      0|                        }
 2081|      0|while_break___7:
 2082|      0|                        ;
 2083|      0|                        while (1) {
 2084|       |
 2085|      0|                            if (len < buffersize) {
 2086|      0|                                *(buffer + len) = (char)'\"';
 2087|      0|                            }
 2088|      0|                            len++;
 2089|      0|                            goto while_break___8;
 2090|      0|                        }
 2091|      0|while_break___8:
 2092|      0|                        ;
 2093|      0|                        while (1) {
 2094|       |
 2095|      0|                            if (len < buffersize) {
 2096|      0|                                *(buffer + len) = (char)'\"';
 2097|      0|                            }
 2098|      0|                            len++;
 2099|      0|                            goto while_break___9;
 2100|      0|                        }
 2101|      0|while_break___9:
 2102|      0|                        ;
 2103|      0|                        while (1) {
 2104|       |
 2105|      0|                            if (len < buffersize) {
 2106|      0|                                *(buffer + len) = (char)'?';
 2107|      0|                            }
 2108|      0|                            len++;
 2109|      0|                            goto while_break___10;
 2110|      0|                        }
 2111|      0|while_break___10:
 2112|      0|                        ;
 2113|      0|                        goto switch_break___2;
 2114|      0|switch_default___0:
 2115|      0|                        goto switch_break___2;
 2116|      0|switch_break___2:
 2117|      0|                        ;
 2118|      0|                    }
 2119|      0|                }
 2120|      0|            }
 2121|      0|            goto switch_break___1;
 2122|      0|switch_default___1:
 2123|      0|            goto switch_break___1;
 2124|      0|switch_break___1:
 2125|      0|            ;
 2126|      0|            goto switch_break___0;
 2127|      0|case_7___0:
 2128|      0|            esc = (unsigned char)'a';
 2129|      0|            goto c_escape;
 2130|      0|case_8___0:
 2131|      0|            esc = (unsigned char)'b';
 2132|      0|            goto c_escape;
 2133|      0|case_12:
 2134|      0|            esc = (unsigned char)'f';
 2135|      0|            goto c_escape;
 2136|      0|case_10:
 2137|      0|            esc = (unsigned char)'n';
 2138|      0|            goto c_and_shell_escape;
 2139|      0|case_13:
 2140|      0|            esc = (unsigned char)'r';
 2141|      0|            goto c_and_shell_escape;
 2142|      0|case_9:
 2143|      0|            esc = (unsigned char)'t';
 2144|      0|            goto c_and_shell_escape;
 2145|      0|case_11:
 2146|      0|            esc = (unsigned char)'v';
 2147|      0|            goto c_escape;
 2148|      0|case_92:
 2149|      0|            esc = c;
 2150|      0|            if (backslash_escapes) {
 2151|      0|                if (elide_outer_quotes) {
 2152|      0|                    if (quote_string_len) {
 2153|      0|                        goto store_c;
 2154|      0|                    }
 2155|      0|                }
 2156|      0|            }
 2157|      0|c_and_shell_escape:
 2158|      0|            if ((unsigned int)quoting_style == 2U) {
 2159|      0|                if (elide_outer_quotes) {
 2160|      0|                    goto force_outer_quoting_style;
 2161|      0|                }
 2162|      0|            }
 2163|      0|c_escape:
 2164|      0|            if (backslash_escapes) {
 2165|      0|                c = esc;
 2166|      0|                goto store_escape;
 2167|      0|            }
 2168|      0|            goto switch_break___0;
 2169|      0|case_123:
 2170|      0|            if (argsize == 0xffffffffffffffffUL) {
 2171|      0|                tmp___1 = (int const) * (arg + 1) == 0;
 2172|      0|            }
 2173|      0|            else {
 2174|      0|                tmp___1 = argsize == 1UL;
 2175|      0|            }
 2176|      0|            if (!tmp___1) {
 2177|      0|                goto switch_break___0;
 2178|      0|            }
 2179|      0|case_35:
 2180|      0|            if (i != 0UL) {
 2181|      0|                goto switch_break___0;
 2182|      0|            }
 2183|      0|case_32:
 2184|      0|            if ((unsigned int)quoting_style == 2U) {
 2185|      0|                if (elide_outer_quotes) {
 2186|      0|                    goto force_outer_quoting_style;
 2187|      0|                }
 2188|      0|            }
 2189|      0|            goto switch_break___0;
 2190|      0|case_39___0:
 2191|      0|            if ((unsigned int)quoting_style == 2U) {
 2192|      0|                if (elide_outer_quotes) {
 2193|      0|                    goto force_outer_quoting_style;
 2194|      0|                }
 2195|      0|                while (1) {
 2196|       |
 2197|      0|                    if (len < buffersize) {
 2198|      0|                        *(buffer + len) = (char)'\'';
 2199|      0|                    }
 2200|      0|                    len++;
 2201|      0|                    goto while_break___11;
 2202|      0|                }
 2203|      0|while_break___11:
 2204|      0|                ;
 2205|      0|                while (1) {
 2206|       |
 2207|      0|                    if (len < buffersize) {
 2208|      0|                        *(buffer + len) = (char)'\\';
 2209|      0|                    }
 2210|      0|                    len++;
 2211|      0|                    goto while_break___12;
 2212|      0|                }
 2213|      0|while_break___12:
 2214|      0|                ;
 2215|      0|                while (1) {
 2216|       |
 2217|      0|                    if (len < buffersize) {
 2218|      0|                        *(buffer + len) = (char)'\'';
 2219|      0|                    }
 2220|      0|                    len++;
 2221|      0|                    goto while_break___13;
 2222|      0|                }
 2223|      0|while_break___13:
 2224|      0|                ;
 2225|      0|            }
 2226|      0|            goto switch_break___0;
 2227|      0|case_37:
 2228|      0|            goto switch_break___0;
 2229|      0|switch_default___2:
 2230|      0|            if (unibyte_locale) {
 2231|      0|                m = (size_t)1;
 2232|      0|                tmp___2 = __ctype_b_loc();
 2233|      0|                printable = (_Bool)(((int const) * (*tmp___2 + (int)c) & 16384) != 0);
 2234|      0|            }
 2235|      0|            else {
 2236|      0|                memset((void *)(&mbstate), 0, sizeof(mbstate));
 2237|      0|                m = (size_t)0;
 2238|      0|                printable = (_Bool)1;
 2239|      0|                if (argsize == 0xffffffffffffffffUL) {
 2240|      0|                    argsize = strlen(arg);
 2241|      0|                }
 2242|      0|                while (1) {
 2243|      0|                    tmp___3 = mbrtowc(&w, arg + (i + m), argsize - (i + m), &mbstate);
 2244|      0|                    bytes = tmp___3;
 2245|      0|                    if (bytes == 0UL) {
 2246|      0|                        goto while_break___14;
 2247|      0|                    }
 2248|      0|                    else {
 2249|      0|                        if (bytes == 0xffffffffffffffffUL) {
 2250|      0|                            printable = (_Bool)0;
 2251|      0|                            goto while_break___14;
 2252|      0|                        }
 2253|      0|                        else {
 2254|      0|                            if (bytes == 0xfffffffffffffffeUL) {
 2255|      0|                                printable = (_Bool)0;
 2256|      0|                                while (1) {
 2257|       |
 2258|      0|                                    if (i + m < argsize) {
 2259|      0|                                        if (!*(arg + (i + m))) {
 2260|      0|                                            goto while_break___15;
 2261|      0|                                        }
 2262|      0|                                    }
 2263|      0|                                    else {
 2264|      0|                                        goto while_break___15;
 2265|      0|                                    }
 2266|      0|                                    m++;
 2267|      0|                                }
 2268|      0|while_break___15:
 2269|      0|                                ;
 2270|      0|                                goto while_break___14;
 2271|      0|                            }
 2272|      0|                            else {
 2273|      0|                                if (elide_outer_quotes) {
 2274|      0|                                    if ((unsigned int)quoting_style == 2U) {
 2275|      0|                                        j = (size_t)1;
 2276|      0|                                        while (1) {
 2277|       |
 2278|      0|                                            if (!(j < bytes)) {
 2279|      0|                                                goto while_break___16;
 2280|      0|                                            }
 2281|      0|                                            if ((int const) * (arg + ((i + m) + j)) == 91) {
 2282|      0|                                                goto case_91___0;
 2283|      0|                                            }
 2284|      0|                                            if ((int const) * (arg + ((i + m) + j)) == 92) {
 2285|      0|                                                goto case_91___0;
 2286|      0|                                            }
 2287|      0|                                            if ((int const) * (arg + ((i + m) + j)) == 94) {
 2288|      0|                                                goto case_91___0;
 2289|      0|                                            }
 2290|      0|                                            if ((int const) * (arg + ((i + m) + j)) == 96) {
 2291|      0|                                                goto case_91___0;
 2292|      0|                                            }
 2293|      0|                                            if ((int const) * (arg + ((i + m) + j)) == 124) {
 2294|      0|                                                goto case_91___0;
 2295|      0|                                            }
 2296|      0|                                            goto switch_default___3;
 2297|      0|case_91___0:
 2298|      0|                                            goto force_outer_quoting_style;
 2299|      0|switch_default___3:
 2300|      0|                                            goto switch_break___3;
 2301|      0|switch_break___3:
 2302|      0|                                            j++;
 2303|      0|                                        }
 2304|      0|while_break___16:
 2305|      0|                                        ;
 2306|      0|                                    }
 2307|      0|                                }
 2308|      0|                                tmp___4 = iswprint((wint_t)w);
 2309|      0|                                if (!tmp___4) {
 2310|      0|                                    printable = (_Bool)0;
 2311|      0|                                }
 2312|      0|                                m += bytes;
 2313|      0|                            }
 2314|      0|                        }
 2315|      0|                    }
 2316|      0|                    tmp___5 = mbsinit((mbstate_t const *)(&mbstate));
 2317|      0|                    if (tmp___5) {
 2318|      0|                        goto while_break___14;
 2319|      0|                    }
 2320|      0|                }
 2321|      0|while_break___14:
 2322|      0|                ;
 2323|      0|            }
 2324|      0|            if (1UL < m) {
 2325|      0|                goto _L___0;
 2326|      0|            }
 2327|      0|            else {
 2328|      0|                if (backslash_escapes) {
 2329|      0|                    if (!printable) {
 2330|      0|_L___0:
 2331|      0|                        ilim = i + m;
 2332|      0|                        while (1) {
 2333|       |
 2334|      0|                            if (backslash_escapes) {
 2335|      0|                                if (!printable) {
 2336|      0|                                    if (elide_outer_quotes) {
 2337|      0|                                        goto force_outer_quoting_style;
 2338|      0|                                    }
 2339|      0|                                    while (1) {
 2340|       |
 2341|      0|                                        if (len < buffersize) {
 2342|      0|                                            *(buffer + len) = (char)'\\';
 2343|      0|                                        }
 2344|      0|                                        len++;
 2345|      0|                                        goto while_break___18;
 2346|      0|                                    }
 2347|      0|while_break___18:
 2348|      0|                                    ;
 2349|      0|                                    while (1) {
 2350|       |
 2351|      0|                                        if (len < buffersize) {
 2352|      0|                                            *(buffer + len) = (char)(48 + ((int)c >> 6));
 2353|      0|                                        }
 2354|      0|                                        len++;
 2355|      0|                                        goto while_break___19;
 2356|      0|                                    }
 2357|      0|while_break___19:
 2358|      0|                                    ;
 2359|      0|                                    while (1) {
 2360|       |
 2361|      0|                                        if (len < buffersize) {
 2362|      0|                                            *(buffer + len) = (char)(48 + (((int)c >> 3) & 7));
 2363|      0|                                        }
 2364|      0|                                        len++;
 2365|      0|                                        goto while_break___20;
 2366|      0|                                    }
 2367|      0|while_break___20:
 2368|      0|                                    c = (unsigned char)(48 + ((int)c & 7));
 2369|      0|                                }
 2370|      0|                                else {
 2371|      0|                                    goto _L;
 2372|      0|                                }
 2373|      0|                            }
 2374|      0|                            else {
 2375|      0|_L:
 2376|      0|                                if (is_right_quote) {
 2377|      0|                                    while (1) {
 2378|       |
 2379|      0|                                        if (len < buffersize) {
 2380|      0|                                            *(buffer + len) = (char)'\\';
 2381|      0|                                        }
 2382|      0|                                        len++;
 2383|      0|                                        goto while_break___21;
 2384|      0|                                    }
 2385|      0|while_break___21:
 2386|      0|                                    is_right_quote = (_Bool)0;
 2387|      0|                                }
 2388|      0|                            }
 2389|      0|                            if (ilim <= i + 1UL) {
 2390|      0|                                goto while_break___17;
 2391|      0|                            }
 2392|      0|                            while (1) {
 2393|       |
 2394|      0|                                if (len < buffersize) {
 2395|      0|                                    *(buffer + len) = (char)c;
 2396|      0|                                }
 2397|      0|                                len++;
 2398|      0|                                goto while_break___22;
 2399|      0|                            }
 2400|      0|while_break___22:
 2401|      0|                            i++;
 2402|      0|                            c = (unsigned char)*(arg + i);
 2403|      0|                        }
 2404|      0|while_break___17:
 2405|      0|                        ;
 2406|      0|                        goto store_c;
 2407|      0|                    }
 2408|      0|                }
 2409|      0|            }
 2410|      0|switch_break___0:
 2411|      0|            ;
 2412|      0|            if (backslash_escapes) {
 2413|      0|                goto _L___3;
 2414|      0|            }
 2415|      0|            else {
 2416|      0|                if (elide_outer_quotes) {
 2417|      0|_L___3:
 2418|      0|                    if (quote_these_too) {
 2419|      0|                        if (!(*(quote_these_too + (unsigned long)c / (sizeof(int) * 8UL)) &
 2420|      0|                                (unsigned int const)(1 << (unsigned long)c %
 2421|      0|                                                     (sizeof(int) * 8UL)))) {
 2422|      0|                            goto _L___2;
 2423|      0|                        }
 2424|      0|                    }
 2425|      0|                    else {
 2426|      0|                        goto _L___2;
 2427|      0|                    }
 2428|      0|                }
 2429|      0|                else {
 2430|      0|_L___2:
 2431|      0|                    if (!is_right_quote) {
 2432|      0|                        goto store_c;
 2433|      0|                    }
 2434|      0|                }
 2435|      0|            }
 2436|      0|store_escape:
 2437|      0|            if (elide_outer_quotes) {
 2438|      0|                goto force_outer_quoting_style;
 2439|      0|            }
 2440|      0|            while (1) {
 2441|       |
 2442|      0|                if (len < buffersize) {
 2443|      0|                    *(buffer + len) = (char)'\\';
 2444|      0|                }
 2445|      0|                len++;
 2446|      0|                goto while_break___23;
 2447|      0|            }
 2448|      0|while_break___23:
 2449|      0|            ;
 2450|      0|store_c:
 2451|      0|            while (1) {
 2452|       |
 2453|      0|                if (len < buffersize) {
 2454|      0|                    *(buffer + len) = (char)c;
 2455|      0|                }
 2456|      0|                len++;
 2457|      0|                goto while_break___24;
 2458|      0|            }
 2459|      0|while_break___24:
 2460|      0|            ;
 2461|      0|__Cont:
 2462|      0|            i++;
 2463|      0|        }
 2464|      0|while_break___3:
 2465|      0|        ;
 2466|      0|        if (len == 0UL) {
 2467|      0|            if ((unsigned int)quoting_style == 2U) {
 2468|      0|                if (elide_outer_quotes) {
 2469|      0|                    goto force_outer_quoting_style;
 2470|      0|                }
 2471|      0|            }
 2472|      0|        }
 2473|      0|        if (quote_string) {
 2474|      0|            if (!elide_outer_quotes) {
 2475|      0|                while (1) {
 2476|       |
 2477|      0|                    if (!*quote_string) {
 2478|      0|                        goto while_break___25;
 2479|      0|                    }
 2480|      0|                    while (1) {
 2481|       |
 2482|      0|                        if (len < buffersize) {
 2483|      0|                            *(buffer + len) = (char)*quote_string;
 2484|      0|                        }
 2485|      0|                        len++;
 2486|      0|                        goto while_break___26;
 2487|      0|                    }
 2488|      0|while_break___26:
 2489|      0|                    quote_string++;
 2490|      0|                }
 2491|      0|while_break___25:
 2492|      0|                ;
 2493|      0|            }
 2494|      0|        }
 2495|      0|        if (len < buffersize) {
 2496|      0|            *(buffer + len) = (char)'\000';
 2497|      0|        }
 2498|      0|        return (len);
 2499|      0|force_outer_quoting_style:
 2500|      0|        tmp___7 = quotearg_buffer_restyled(
 2501|      0|                      buffer, buffersize, arg, argsize, quoting_style, flags & -3,
 2502|      0|                      (unsigned int const *)((void *)0), left_quote, right_quote);
 2503|      0|        return (tmp___7);
 2504|      0|    }
 2505|      0|}
 2506|       |static char slot0[256];
 2507|       |static unsigned int nslots = 1U;
 2508|       |static struct slotvec slotvec0 = {sizeof(slot0), slot0};
 2509|       |static struct slotvec *slotvec = &slotvec0;
 2510|       |static char *quotearg_n_options(int n, char const *arg, size_t argsize,
 2511|       |                                struct quoting_options const *options)
 2512|      0|{
 2513|      0|    int e;
 2514|      0|    int *tmp;
 2515|      0|    unsigned int n0;
 2516|      0|    struct slotvec *sv;
 2517|      0|    size_t n1;
 2518|      0|    _Bool preallocated;
 2519|      0|    int tmp___0;
 2520|      0|    struct slotvec *tmp___1;
 2521|      0|    size_t size;
 2522|      0|    char *val;
 2523|      0|    int flags;
 2524|      0|    size_t qsize;
 2525|      0|    size_t tmp___2;
 2526|      0|    int *tmp___3;
 2527|       |
 2528|      0|    {
 2529|      0|        tmp = __errno_location();
 2530|      0|        e = *tmp;
 2531|      0|        n0 = (unsigned int)n;
 2532|      0|        sv = slotvec;
 2533|      0|        if (n < 0) {
 2534|      0|            abort();
 2535|      0|        }
 2536|      0|        if (nslots <= n0) {
 2537|      0|            n1 = (size_t)(n0 + 1U);
 2538|      0|            preallocated = (_Bool)((unsigned long)sv == (unsigned long)(&slotvec0));
 2539|      0|            if (sizeof(ptrdiff_t) <= sizeof(size_t)) {
 2540|      0|                tmp___0 = -1;
 2541|      0|            }
 2542|      0|            else {
 2543|      0|                tmp___0 = -2;
 2544|      0|            }
 2545|      0|            if ((size_t)tmp___0 / sizeof(*sv) < n1) {
 2546|      0|                xalloc_die();
 2547|      0|            }
 2548|      0|            if (preallocated) {
 2549|      0|                tmp___1 = (struct slotvec *)((void *)0);
 2550|      0|            }
 2551|      0|            else {
 2552|      0|                tmp___1 = sv;
 2553|      0|            }
 2554|      0|            sv = (struct slotvec *)xrealloc((void *)tmp___1, n1 * sizeof(*sv));
 2555|      0|            slotvec = sv;
 2556|      0|            if (preallocated) {
 2557|      0|                *sv = slotvec0;
 2558|      0|            }
 2559|      0|            memset((void *)(sv + nslots), 0, (n1 - (size_t)nslots) * sizeof(*sv));
 2560|      0|            nslots = (unsigned int)n1;
 2561|      0|        }
 2562|      0|        size = (sv + n)->size;
 2563|      0|        val = (sv + n)->val;
 2564|      0|        flags = (int)(options->flags | 1);
 2565|      0|        tmp___2 = quotearg_buffer_restyled(
 2566|      0|                      val, size, arg, argsize, (enum quoting_style)options->style, flags,
 2567|      0|                      (unsigned int const *)(options->quote_these_too),
 2568|      0|                      (char const *)options->left_quote, (char const *)options->right_quote);
 2569|      0|        qsize = tmp___2;
 2570|      0|        if (size <= qsize) {
 2571|      0|            size = qsize + 1UL;
 2572|      0|            (sv + n)->size = size;
 2573|      0|            if ((unsigned long)val != (unsigned long)(slot0)) {
 2574|      0|                free((void *)val);
 2575|      0|            }
 2576|      0|            val = xcharalloc(size);
 2577|      0|            (sv + n)->val = val;
 2578|      0|            quotearg_buffer_restyled(val, size, arg, argsize,
 2579|      0|                                     (enum quoting_style)options->style, flags,
 2580|      0|                                     (unsigned int const *)(options->quote_these_too),
 2581|      0|                                     (char const *)options->left_quote,
 2582|      0|                                     (char const *)options->right_quote);
 2583|      0|        }
 2584|      0|        tmp___3 = __errno_location();
 2585|      0|        *tmp___3 = e;
 2586|      0|        return (val);
 2587|      0|    }
 2588|      0|}
 2589|       |char *quotearg_n_style(int n, enum quoting_style s, char const *arg)
 2590|      0|{
 2591|      0|    struct quoting_options o;
 2592|      0|    struct quoting_options tmp;
 2593|      0|    char *tmp___0;
 2594|       |
 2595|      0|    {
 2596|      0|        tmp = quoting_options_from_style(s);
 2597|      0|        o = tmp;
 2598|      0|        tmp___0 = quotearg_n_options(n, arg, (size_t)-1,
 2599|      0|                                     (struct quoting_options const *)(&o));
 2600|      0|        return (tmp___0);
 2601|      0|    }
 2602|      0|}
 2603|       |char *quotearg_char_mem(char const *arg, size_t argsize, char ch)
 2604|      0|{
 2605|      0|    struct quoting_options options;
 2606|      0|    char *tmp;
 2607|       |
 2608|      0|    {
 2609|      0|        options = default_quoting_options;
 2610|      0|        set_char_quoting(&options, ch, 1);
 2611|      0|        tmp = quotearg_n_options(0, arg, argsize,
 2612|      0|                                 (struct quoting_options const *)(&options));
 2613|      0|        return (tmp);
 2614|      0|    }
 2615|      0|}
 2616|       |char *quotearg_char(char const *arg, char ch)
 2617|      0|{
 2618|      0|    char *tmp;
 2619|       |
 2620|      0|    {
 2621|      0|        tmp = quotearg_char_mem(arg, (size_t)-1, ch);
 2622|      0|        return (tmp);
 2623|      0|    }
 2624|      0|}
 2625|       |char *quotearg_colon(char const *arg)
 2626|      0|{
 2627|      0|    char *tmp;
 2628|       |
 2629|      0|    {
 2630|      0|        tmp = quotearg_char(arg, (char)':');
 2631|      0|        return (tmp);
 2632|      0|    }
 2633|      0|}
 2634|       |struct quoting_options quote_quoting_options = {(enum quoting_style)6,
 2635|       |           0,
 2636|       |    {0U},
 2637|       |    (char const *)((void *)0),
 2638|       |    (char const *)((void *)0)
 2639|       |};
 2640|       |char const *quote_n_mem(int n, char const *arg, size_t argsize)
 2641|      0|{
 2642|      0|    char const *tmp;
 2643|       |
 2644|      0|    {
 2645|      0|        tmp = (char const *)quotearg_n_options(
 2646|      0|                  n, arg, argsize,
 2647|      0|                  (struct quoting_options const *)(&quote_quoting_options));
 2648|      0|        return (tmp);
 2649|      0|    }
 2650|      0|}
 2651|       |char const *quote_n(int n, char const *arg)
 2652|      0|{
 2653|      0|    char const *tmp;
 2654|       |
 2655|      0|    {
 2656|      0|        tmp = quote_n_mem(n, arg, (size_t)-1);
 2657|      0|        return (tmp);
 2658|      0|    }
 2659|      0|}
 2660|       |char const *quote(char const *arg)
 2661|      0|{
 2662|      0|    char const *tmp;
 2663|       |
 2664|      0|    {
 2665|      0|        tmp = quote_n(0, arg);
 2666|      0|        return (tmp);
 2667|      0|    }
 2668|      0|}
 2669|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=const"
 2670|       |#pragma GCC diagnostic push
 2671|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2672|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2673|       |#pragma GCC diagnostic pop
 2674|       |#pragma GCC diagnostic push
 2675|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2676|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2677|       |#pragma GCC diagnostic pop
 2678|       |#pragma GCC diagnostic push
 2679|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2680|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2681|       |#pragma GCC diagnostic pop
 2682|       |#pragma GCC diagnostic push
 2683|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2684|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2685|       |char const *program_name;
 2686|       |void set_program_name(char const *argv0);
 2687|       |extern char *program_invocation_name;
 2688|       |extern char *program_invocation_short_name;
 2689|       |extern int fputs(char const *__restrict __s, FILE *__restrict __stream);
 2690|       |extern __attribute__((__nothrow__)) char *(
 2691|       |    __attribute__((__nonnull__(1), __leaf__)) strrchr)(char const *__s, int __c)
 2692|       |__attribute__((__pure__));
 2693|       |char const *program_name = (char const *)((void *)0);
 2694|       |void set_program_name(char const *argv0)
 2695|      6|{
 2696|      6|    char const *slash;
 2697|      6|    char const *base;
 2698|      6|    int tmp;
 2699|      6|    int tmp___0;
 2700|       |
 2701|      6|    {
 2702|      6|        if ((unsigned long)argv0 == (unsigned long)((void *)0)) {
 2703|      0|            fputs("A NULL argv[0] was passed through an exec system call.\n", stderr);
 2704|      0|            abort();
 2705|      0|        }
 2706|      6|        slash = (char const *)strrchr(argv0, '/');
 2707|      6|        if ((unsigned long)slash != (unsigned long)((void *)0)) {
 2708|      6|            base = slash + 1;
 2709|      6|        }
 2710|      0|        else {
 2711|      0|            base = argv0;
 2712|      0|        }
 2713|      6|        if (base - argv0 >= 7L) {
 2714|      6|            tmp___0 = strncmp(base - 7, "/.libs/", (size_t)7);
 2715|      6|            if (tmp___0 == 0) {
 2716|      0|                argv0 = base;
 2717|      0|                tmp = strncmp(base, "lt-", (size_t)3);
 2718|      0|                if (tmp == 0) {
 2719|      0|                    argv0 = base + 3;
 2720|      0|                    program_invocation_short_name = (char *)argv0;
 2721|      0|                }
 2722|      0|            }
 2723|      6|        }
 2724|      6|        program_name = argv0;
 2725|      6|        program_invocation_name = (char *)argv0;
 2726|      6|        return;
 2727|      6|    }
 2728|      6|}
 2729|       |#pragma GCC diagnostic push
 2730|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2731|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2732|       |#pragma GCC diagnostic pop
 2733|       |#pragma GCC diagnostic push
 2734|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2735|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2736|       |#pragma GCC diagnostic pop
 2737|       |#pragma GCC diagnostic push
 2738|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2739|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2740|       |#pragma GCC diagnostic pop
 2741|       |#pragma GCC diagnostic push
 2742|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2743|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2744|       |#pragma GCC diagnostic pop
 2745|       |#pragma GCC diagnostic push
 2746|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2747|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2748|       |#pragma GCC diagnostic pop
 2749|       |extern __attribute__((__nothrow__))
 2750|       |time_t(__attribute__((__leaf__)) time)(time_t *__timer);
 2751|       |extern __attribute__((__nothrow__)) struct tm *(
 2752|       |    __attribute__((__leaf__)) localtime)(time_t const *__timer);
 2753|       |_Bool posixtime(time_t *p, char const *s, unsigned int syntax_bits);
 2754|       |extern __attribute__((__nothrow__)) char *(__attribute__((
 2755|       |            __nonnull__(1, 2), __leaf__)) stpcpy)(char *__restrict __dest,
 2756|       |                    char const *__restrict __src);
 2757|       |static int year(struct tm *tm, int const *digit_pair, size_t n,
 2758|       |                unsigned int syntax_bits)
 2759|      0|{
 2760|      0|    time_t now;
 2761|      0|    struct tm *tmp;
 2762|       |
 2763|      0|    {
 2764|      0|        if (n == 1UL) {
 2765|      0|            goto case_1;
 2766|      0|        }
 2767|      0|        if (n == 2UL) {
 2768|      0|            goto case_2;
 2769|      0|        }
 2770|      0|        if (n == 0UL) {
 2771|      0|            goto case_0;
 2772|      0|        }
 2773|      0|        goto switch_default;
 2774|      0|case_1:
 2775|      0|        tm->tm_year = (int)*digit_pair;
 2776|      0|        if (*(digit_pair + 0) <= 68) {
 2777|      0|            if (syntax_bits & 16U) {
 2778|      0|                return (1);
 2779|      0|            }
 2780|      0|            tm->tm_year += 100;
 2781|      0|        }
 2782|      0|        goto switch_break;
 2783|      0|case_2:
 2784|      0|        if (!(syntax_bits & 4U)) {
 2785|      0|            return (1);
 2786|      0|        }
 2787|      0|        tm->tm_year = (int)((*(digit_pair + 0) * 100 + *(digit_pair + 1)) - 1900);
 2788|      0|        goto switch_break;
 2789|      0|case_0:
 2790|      0|        time(&now);
 2791|      0|        tmp = localtime((time_t const *)(&now));
 2792|      0|        if (!tmp) {
 2793|      0|            return (1);
 2794|      0|        }
 2795|      0|        tm->tm_year = tmp->tm_year;
 2796|      0|        goto switch_break;
 2797|      0|switch_default:
 2798|      0|        abort();
 2799|      0|switch_break:
 2800|      0|        ;
 2801|      0|        return (0);
 2802|      0|    }
 2803|      0|}
 2804|       |static int posix_time_parse(struct tm *tm, char const *s,
 2805|       |                            unsigned int syntax_bits)
 2806|      0|{
 2807|      0|    char const *dot;
 2808|      0|    int pair[6];
 2809|      0|    int *p;
 2810|      0|    size_t i;
 2811|      0|    size_t s_len;
 2812|      0|    size_t tmp;
 2813|      0|    size_t len;
 2814|      0|    size_t tmp___0;
 2815|      0|    int tmp___1;
 2816|      0|    int *tmp___2;
 2817|      0|    int *tmp___3;
 2818|      0|    int *tmp___4;
 2819|      0|    int *tmp___5;
 2820|      0|    int tmp___6;
 2821|      0|    int seconds;
 2822|       |
 2823|      0|    {
 2824|      0|        dot = (char const *)((void *)0);
 2825|      0|        tmp = strlen(s);
 2826|      0|        s_len = tmp;
 2827|      0|        if (syntax_bits & 8U) {
 2828|      0|            dot = (char const *)strchr(s, '.');
 2829|      0|            if (dot) {
 2830|      0|                tmp___0 = (size_t)(dot - s);
 2831|      0|            }
 2832|      0|            else {
 2833|      0|                tmp___0 = s_len;
 2834|      0|            }
 2835|      0|        }
 2836|      0|        else {
 2837|      0|            tmp___0 = s_len;
 2838|      0|        }
 2839|      0|        len = tmp___0;
 2840|      0|        if (len != 8UL) {
 2841|      0|            if (len != 10UL) {
 2842|      0|                if (len != 12UL) {
 2843|      0|                    return (1);
 2844|      0|                }
 2845|      0|            }
 2846|      0|        }
 2847|      0|        if (dot) {
 2848|      0|            if (!(syntax_bits & 8U)) {
 2849|      0|                return (1);
 2850|      0|            }
 2851|      0|            if (s_len - len != 3UL) {
 2852|      0|                return (1);
 2853|      0|            }
 2854|      0|        }
 2855|      0|        i = (size_t)0;
 2856|      0|        while (1) {
 2857|       |
 2858|      0|            if (!(i < len)) {
 2859|      0|                goto while_break;
 2860|      0|            }
 2861|      0|            if (!((unsigned int)*(s + i) - 48U <= 9U)) {
 2862|      0|                return (1);
 2863|      0|            }
 2864|      0|            i++;
 2865|      0|        }
 2866|      0|while_break:
 2867|      0|        len /= 2UL;
 2868|      0|        i = (size_t)0;
 2869|      0|        while (1) {
 2870|       |
 2871|      0|            if (!(i < len)) {
 2872|      0|                goto while_break___0;
 2873|      0|            }
 2874|      0|            pair[i] = (10 * (int)((int const) * (s + 2UL * i) - 48) +
 2875|      0|                       (int)*(s + (2UL * i + 1UL))) -
 2876|      0|                      48;
 2877|      0|            i++;
 2878|      0|        }
 2879|      0|while_break___0:
 2880|      0|        p = pair;
 2881|      0|        if (syntax_bits & 1U) {
 2882|      0|            tmp___1 = year(tm, (int const *)p, len - 4UL, syntax_bits);
 2883|      0|            if (tmp___1) {
 2884|      0|                return (1);
 2885|      0|            }
 2886|      0|            p += len - 4UL;
 2887|      0|            len = (size_t)4;
 2888|      0|        }
 2889|      0|        tmp___2 = p;
 2890|      0|        p++;
 2891|      0|        tm->tm_mon = *tmp___2 - 1;
 2892|      0|        tmp___3 = p;
 2893|      0|        p++;
 2894|      0|        tm->tm_mday = *tmp___3;
 2895|      0|        tmp___4 = p;
 2896|      0|        p++;
 2897|      0|        tm->tm_hour = *tmp___4;
 2898|      0|        tmp___5 = p;
 2899|      0|        p++;
 2900|      0|        tm->tm_min = *tmp___5;
 2901|      0|        len -= 4UL;
 2902|      0|        if (syntax_bits & 2U) {
 2903|      0|            tmp___6 = year(tm, (int const *)p, len, syntax_bits);
 2904|      0|            if (tmp___6) {
 2905|      0|                return (1);
 2906|      0|            }
 2907|      0|        }
 2908|      0|        if (!dot) {
 2909|      0|            tm->tm_sec = 0;
 2910|      0|        }
 2911|      0|        else {
 2912|      0|            dot++;
 2913|      0|            if (!((unsigned int)*(dot + 0) - 48U <= 9U)) {
 2914|      0|                return (1);
 2915|      0|            }
 2916|      0|            else {
 2917|      0|                if (!((unsigned int)*(dot + 1) - 48U <= 9U)) {
 2918|      0|                    return (1);
 2919|      0|                }
 2920|      0|            }
 2921|      0|            seconds =
 2922|      0|                (10 * (int)((int const) * (dot + 0) - 48) + (int)*(dot + 1)) - 48;
 2923|      0|            tm->tm_sec = seconds;
 2924|      0|        }
 2925|      0|        return (0);
 2926|      0|    }
 2927|      0|}
 2928|       |_Bool posixtime(time_t *p, char const *s, unsigned int syntax_bits)
 2929|      0|{
 2930|      0|    struct tm tm0;
 2931|      0|    struct tm tm1;
 2932|      0|    struct tm const *tm;
 2933|      0|    time_t t;
 2934|      0|    int tmp;
 2935|      0|    time_t dummy;
 2936|      0|    char buf___1[16];
 2937|      0|    char *b;
 2938|      0|    char *tmp___0;
 2939|      0|    _Bool tmp___1;
 2940|       |
 2941|      0|    {
 2942|      0|        tmp = posix_time_parse(&tm0, s, syntax_bits);
 2943|      0|        if (tmp) {
 2944|      0|            return ((_Bool)0);
 2945|      0|        }
 2946|      0|        tm1 = tm0;
 2947|      0|        tm1.tm_isdst = -1;
 2948|      0|        t = mktime(&tm1);
 2949|      0|        if (t != -1L) {
 2950|      0|            tm = (struct tm const *)(&tm1);
 2951|      0|        }
 2952|      0|        else {
 2953|      0|            tm = (struct tm const *)localtime((time_t const *)(&t));
 2954|      0|            if (!tm) {
 2955|      0|                return ((_Bool)0);
 2956|      0|            }
 2957|      0|        }
 2958|      0|        if ((((((tm0.tm_year ^ (int)tm->tm_year) | (tm0.tm_mon ^ (int)tm->tm_mon)) |
 2959|      0|                (tm0.tm_mday ^ (int)tm->tm_mday)) |
 2960|      0|                (tm0.tm_hour ^ (int)tm->tm_hour)) |
 2961|      0|                (tm0.tm_min ^ (int)tm->tm_min)) |
 2962|      0|                (tm0.tm_sec ^ (int)tm->tm_sec)) {
 2963|      0|            if (tm0.tm_sec != 60) {
 2964|      0|                return ((_Bool)0);
 2965|      0|            }
 2966|      0|            tmp___0 = stpcpy(buf___1, s);
 2967|      0|            b = tmp___0;
 2968|      0|            strcpy(b - 2, "59");
 2969|      0|            tmp___1 = posixtime(&dummy, (char const *)(buf___1), syntax_bits);
 2970|      0|            if (!tmp___1) {
 2971|      0|                return ((_Bool)0);
 2972|      0|            }
 2973|      0|        }
 2974|      0|        *p = t;
 2975|      0|        return ((_Bool)1);
 2976|      0|    }
 2977|      0|}
 2978|       |#pragma GCC diagnostic push
 2979|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2980|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2981|       |#pragma GCC diagnostic pop
 2982|       |#pragma GCC diagnostic push
 2983|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2984|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2985|       |#pragma GCC diagnostic pop
 2986|       |#pragma GCC diagnostic push
 2987|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2988|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2989|       |#pragma GCC diagnostic pop
 2990|       |#pragma GCC diagnostic push
 2991|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2992|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2993|       |#pragma GCC diagnostic pop
 2994|       |#pragma GCC diagnostic push
 2995|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 2996|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 2997|       |#pragma GCC diagnostic pop
 2998|       |_Bool parse_datetime(struct timespec *result, char const *p,
 2999|       |                     struct timespec const *now);
 3000|       |#pragma GCC diagnostic push
 3001|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 3002|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 3003|       |#pragma GCC diagnostic pop
 3004|       |extern __attribute__((__nothrow__)) int(__attribute__((
 3005|       |        __nonnull__(2), __leaf__)) setenv)(char const *__name, char const *__value,
 3006|       |                int __replace);
 3007|       |extern __attribute__((__nothrow__)) int(
 3008|       |    __attribute__((__nonnull__(1), __leaf__)) unsetenv)(char const *__name);
 3009|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) abs)(int __x)
 3010|       |__attribute__((__const__));
 3011|       |#pragma GCC diagnostic push
 3012|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 3013|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 3014|       |static unsigned char to_uchar___0(char ch)
 3015|      3|{
 3016|       |
 3017|      3|    {
 3018|      3|        return ((unsigned char)ch);
 3019|      3|    }
 3020|      3|}
 3021|       |static int yylex(union YYSTYPE *lvalp, parser_control *pc);
 3022|       |static int yyerror(parser_control const *pc __attribute__((__unused__)),
 3023|       |                   char const *s __attribute__((__unused__)));
 3024|       |static long time_zone_hhmm(parser_control *pc, textint s, long mm);
 3025|       |static void digits_to_date_time(parser_control *pc, textint text_int)
 3026|      0|{
 3027|       |
 3028|      0|    {
 3029|      0|        if (pc->dates_seen) {
 3030|      0|            if (!pc->year.digits) {
 3031|      0|                if (!pc->rels_seen) {
 3032|      0|                    if (pc->times_seen) {
 3033|      0|                        pc->year = text_int;
 3034|      0|                    }
 3035|      0|                    else {
 3036|      0|                        if (2UL < text_int.digits) {
 3037|      0|                            pc->year = text_int;
 3038|      0|                        }
 3039|      0|                        else {
 3040|      0|                            goto _L___1;
 3041|      0|                        }
 3042|      0|                    }
 3043|      0|                }
 3044|      0|                else {
 3045|      0|                    goto _L___1;
 3046|      0|                }
 3047|      0|            }
 3048|      0|            else {
 3049|      0|                goto _L___1;
 3050|      0|            }
 3051|      0|        }
 3052|      0|        else {
 3053|      0|_L___1:
 3054|      0|            if (4UL < text_int.digits) {
 3055|      0|                (pc->dates_seen)++;
 3056|      0|                pc->day = text_int.value % 100L;
 3057|      0|                pc->month = (text_int.value / 100L) % 100L;
 3058|      0|                pc->year.value = text_int.value / 10000L;
 3059|      0|                pc->year.digits = text_int.digits - 4UL;
 3060|      0|            }
 3061|      0|            else {
 3062|      0|                (pc->times_seen)++;
 3063|      0|                if (text_int.digits <= 2UL) {
 3064|      0|                    pc->hour = text_int.value;
 3065|      0|                    pc->minutes = 0L;
 3066|      0|                }
 3067|      0|                else {
 3068|      0|                    pc->hour = text_int.value / 100L;
 3069|      0|                    pc->minutes = text_int.value % 100L;
 3070|      0|                }
 3071|      0|                pc->seconds.tv_sec = (__time_t)0;
 3072|      0|                pc->seconds.tv_nsec = (__syscall_slong_t)0;
 3073|      0|                pc->meridian = 2;
 3074|      0|            }
 3075|      0|        }
 3076|      0|        return;
 3077|      0|    }
 3078|      0|}
 3079|       |static void apply_relative_time(parser_control *pc, relative_time rel,
 3080|       |                                int factor)
 3081|      2|{
 3082|       |
 3083|      2|    {
 3084|      2|        pc->rel.ns += (long)factor * rel.ns;
 3085|      2|        pc->rel.seconds += (long_time_t)factor * rel.seconds;
 3086|      2|        pc->rel.minutes += (long)factor * rel.minutes;
 3087|      2|        pc->rel.hour += (long)factor * rel.hour;
 3088|      2|        pc->rel.day += (long)factor * rel.day;
 3089|      2|        pc->rel.month += (long)factor * rel.month;
 3090|      2|        pc->rel.year += (long)factor * rel.year;
 3091|      2|        pc->rels_seen = (_Bool)1;
 3092|      2|        return;
 3093|      2|    }
 3094|      2|}
 3095|       |static void set_hhmmss(parser_control *pc, long hour, long minutes, time_t sec,
 3096|       |                       long nsec)
 3097|      0|{
 3098|       |
 3099|      0|    {
 3100|      0|        pc->hour = hour;
 3101|      0|        pc->minutes = minutes;
 3102|      0|        pc->seconds.tv_sec = sec;
 3103|      0|        pc->seconds.tv_nsec = nsec;
 3104|      0|        return;
 3105|      0|    }
 3106|      0|}
 3107|       |static yytype_uint8 const yytranslate[278] = {
 3108|       |    (yytype_uint8 const)0,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3109|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3110|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3111|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3112|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3113|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3114|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3115|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3116|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3117|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3118|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3119|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3120|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3121|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3122|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)26,
 3123|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)27,
 3124|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3125|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3126|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3127|       |    (yytype_uint8 const)2,  (yytype_uint8 const)25, (yytype_uint8 const)2,
 3128|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3129|       |    (yytype_uint8 const)2,  (yytype_uint8 const)23, (yytype_uint8 const)2,
 3130|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3131|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3132|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3133|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3134|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3135|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3136|       |    (yytype_uint8 const)24, (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3137|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3138|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3139|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3140|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3141|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3142|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3143|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3144|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3145|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3146|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3147|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3148|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3149|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3150|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3151|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3152|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3153|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3154|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3155|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3156|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3157|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3158|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3159|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3160|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3161|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3162|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3163|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3164|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3165|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3166|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3167|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3168|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3169|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3170|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3171|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3172|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3173|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3174|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3175|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3176|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3177|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3178|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3179|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3180|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3181|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3182|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3183|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3184|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3185|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3186|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3187|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3188|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3189|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3190|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3191|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3192|       |    (yytype_uint8 const)2,  (yytype_uint8 const)2,  (yytype_uint8 const)2,
 3193|       |    (yytype_uint8 const)2,  (yytype_uint8 const)1,  (yytype_uint8 const)2,
 3194|       |    (yytype_uint8 const)3,  (yytype_uint8 const)4,  (yytype_uint8 const)5,
 3195|       |    (yytype_uint8 const)6,  (yytype_uint8 const)7,  (yytype_uint8 const)8,
 3196|       |    (yytype_uint8 const)9,  (yytype_uint8 const)10, (yytype_uint8 const)11,
 3197|       |    (yytype_uint8 const)12, (yytype_uint8 const)13, (yytype_uint8 const)14,
 3198|       |    (yytype_uint8 const)15, (yytype_uint8 const)16, (yytype_uint8 const)17,
 3199|       |    (yytype_uint8 const)18, (yytype_uint8 const)19, (yytype_uint8 const)20,
 3200|       |    (yytype_uint8 const)21, (yytype_uint8 const)22
 3201|       |};
 3202|       |static yytype_uint8 const yyr1[92] = {
 3203|       |    (yytype_uint8 const)0,  (yytype_uint8 const)28, (yytype_uint8 const)29,
 3204|       |    (yytype_uint8 const)29, (yytype_uint8 const)30, (yytype_uint8 const)31,
 3205|       |    (yytype_uint8 const)31, (yytype_uint8 const)32, (yytype_uint8 const)32,
 3206|       |    (yytype_uint8 const)32, (yytype_uint8 const)32, (yytype_uint8 const)32,
 3207|       |    (yytype_uint8 const)32, (yytype_uint8 const)32, (yytype_uint8 const)32,
 3208|       |    (yytype_uint8 const)32, (yytype_uint8 const)33, (yytype_uint8 const)34,
 3209|       |    (yytype_uint8 const)35, (yytype_uint8 const)35, (yytype_uint8 const)35,
 3210|       |    (yytype_uint8 const)35, (yytype_uint8 const)36, (yytype_uint8 const)36,
 3211|       |    (yytype_uint8 const)36, (yytype_uint8 const)37, (yytype_uint8 const)37,
 3212|       |    (yytype_uint8 const)38, (yytype_uint8 const)39, (yytype_uint8 const)39,
 3213|       |    (yytype_uint8 const)40, (yytype_uint8 const)40, (yytype_uint8 const)40,
 3214|       |    (yytype_uint8 const)40, (yytype_uint8 const)40, (yytype_uint8 const)40,
 3215|       |    (yytype_uint8 const)40, (yytype_uint8 const)41, (yytype_uint8 const)41,
 3216|       |    (yytype_uint8 const)41, (yytype_uint8 const)41, (yytype_uint8 const)42,
 3217|       |    (yytype_uint8 const)42, (yytype_uint8 const)42, (yytype_uint8 const)42,
 3218|       |    (yytype_uint8 const)42, (yytype_uint8 const)42, (yytype_uint8 const)42,
 3219|       |    (yytype_uint8 const)42, (yytype_uint8 const)42, (yytype_uint8 const)43,
 3220|       |    (yytype_uint8 const)44, (yytype_uint8 const)44, (yytype_uint8 const)44,
 3221|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3222|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3223|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3224|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3225|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3226|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3227|       |    (yytype_uint8 const)45, (yytype_uint8 const)45, (yytype_uint8 const)45,
 3228|       |    (yytype_uint8 const)46, (yytype_uint8 const)46, (yytype_uint8 const)46,
 3229|       |    (yytype_uint8 const)46, (yytype_uint8 const)46, (yytype_uint8 const)46,
 3230|       |    (yytype_uint8 const)47, (yytype_uint8 const)48, (yytype_uint8 const)48,
 3231|       |    (yytype_uint8 const)49, (yytype_uint8 const)49, (yytype_uint8 const)50,
 3232|       |    (yytype_uint8 const)50, (yytype_uint8 const)51, (yytype_uint8 const)52,
 3233|       |    (yytype_uint8 const)53, (yytype_uint8 const)53
 3234|       |};
 3235|       |static yytype_uint8 const yyr2[92] = {
 3236|       |    (yytype_uint8 const)0, (yytype_uint8 const)2, (yytype_uint8 const)1,
 3237|       |    (yytype_uint8 const)1, (yytype_uint8 const)2, (yytype_uint8 const)0,
 3238|       |    (yytype_uint8 const)2, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3239|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3240|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3241|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)3,
 3242|       |    (yytype_uint8 const)2, (yytype_uint8 const)4, (yytype_uint8 const)6,
 3243|       |    (yytype_uint8 const)1, (yytype_uint8 const)2, (yytype_uint8 const)4,
 3244|       |    (yytype_uint8 const)6, (yytype_uint8 const)0, (yytype_uint8 const)1,
 3245|       |    (yytype_uint8 const)2, (yytype_uint8 const)1, (yytype_uint8 const)2,
 3246|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)2,
 3247|       |    (yytype_uint8 const)2, (yytype_uint8 const)3, (yytype_uint8 const)1,
 3248|       |    (yytype_uint8 const)2, (yytype_uint8 const)1, (yytype_uint8 const)2,
 3249|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)3,
 3250|       |    (yytype_uint8 const)5, (yytype_uint8 const)3, (yytype_uint8 const)3,
 3251|       |    (yytype_uint8 const)2, (yytype_uint8 const)4, (yytype_uint8 const)2,
 3252|       |    (yytype_uint8 const)3, (yytype_uint8 const)1, (yytype_uint8 const)3,
 3253|       |    (yytype_uint8 const)2, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3254|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)1,
 3255|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)1,
 3256|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)1,
 3257|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)1,
 3258|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)1,
 3259|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)2,
 3260|       |    (yytype_uint8 const)2, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3261|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)2,
 3262|       |    (yytype_uint8 const)2, (yytype_uint8 const)2, (yytype_uint8 const)2,
 3263|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3264|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)1,
 3265|       |    (yytype_uint8 const)1, (yytype_uint8 const)1, (yytype_uint8 const)2,
 3266|       |    (yytype_uint8 const)0, (yytype_uint8 const)2
 3267|       |};
 3268|       |static yytype_uint8 const yydefact[114] = {
 3269|       |    (yytype_uint8 const)5,  (yytype_uint8 const)0,  (yytype_uint8 const)0,
 3270|       |    (yytype_uint8 const)2,  (yytype_uint8 const)3,  (yytype_uint8 const)85,
 3271|       |    (yytype_uint8 const)87, (yytype_uint8 const)84, (yytype_uint8 const)86,
 3272|       |    (yytype_uint8 const)4,  (yytype_uint8 const)82, (yytype_uint8 const)83,
 3273|       |    (yytype_uint8 const)1,  (yytype_uint8 const)56, (yytype_uint8 const)59,
 3274|       |    (yytype_uint8 const)65, (yytype_uint8 const)68, (yytype_uint8 const)73,
 3275|       |    (yytype_uint8 const)62, (yytype_uint8 const)81, (yytype_uint8 const)37,
 3276|       |    (yytype_uint8 const)35, (yytype_uint8 const)28, (yytype_uint8 const)0,
 3277|       |    (yytype_uint8 const)0,  (yytype_uint8 const)30, (yytype_uint8 const)0,
 3278|       |    (yytype_uint8 const)88, (yytype_uint8 const)0,  (yytype_uint8 const)0,
 3279|       |    (yytype_uint8 const)31, (yytype_uint8 const)6,  (yytype_uint8 const)7,
 3280|       |    (yytype_uint8 const)16, (yytype_uint8 const)8,  (yytype_uint8 const)21,
 3281|       |    (yytype_uint8 const)9,  (yytype_uint8 const)10, (yytype_uint8 const)12,
 3282|       |    (yytype_uint8 const)11, (yytype_uint8 const)49, (yytype_uint8 const)13,
 3283|       |    (yytype_uint8 const)52, (yytype_uint8 const)74, (yytype_uint8 const)53,
 3284|       |    (yytype_uint8 const)14, (yytype_uint8 const)15, (yytype_uint8 const)38,
 3285|       |    (yytype_uint8 const)29, (yytype_uint8 const)0,  (yytype_uint8 const)45,
 3286|       |    (yytype_uint8 const)54, (yytype_uint8 const)57, (yytype_uint8 const)63,
 3287|       |    (yytype_uint8 const)66, (yytype_uint8 const)69, (yytype_uint8 const)60,
 3288|       |    (yytype_uint8 const)39, (yytype_uint8 const)36, (yytype_uint8 const)90,
 3289|       |    (yytype_uint8 const)32, (yytype_uint8 const)75, (yytype_uint8 const)76,
 3290|       |    (yytype_uint8 const)78, (yytype_uint8 const)79, (yytype_uint8 const)80,
 3291|       |    (yytype_uint8 const)77, (yytype_uint8 const)55, (yytype_uint8 const)58,
 3292|       |    (yytype_uint8 const)64, (yytype_uint8 const)67, (yytype_uint8 const)70,
 3293|       |    (yytype_uint8 const)61, (yytype_uint8 const)40, (yytype_uint8 const)18,
 3294|       |    (yytype_uint8 const)47, (yytype_uint8 const)90, (yytype_uint8 const)0,
 3295|       |    (yytype_uint8 const)0,  (yytype_uint8 const)22, (yytype_uint8 const)89,
 3296|       |    (yytype_uint8 const)71, (yytype_uint8 const)72, (yytype_uint8 const)33,
 3297|       |    (yytype_uint8 const)0,  (yytype_uint8 const)51, (yytype_uint8 const)44,
 3298|       |    (yytype_uint8 const)0,  (yytype_uint8 const)0,  (yytype_uint8 const)34,
 3299|       |    (yytype_uint8 const)43, (yytype_uint8 const)48, (yytype_uint8 const)50,
 3300|       |    (yytype_uint8 const)27, (yytype_uint8 const)25, (yytype_uint8 const)41,
 3301|       |    (yytype_uint8 const)0,  (yytype_uint8 const)17, (yytype_uint8 const)46,
 3302|       |    (yytype_uint8 const)91, (yytype_uint8 const)19, (yytype_uint8 const)90,
 3303|       |    (yytype_uint8 const)0,  (yytype_uint8 const)23, (yytype_uint8 const)26,
 3304|       |    (yytype_uint8 const)0,  (yytype_uint8 const)0,  (yytype_uint8 const)25,
 3305|       |    (yytype_uint8 const)42, (yytype_uint8 const)25, (yytype_uint8 const)20,
 3306|       |    (yytype_uint8 const)24, (yytype_uint8 const)0,  (yytype_uint8 const)25
 3307|       |};
 3308|       |static yytype_int8 const yydefgoto[26] = {
 3309|       |    (yytype_int8 const)-1,  (yytype_int8 const)2,   (yytype_int8 const)3,
 3310|       |    (yytype_int8 const)4,   (yytype_int8 const)31,  (yytype_int8 const)32,
 3311|       |    (yytype_int8 const)33,  (yytype_int8 const)34,  (yytype_int8 const)35,
 3312|       |    (yytype_int8 const)103, (yytype_int8 const)104, (yytype_int8 const)36,
 3313|       |    (yytype_int8 const)37,  (yytype_int8 const)38,  (yytype_int8 const)39,
 3314|       |    (yytype_int8 const)40,  (yytype_int8 const)41,  (yytype_int8 const)42,
 3315|       |    (yytype_int8 const)43,  (yytype_int8 const)44,  (yytype_int8 const)9,
 3316|       |    (yytype_int8 const)10,  (yytype_int8 const)11,  (yytype_int8 const)45,
 3317|       |    (yytype_int8 const)46,  (yytype_int8 const)93
 3318|       |};
 3319|       |static yytype_int8 const yypact[114] = {
 3320|       |    (yytype_int8 const)38,  (yytype_int8 const)27,  (yytype_int8 const)77,
 3321|       |    (yytype_int8 const)-93, (yytype_int8 const)46,  (yytype_int8 const)-93,
 3322|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3323|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3324|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3325|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3326|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)62,
 3327|       |    (yytype_int8 const)-93, (yytype_int8 const)82,  (yytype_int8 const)-3,
 3328|       |    (yytype_int8 const)66,  (yytype_int8 const)3,   (yytype_int8 const)74,
 3329|       |    (yytype_int8 const)-4,  (yytype_int8 const)83,  (yytype_int8 const)84,
 3330|       |    (yytype_int8 const)75,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3331|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3332|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3333|       |    (yytype_int8 const)-93, (yytype_int8 const)71,  (yytype_int8 const)-93,
 3334|       |    (yytype_int8 const)93,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3335|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3336|       |    (yytype_int8 const)-93, (yytype_int8 const)78,  (yytype_int8 const)72,
 3337|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3338|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3339|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)25,
 3340|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3341|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3342|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3343|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3344|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3345|       |    (yytype_int8 const)21,  (yytype_int8 const)19,  (yytype_int8 const)79,
 3346|       |    (yytype_int8 const)80,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3347|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3348|       |    (yytype_int8 const)81,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3349|       |    (yytype_int8 const)85,  (yytype_int8 const)86,  (yytype_int8 const)-93,
 3350|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3351|       |    (yytype_int8 const)-93, (yytype_int8 const)-6,  (yytype_int8 const)76,
 3352|       |    (yytype_int8 const)17,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3353|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)87,
 3354|       |    (yytype_int8 const)69,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3355|       |    (yytype_int8 const)88,  (yytype_int8 const)89,  (yytype_int8 const)-1,
 3356|       |    (yytype_int8 const)-93, (yytype_int8 const)18,  (yytype_int8 const)-93,
 3357|       |    (yytype_int8 const)-93, (yytype_int8 const)69,  (yytype_int8 const)91
 3358|       |};
 3359|       |static yytype_int8 const yypgoto[26] = {
 3360|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3361|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3362|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)20,
 3363|       |    (yytype_int8 const)-68, (yytype_int8 const)-27, (yytype_int8 const)-93,
 3364|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3365|       |    (yytype_int8 const)-93, (yytype_int8 const)-93, (yytype_int8 const)-93,
 3366|       |    (yytype_int8 const)60,  (yytype_int8 const)-93, (yytype_int8 const)-93,
 3367|       |    (yytype_int8 const)-93, (yytype_int8 const)-92, (yytype_int8 const)-93,
 3368|       |    (yytype_int8 const)-93, (yytype_int8 const)43
 3369|       |};
 3370|       |static yytype_uint8 const yytable[113] = {
 3371|       |    (yytype_uint8 const)79,  (yytype_uint8 const)67,  (yytype_uint8 const)68,
 3372|       |    (yytype_uint8 const)69,  (yytype_uint8 const)70,  (yytype_uint8 const)71,
 3373|       |    (yytype_uint8 const)72,  (yytype_uint8 const)58,  (yytype_uint8 const)73,
 3374|       |    (yytype_uint8 const)100, (yytype_uint8 const)107, (yytype_uint8 const)74,
 3375|       |    (yytype_uint8 const)75,  (yytype_uint8 const)101, (yytype_uint8 const)110,
 3376|       |    (yytype_uint8 const)76,  (yytype_uint8 const)49,  (yytype_uint8 const)50,
 3377|       |    (yytype_uint8 const)101, (yytype_uint8 const)102, (yytype_uint8 const)113,
 3378|       |    (yytype_uint8 const)77,  (yytype_uint8 const)59,  (yytype_uint8 const)78,
 3379|       |    (yytype_uint8 const)61,  (yytype_uint8 const)62,  (yytype_uint8 const)63,
 3380|       |    (yytype_uint8 const)64,  (yytype_uint8 const)65,  (yytype_uint8 const)66,
 3381|       |    (yytype_uint8 const)61,  (yytype_uint8 const)62,  (yytype_uint8 const)63,
 3382|       |    (yytype_uint8 const)64,  (yytype_uint8 const)65,  (yytype_uint8 const)66,
 3383|       |    (yytype_uint8 const)101, (yytype_uint8 const)101, (yytype_uint8 const)92,
 3384|       |    (yytype_uint8 const)111, (yytype_uint8 const)90,  (yytype_uint8 const)91,
 3385|       |    (yytype_uint8 const)106, (yytype_uint8 const)112, (yytype_uint8 const)88,
 3386|       |    (yytype_uint8 const)111, (yytype_uint8 const)5,   (yytype_uint8 const)6,
 3387|       |    (yytype_uint8 const)7,   (yytype_uint8 const)8,   (yytype_uint8 const)88,
 3388|       |    (yytype_uint8 const)13,  (yytype_uint8 const)14,  (yytype_uint8 const)15,
 3389|       |    (yytype_uint8 const)16,  (yytype_uint8 const)17,  (yytype_uint8 const)18,
 3390|       |    (yytype_uint8 const)19,  (yytype_uint8 const)20,  (yytype_uint8 const)21,
 3391|       |    (yytype_uint8 const)22,  (yytype_uint8 const)1,   (yytype_uint8 const)23,
 3392|       |    (yytype_uint8 const)24,  (yytype_uint8 const)25,  (yytype_uint8 const)26,
 3393|       |    (yytype_uint8 const)27,  (yytype_uint8 const)28,  (yytype_uint8 const)29,
 3394|       |    (yytype_uint8 const)79,  (yytype_uint8 const)30,  (yytype_uint8 const)51,
 3395|       |    (yytype_uint8 const)52,  (yytype_uint8 const)53,  (yytype_uint8 const)54,
 3396|       |    (yytype_uint8 const)55,  (yytype_uint8 const)56,  (yytype_uint8 const)12,
 3397|       |    (yytype_uint8 const)57,  (yytype_uint8 const)61,  (yytype_uint8 const)62,
 3398|       |    (yytype_uint8 const)63,  (yytype_uint8 const)64,  (yytype_uint8 const)65,
 3399|       |    (yytype_uint8 const)66,  (yytype_uint8 const)60,  (yytype_uint8 const)48,
 3400|       |    (yytype_uint8 const)80,  (yytype_uint8 const)47,  (yytype_uint8 const)6,
 3401|       |    (yytype_uint8 const)83,  (yytype_uint8 const)8,   (yytype_uint8 const)81,
 3402|       |    (yytype_uint8 const)82,  (yytype_uint8 const)26,  (yytype_uint8 const)84,
 3403|       |    (yytype_uint8 const)85,  (yytype_uint8 const)86,  (yytype_uint8 const)87,
 3404|       |    (yytype_uint8 const)94,  (yytype_uint8 const)95,  (yytype_uint8 const)96,
 3405|       |    (yytype_uint8 const)89,  (yytype_uint8 const)105, (yytype_uint8 const)97,
 3406|       |    (yytype_uint8 const)98,  (yytype_uint8 const)99,  (yytype_uint8 const)0,
 3407|       |    (yytype_uint8 const)108, (yytype_uint8 const)109, (yytype_uint8 const)101,
 3408|       |    (yytype_uint8 const)0,   (yytype_uint8 const)88
 3409|       |};
 3410|       |static yytype_int8 const yycheck[113] = {
 3411|       |    (yytype_int8 const)27,  (yytype_int8 const)5,   (yytype_int8 const)6,
 3412|       |    (yytype_int8 const)7,   (yytype_int8 const)8,   (yytype_int8 const)9,
 3413|       |    (yytype_int8 const)10,  (yytype_int8 const)4,   (yytype_int8 const)12,
 3414|       |    (yytype_int8 const)15,  (yytype_int8 const)102, (yytype_int8 const)15,
 3415|       |    (yytype_int8 const)16,  (yytype_int8 const)19,  (yytype_int8 const)15,
 3416|       |    (yytype_int8 const)19,  (yytype_int8 const)19,  (yytype_int8 const)20,
 3417|       |    (yytype_int8 const)19,  (yytype_int8 const)25,  (yytype_int8 const)112,
 3418|       |    (yytype_int8 const)25,  (yytype_int8 const)19,  (yytype_int8 const)27,
 3419|       |    (yytype_int8 const)5,   (yytype_int8 const)6,   (yytype_int8 const)7,
 3420|       |    (yytype_int8 const)8,   (yytype_int8 const)9,   (yytype_int8 const)10,
 3421|       |    (yytype_int8 const)5,   (yytype_int8 const)6,   (yytype_int8 const)7,
 3422|       |    (yytype_int8 const)8,   (yytype_int8 const)9,   (yytype_int8 const)10,
 3423|       |    (yytype_int8 const)19,  (yytype_int8 const)19,  (yytype_int8 const)19,
 3424|       |    (yytype_int8 const)107, (yytype_int8 const)19,  (yytype_int8 const)20,
 3425|       |    (yytype_int8 const)25,  (yytype_int8 const)25,  (yytype_int8 const)25,
 3426|       |    (yytype_int8 const)113, (yytype_int8 const)19,  (yytype_int8 const)20,
 3427|       |    (yytype_int8 const)21,  (yytype_int8 const)22,  (yytype_int8 const)25,
 3428|       |    (yytype_int8 const)5,   (yytype_int8 const)6,   (yytype_int8 const)7,
 3429|       |    (yytype_int8 const)8,   (yytype_int8 const)9,   (yytype_int8 const)10,
 3430|       |    (yytype_int8 const)11,  (yytype_int8 const)12,  (yytype_int8 const)13,
 3431|       |    (yytype_int8 const)14,  (yytype_int8 const)23,  (yytype_int8 const)16,
 3432|       |    (yytype_int8 const)17,  (yytype_int8 const)18,  (yytype_int8 const)19,
 3433|       |    (yytype_int8 const)20,  (yytype_int8 const)21,  (yytype_int8 const)22,
 3434|       |    (yytype_int8 const)96,  (yytype_int8 const)24,  (yytype_int8 const)5,
 3435|       |    (yytype_int8 const)6,   (yytype_int8 const)7,   (yytype_int8 const)8,
 3436|       |    (yytype_int8 const)9,   (yytype_int8 const)10,  (yytype_int8 const)0,
 3437|       |    (yytype_int8 const)12,  (yytype_int8 const)5,   (yytype_int8 const)6,
 3438|       |    (yytype_int8 const)7,   (yytype_int8 const)8,   (yytype_int8 const)9,
 3439|       |    (yytype_int8 const)10,  (yytype_int8 const)25,  (yytype_int8 const)4,
 3440|       |    (yytype_int8 const)27,  (yytype_int8 const)26,  (yytype_int8 const)20,
 3441|       |    (yytype_int8 const)30,  (yytype_int8 const)22,  (yytype_int8 const)9,
 3442|       |    (yytype_int8 const)9,   (yytype_int8 const)19,  (yytype_int8 const)24,
 3443|       |    (yytype_int8 const)3,   (yytype_int8 const)19,  (yytype_int8 const)26,
 3444|       |    (yytype_int8 const)20,  (yytype_int8 const)20,  (yytype_int8 const)20,
 3445|       |    (yytype_int8 const)59,  (yytype_int8 const)27,  (yytype_int8 const)84,
 3446|       |    (yytype_int8 const)20,  (yytype_int8 const)20,  (yytype_int8 const)-1,
 3447|       |    (yytype_int8 const)20,  (yytype_int8 const)20,  (yytype_int8 const)19,
 3448|       |    (yytype_int8 const)-1,  (yytype_int8 const)25
 3449|       |};
 3450|       |static yytype_uint8 const yystos[114] = {
 3451|       |    (yytype_uint8 const)0,  (yytype_uint8 const)23, (yytype_uint8 const)29,
 3452|       |    (yytype_uint8 const)30, (yytype_uint8 const)31, (yytype_uint8 const)19,
 3453|       |    (yytype_uint8 const)20, (yytype_uint8 const)21, (yytype_uint8 const)22,
 3454|       |    (yytype_uint8 const)48, (yytype_uint8 const)49, (yytype_uint8 const)50,
 3455|       |    (yytype_uint8 const)0,  (yytype_uint8 const)5,  (yytype_uint8 const)6,
 3456|       |    (yytype_uint8 const)7,  (yytype_uint8 const)8,  (yytype_uint8 const)9,
 3457|       |    (yytype_uint8 const)10, (yytype_uint8 const)11, (yytype_uint8 const)12,
 3458|       |    (yytype_uint8 const)13, (yytype_uint8 const)14, (yytype_uint8 const)16,
 3459|       |    (yytype_uint8 const)17, (yytype_uint8 const)18, (yytype_uint8 const)19,
 3460|       |    (yytype_uint8 const)20, (yytype_uint8 const)21, (yytype_uint8 const)22,
 3461|       |    (yytype_uint8 const)24, (yytype_uint8 const)32, (yytype_uint8 const)33,
 3462|       |    (yytype_uint8 const)34, (yytype_uint8 const)35, (yytype_uint8 const)36,
 3463|       |    (yytype_uint8 const)39, (yytype_uint8 const)40, (yytype_uint8 const)41,
 3464|       |    (yytype_uint8 const)42, (yytype_uint8 const)43, (yytype_uint8 const)44,
 3465|       |    (yytype_uint8 const)45, (yytype_uint8 const)46, (yytype_uint8 const)47,
 3466|       |    (yytype_uint8 const)51, (yytype_uint8 const)52, (yytype_uint8 const)26,
 3467|       |    (yytype_uint8 const)4,  (yytype_uint8 const)19, (yytype_uint8 const)20,
 3468|       |    (yytype_uint8 const)5,  (yytype_uint8 const)6,  (yytype_uint8 const)7,
 3469|       |    (yytype_uint8 const)8,  (yytype_uint8 const)9,  (yytype_uint8 const)10,
 3470|       |    (yytype_uint8 const)12, (yytype_uint8 const)4,  (yytype_uint8 const)19,
 3471|       |    (yytype_uint8 const)46, (yytype_uint8 const)5,  (yytype_uint8 const)6,
 3472|       |    (yytype_uint8 const)7,  (yytype_uint8 const)8,  (yytype_uint8 const)9,
 3473|       |    (yytype_uint8 const)10, (yytype_uint8 const)5,  (yytype_uint8 const)6,
 3474|       |    (yytype_uint8 const)7,  (yytype_uint8 const)8,  (yytype_uint8 const)9,
 3475|       |    (yytype_uint8 const)10, (yytype_uint8 const)12, (yytype_uint8 const)15,
 3476|       |    (yytype_uint8 const)16, (yytype_uint8 const)19, (yytype_uint8 const)25,
 3477|       |    (yytype_uint8 const)27, (yytype_uint8 const)38, (yytype_uint8 const)46,
 3478|       |    (yytype_uint8 const)9,  (yytype_uint8 const)9,  (yytype_uint8 const)46,
 3479|       |    (yytype_uint8 const)24, (yytype_uint8 const)3,  (yytype_uint8 const)19,
 3480|       |    (yytype_uint8 const)26, (yytype_uint8 const)25, (yytype_uint8 const)53,
 3481|       |    (yytype_uint8 const)19, (yytype_uint8 const)20, (yytype_uint8 const)19,
 3482|       |    (yytype_uint8 const)53, (yytype_uint8 const)20, (yytype_uint8 const)20,
 3483|       |    (yytype_uint8 const)20, (yytype_uint8 const)36, (yytype_uint8 const)20,
 3484|       |    (yytype_uint8 const)20, (yytype_uint8 const)15, (yytype_uint8 const)19,
 3485|       |    (yytype_uint8 const)25, (yytype_uint8 const)37, (yytype_uint8 const)38,
 3486|       |    (yytype_uint8 const)27, (yytype_uint8 const)25, (yytype_uint8 const)50,
 3487|       |    (yytype_uint8 const)20, (yytype_uint8 const)20, (yytype_uint8 const)15,
 3488|       |    (yytype_uint8 const)37, (yytype_uint8 const)25, (yytype_uint8 const)50
 3489|       |};
 3490|       |static void yydestruct(char const *yymsg, int yytype, YYSTYPE *yyvaluep,
 3491|       |                       parser_control *pc)
 3492|      6|{
 3493|       |
 3494|      6|    {
 3495|      6|        if (!yymsg) {
 3496|      0|            yymsg = "Deleting";
 3497|      0|        }
 3498|      6|        goto switch_default;
 3499|      6|switch_default:
 3500|      6|        goto switch_break;
 3501|      6|switch_break:
 3502|      6|        ;
 3503|      6|        return;
 3504|      6|    }
 3505|      6|}
 3506|       |int yyparse(parser_control *pc);
 3507|       |int yyparse(parser_control *pc)
 3508|      3|{
 3509|      3|    int yychar;
 3510|      3|    YYSTYPE yylval;
 3511|      3|    int yynerrs;
 3512|      3|    int yystate;
 3513|      3|    int yyerrstatus;
 3514|      3|    yytype_int16 yyssa[20];
 3515|      3|    yytype_int16 *yyss;
 3516|      3|    yytype_int16 *yyssp;
 3517|      3|    YYSTYPE yyvsa[20];
 3518|      3|    YYSTYPE *yyvs;
 3519|      3|    YYSTYPE *yyvsp;
 3520|      3|    unsigned long yystacksize;
 3521|      3|    int yyn;
 3522|      3|    int yyresult;
 3523|      3|    int yytoken;
 3524|      3|    YYSTYPE yyval;
 3525|      3|    int yylen;
 3526|      3|    unsigned long yysize;
 3527|      3|    yytype_int16 *yyss1;
 3528|      3|    union yyalloc *yyptr;
 3529|      3|    union yyalloc *tmp;
 3530|      3|    unsigned long yynewbytes;
 3531|      3|    unsigned long yynewbytes___0;
 3532|      3|    long tmp___0;
 3533|      3|    relative_time __constr_expr_13;
 3534|      3|    relative_time __constr_expr_14;
 3535|      3|    relative_time __constr_expr_15;
 3536|      3|    relative_time __constr_expr_16;
 3537|      3|    relative_time __constr_expr_17;
 3538|      3|    relative_time __constr_expr_18;
 3539|      3|    relative_time __constr_expr_19;
 3540|      3|    relative_time __constr_expr_20;
 3541|      3|    relative_time __constr_expr_21;
 3542|      3|    relative_time __constr_expr_22;
 3543|      3|    relative_time __constr_expr_23;
 3544|      3|    relative_time __constr_expr_24;
 3545|      3|    relative_time __constr_expr_25;
 3546|      3|    relative_time __constr_expr_26;
 3547|      3|    relative_time __constr_expr_27;
 3548|      3|    relative_time __constr_expr_28;
 3549|      3|    relative_time __constr_expr_29;
 3550|      3|    relative_time __constr_expr_30;
 3551|      3|    relative_time __constr_expr_31;
 3552|      3|    relative_time __constr_expr_32;
 3553|      3|    relative_time __constr_expr_33;
 3554|      3|    relative_time __constr_expr_34;
 3555|      3|    relative_time __constr_expr_35;
 3556|      3|    relative_time __constr_expr_36;
 3557|      3|    relative_time __constr_expr_37;
 3558|      3|    relative_time __constr_expr_38;
 3559|      3|    relative_time __constr_expr_39;
 3560|       |
 3561|      3|    {
 3562|      3|        yylen = 0;
 3563|      3|        yytoken = 0;
 3564|      3|        yyss = yyssa;
 3565|      3|        yyvs = yyvsa;
 3566|      3|        yystacksize = 20UL;
 3567|      3|        yystate = 0;
 3568|      3|        yyerrstatus = 0;
 3569|      3|        yynerrs = 0;
 3570|      3|        yychar = -2;
 3571|      3|        yyssp = yyss;
 3572|      3|        yyvsp = yyvs;
 3573|      3|        goto yysetstate;
 3574|     25|yynewstate:
 3575|     25|        yyssp++;
 3576|     28|yysetstate:
 3577|     28|        *yyssp = (yytype_int16)yystate;
 3578|     28|        if ((unsigned long)((yyss + yystacksize) - 1) <= (unsigned long)yyssp) {
 3579|      0|            yysize = (unsigned long)((yyssp - yyss) + 1L);
 3580|      0|            if (20UL <= yystacksize) {
 3581|      0|                goto yyexhaustedlab;
 3582|      0|            }
 3583|      0|            yystacksize *= 2UL;
 3584|      0|            if (20UL < yystacksize) {
 3585|      0|                yystacksize = 20UL;
 3586|      0|            }
 3587|      0|            yyss1 = yyss;
 3588|      0|            tmp = (union yyalloc *)malloc(
 3589|      0|                      yystacksize * (sizeof(yytype_int16) + sizeof(YYSTYPE)) +
 3590|      0|                      (sizeof(union yyalloc) - 1UL));
 3591|      0|            yyptr = tmp;
 3592|      0|            if (!yyptr) {
 3593|      0|                goto yyexhaustedlab;
 3594|      0|            }
 3595|      0|            while (1) {
 3596|      0|                __builtin_memcpy((void *)(&yyptr->yyss_alloc), (void const *)yyss,
 3597|      0|                                 yysize * sizeof(*yyss));
 3598|      0|                yyss = &yyptr->yyss_alloc;
 3599|      0|                yynewbytes =
 3600|      0|                    yystacksize * sizeof(*yyss) + (sizeof(union yyalloc) - 1UL);
 3601|      0|                yyptr += yynewbytes / sizeof(*yyptr);
 3602|      0|                goto while_break;
 3603|      0|            }
 3604|      0|while_break:
 3605|      0|            ;
 3606|      0|            while (1) {
 3607|      0|                __builtin_memcpy((void *)(&yyptr->yyvs_alloc), (void const *)yyvs,
 3608|      0|                                 yysize * sizeof(*yyvs));
 3609|      0|                yyvs = &yyptr->yyvs_alloc;
 3610|      0|                yynewbytes___0 =
 3611|      0|                    yystacksize * sizeof(*yyvs) + (sizeof(union yyalloc) - 1UL);
 3612|      0|                yyptr += yynewbytes___0 / sizeof(*yyptr);
 3613|      0|                goto while_break___0;
 3614|      0|            }
 3615|      0|while_break___0:
 3616|      0|            ;
 3617|      0|            if ((unsigned long)yyss1 != (unsigned long)(yyssa)) {
 3618|      0|                free((void *)yyss1);
 3619|      0|            }
 3620|      0|            yyssp = (yyss + yysize) - 1;
 3621|      0|            yyvsp = (yyvs + yysize) - 1;
 3622|      0|            if ((unsigned long)((yyss + yystacksize) - 1) <= (unsigned long)yyssp) {
 3623|      0|                goto yyabortlab;
 3624|      0|            }
 3625|      0|        }
 3626|     28|        if (yystate == 12) {
 3627|      3|            goto yyacceptlab;
 3628|      3|        }
 3629|     25|        goto yybackup;
 3630|     25|yybackup:
 3631|     25|        yyn = (int)yypact[yystate];
 3632|     25|        if (yyn == -93) {
 3633|     10|            goto yydefault;
 3634|     10|        }
 3635|     15|        if (yychar == -2) {
 3636|      8|            yychar = yylex(&yylval, pc);
 3637|      8|        }
 3638|     15|        if (yychar <= 0) {
 3639|      7|            yytoken = 0;
 3640|      7|            yychar = yytoken;
 3641|      7|        }
 3642|      8|        else {
 3643|      8|            if ((unsigned int)yychar <= 277U) {
 3644|      8|                yytoken = (int)yytranslate[yychar];
 3645|      8|            }
 3646|      0|            else {
 3647|      0|                yytoken = 2;
 3648|      0|            }
 3649|      8|        }
 3650|     15|        yyn += yytoken;
 3651|     15|        if (yyn < 0) {
 3652|      0|            goto yydefault;
 3653|      0|        }
 3654|     15|        else {
 3655|     15|            if (112 < yyn) {
 3656|      0|                goto yydefault;
 3657|      0|            }
 3658|     15|            else {
 3659|     15|                if ((int const)yycheck[yyn] != (int const)yytoken) {
 3660|      7|                    goto yydefault;
 3661|      7|                }
 3662|     15|            }
 3663|     15|        }
 3664|      8|        yyn = (int)yytable[yyn];
 3665|      8|        if (yyn <= 0) {
 3666|      0|            if (yyn == 0) {
 3667|      0|                goto yyerrlab;
 3668|      0|            }
 3669|      0|            else {
 3670|      0|                if (yyn == -1) {
 3671|      0|                    goto yyerrlab;
 3672|      0|                }
 3673|      0|            }
 3674|      0|            yyn = -yyn;
 3675|      0|            goto yyreduce;
 3676|      0|        }
 3677|      8|        if (yyerrstatus) {
 3678|      0|            yyerrstatus--;
 3679|      0|        }
 3680|      8|        yychar = -2;
 3681|      8|        yystate = yyn;
 3682|      8|        yyvsp++;
 3683|      8|        *yyvsp = yylval;
 3684|      8|        goto yynewstate;
 3685|     17|yydefault:
 3686|     17|        yyn = (int)yydefact[yystate];
 3687|     17|        if (yyn == 0) {
 3688|      0|            goto yyerrlab;
 3689|      0|        }
 3690|     17|        goto yyreduce;
 3691|     17|yyreduce:
 3692|     17|        yylen = (int)yyr2[yyn];
 3693|     17|        yyval = *(yyvsp + (1 - yylen));
 3694|     17|        if (yyn == 4) {
 3695|      0|            goto case_4;
 3696|      0|        }
 3697|     17|        if (yyn == 7) {
 3698|      0|            goto case_7;
 3699|      0|        }
 3700|     17|        if (yyn == 8) {
 3701|      0|            goto case_8;
 3702|      0|        }
 3703|     17|        if (yyn == 9) {
 3704|      0|            goto case_9;
 3705|      0|        }
 3706|     17|        if (yyn == 10) {
 3707|      0|            goto case_10;
 3708|      0|        }
 3709|     17|        if (yyn == 11) {
 3710|      0|            goto case_11;
 3711|      0|        }
 3712|     17|        if (yyn == 12) {
 3713|      1|            goto case_12;
 3714|      1|        }
 3715|     16|        if (yyn == 18) {
 3716|      0|            goto case_18;
 3717|      0|        }
 3718|     16|        if (yyn == 19) {
 3719|      0|            goto case_19;
 3720|      0|        }
 3721|     16|        if (yyn == 20) {
 3722|      0|            goto case_20;
 3723|      0|        }
 3724|     16|        if (yyn == 22) {
 3725|      0|            goto case_22;
 3726|      0|        }
 3727|     16|        if (yyn == 23) {
 3728|      0|            goto case_23;
 3729|      0|        }
 3730|     16|        if (yyn == 24) {
 3731|      0|            goto case_24;
 3732|      0|        }
 3733|     16|        if (yyn == 27) {
 3734|      0|            goto case_27;
 3735|      0|        }
 3736|     16|        if (yyn == 28) {
 3737|      0|            goto case_28;
 3738|      0|        }
 3739|     16|        if (yyn == 29) {
 3740|      0|            goto case_29;
 3741|      0|        }
 3742|     16|        if (yyn == 30) {
 3743|      0|            goto case_30;
 3744|      0|        }
 3745|     16|        if (yyn == 31) {
 3746|      0|            goto case_31;
 3747|      0|        }
 3748|     16|        if (yyn == 32) {
 3749|      0|            goto case_32;
 3750|      0|        }
 3751|     16|        if (yyn == 33) {
 3752|      0|            goto case_33;
 3753|      0|        }
 3754|     16|        if (yyn == 34) {
 3755|      0|            goto case_34;
 3756|      0|        }
 3757|     16|        if (yyn == 35) {
 3758|      0|            goto case_35;
 3759|      0|        }
 3760|     16|        if (yyn == 36) {
 3761|      0|            goto case_36;
 3762|      0|        }
 3763|     16|        if (yyn == 37) {
 3764|      0|            goto case_37;
 3765|      0|        }
 3766|     16|        if (yyn == 38) {
 3767|      0|            goto case_38;
 3768|      0|        }
 3769|     16|        if (yyn == 39) {
 3770|      1|            goto case_39;
 3771|      1|        }
 3772|     15|        if (yyn == 40) {
 3773|      0|            goto case_40;
 3774|      0|        }
 3775|     15|        if (yyn == 41) {
 3776|      0|            goto case_41;
 3777|      0|        }
 3778|     15|        if (yyn == 42) {
 3779|      0|            goto case_42;
 3780|      0|        }
 3781|     15|        if (yyn == 43) {
 3782|      0|            goto case_43;
 3783|      0|        }
 3784|     15|        if (yyn == 44) {
 3785|      0|            goto case_44;
 3786|      0|        }
 3787|     15|        if (yyn == 45) {
 3788|      0|            goto case_45;
 3789|      0|        }
 3790|     15|        if (yyn == 46) {
 3791|      0|            goto case_46;
 3792|      0|        }
 3793|     15|        if (yyn == 47) {
 3794|      0|            goto case_47;
 3795|      0|        }
 3796|     15|        if (yyn == 48) {
 3797|      0|            goto case_48;
 3798|      0|        }
 3799|     15|        if (yyn == 50) {
 3800|      0|            goto case_50;
 3801|      0|        }
 3802|     15|        if (yyn == 51) {
 3803|      0|            goto case_51;
 3804|      0|        }
 3805|     15|        if (yyn == 52) {
 3806|      1|            goto case_52;
 3807|      1|        }
 3808|     14|        if (yyn == 53) {
 3809|      1|            goto case_53;
 3810|      1|        }
 3811|     13|        if (yyn == 54) {
 3812|      1|            goto case_54;
 3813|      1|        }
 3814|     12|        if (yyn == 55) {
 3815|      0|            goto case_55;
 3816|      0|        }
 3817|     12|        if (yyn == 56) {
 3818|      0|            goto case_56;
 3819|      0|        }
 3820|     12|        if (yyn == 57) {
 3821|      0|            goto case_57;
 3822|      0|        }
 3823|     12|        if (yyn == 58) {
 3824|      0|            goto case_58;
 3825|      0|        }
 3826|     12|        if (yyn == 59) {
 3827|      0|            goto case_59;
 3828|      0|        }
 3829|     12|        if (yyn == 60) {
 3830|      0|            goto case_60;
 3831|      0|        }
 3832|     12|        if (yyn == 61) {
 3833|      0|            goto case_61;
 3834|      0|        }
 3835|     12|        if (yyn == 62) {
 3836|      0|            goto case_62;
 3837|      0|        }
 3838|     12|        if (yyn == 63) {
 3839|      0|            goto case_63;
 3840|      0|        }
 3841|     12|        if (yyn == 64) {
 3842|      0|            goto case_64;
 3843|      0|        }
 3844|     12|        if (yyn == 65) {
 3845|      0|            goto case_65;
 3846|      0|        }
 3847|     12|        if (yyn == 66) {
 3848|      0|            goto case_66;
 3849|      0|        }
 3850|     12|        if (yyn == 67) {
 3851|      0|            goto case_67;
 3852|      0|        }
 3853|     12|        if (yyn == 68) {
 3854|      0|            goto case_68;
 3855|      0|        }
 3856|     12|        if (yyn == 69) {
 3857|      0|            goto case_69;
 3858|      0|        }
 3859|     12|        if (yyn == 70) {
 3860|      0|            goto case_70;
 3861|      0|        }
 3862|     12|        if (yyn == 71) {
 3863|      0|            goto case_71;
 3864|      0|        }
 3865|     12|        if (yyn == 72) {
 3866|      0|            goto case_72;
 3867|      0|        }
 3868|     12|        if (yyn == 73) {
 3869|      0|            goto case_73;
 3870|      0|        }
 3871|     12|        if (yyn == 75) {
 3872|      0|            goto case_75;
 3873|      0|        }
 3874|     12|        if (yyn == 76) {
 3875|      0|            goto case_76;
 3876|      0|        }
 3877|     12|        if (yyn == 77) {
 3878|      0|            goto case_77;
 3879|      0|        }
 3880|     12|        if (yyn == 78) {
 3881|      0|            goto case_78;
 3882|      0|        }
 3883|     12|        if (yyn == 79) {
 3884|      0|            goto case_79;
 3885|      0|        }
 3886|     12|        if (yyn == 80) {
 3887|      0|            goto case_80;
 3888|      0|        }
 3889|     12|        if (yyn == 81) {
 3890|      1|            goto case_81;
 3891|      1|        }
 3892|     11|        if (yyn == 85) {
 3893|      0|            goto case_85;
 3894|      0|        }
 3895|     11|        if (yyn == 87) {
 3896|      0|            goto case_87;
 3897|      0|        }
 3898|     11|        if (yyn == 88) {
 3899|      0|            goto case_88;
 3900|      0|        }
 3901|     11|        if (yyn == 89) {
 3902|      0|            goto case_89;
 3903|      0|        }
 3904|     11|        if (yyn == 90) {
 3905|      0|            goto case_90;
 3906|      0|        }
 3907|     11|        if (yyn == 91) {
 3908|      0|            goto case_91;
 3909|      0|        }
 3910|     11|        goto switch_default;
 3911|     11|case_4:
 3912|      0|        pc->seconds = (yyvsp + 0)->timespec;
 3913|      0|        pc->timespec_seen = (_Bool)1;
 3914|      0|        goto switch_break;
 3915|      0|case_7:
 3916|      0|        (pc->times_seen)++;
 3917|      0|        (pc->dates_seen)++;
 3918|      0|        goto switch_break;
 3919|      0|case_8:
 3920|      0|        (pc->times_seen)++;
 3921|      0|        goto switch_break;
 3922|      0|case_9:
 3923|      0|        (pc->local_zones_seen)++;
 3924|      0|        goto switch_break;
 3925|      0|case_10:
 3926|      0|        (pc->zones_seen)++;
 3927|      0|        goto switch_break;
 3928|      0|case_11:
 3929|      0|        (pc->dates_seen)++;
 3930|      0|        goto switch_break;
 3931|      1|case_12:
 3932|      1|        (pc->days_seen)++;
 3933|      1|        goto switch_break;
 3934|      0|case_18:
 3935|      0|        set_hhmmss(pc, (yyvsp + -1)->textintval.value, 0L, (time_t)0, 0L);
 3936|      0|        pc->meridian = (int)(yyvsp + 0)->intval;
 3937|      0|        goto switch_break;
 3938|      0|case_19:
 3939|      0|        set_hhmmss(pc, (yyvsp + -3)->textintval.value,
 3940|      0|                   (yyvsp + -1)->textintval.value, (time_t)0, 0L);
 3941|      0|        pc->meridian = (int)(yyvsp + 0)->intval;
 3942|      0|        goto switch_break;
 3943|      0|case_20:
 3944|      0|        set_hhmmss(pc, (yyvsp + -5)->textintval.value,
 3945|      0|                   (yyvsp + -3)->textintval.value, (yyvsp + -1)->timespec.tv_sec,
 3946|      0|                   (yyvsp + -1)->timespec.tv_nsec);
 3947|      0|        pc->meridian = (int)(yyvsp + 0)->intval;
 3948|      0|        goto switch_break;
 3949|      0|case_22:
 3950|      0|        set_hhmmss(pc, (yyvsp + -1)->textintval.value, 0L, (time_t)0, 0L);
 3951|      0|        pc->meridian = 2;
 3952|      0|        goto switch_break;
 3953|      0|case_23:
 3954|      0|        set_hhmmss(pc, (yyvsp + -3)->textintval.value,
 3955|      0|                   (yyvsp + -1)->textintval.value, (time_t)0, 0L);
 3956|      0|        pc->meridian = 2;
 3957|      0|        goto switch_break;
 3958|      0|case_24:
 3959|      0|        set_hhmmss(pc, (yyvsp + -5)->textintval.value,
 3960|      0|                   (yyvsp + -3)->textintval.value, (yyvsp + -1)->timespec.tv_sec,
 3961|      0|                   (yyvsp + -1)->timespec.tv_nsec);
 3962|      0|        pc->meridian = 2;
 3963|      0|        goto switch_break;
 3964|      0|case_27:
 3965|      0|        (pc->zones_seen)++;
 3966|      0|        pc->time_zone =
 3967|      0|            time_zone_hhmm(pc, (yyvsp + -1)->textintval, (yyvsp + 0)->intval);
 3968|      0|        goto switch_break;
 3969|      0|case_28:
 3970|      0|        pc->local_isdst = (int)(yyvsp + 0)->intval;
 3971|      0|        pc->dsts_seen += (size_t)(0L < (yyvsp + 0)->intval);
 3972|      0|        goto switch_break;
 3973|      0|case_29:
 3974|      0|        pc->local_isdst = 1;
 3975|      0|        pc->dsts_seen += (size_t)((0L < (yyvsp + -1)->intval) + 1);
 3976|      0|        goto switch_break;
 3977|      0|case_30:
 3978|      0|        pc->time_zone = (yyvsp + 0)->intval;
 3979|      0|        goto switch_break;
 3980|      0|case_31:
 3981|      0|        pc->time_zone = 420L;
 3982|      0|        goto switch_break;
 3983|      0|case_32:
 3984|      0|        pc->time_zone = (yyvsp + -1)->intval;
 3985|      0|        apply_relative_time(pc, (yyvsp + 0)->rel, 1);
 3986|      0|        goto switch_break;
 3987|      0|case_33:
 3988|      0|        pc->time_zone = 420L;
 3989|      0|        apply_relative_time(pc, (yyvsp + 0)->rel, 1);
 3990|      0|        goto switch_break;
 3991|      0|case_34:
 3992|      0|        tmp___0 = time_zone_hhmm(pc, (yyvsp + -1)->textintval, (yyvsp + 0)->intval);
 3993|      0|        pc->time_zone = (yyvsp + -2)->intval + tmp___0;
 3994|      0|        goto switch_break;
 3995|      0|case_35:
 3996|      0|        pc->time_zone = (yyvsp + 0)->intval + 60L;
 3997|      0|        goto switch_break;
 3998|      0|case_36:
 3999|      0|        pc->time_zone = (yyvsp + -1)->intval + 60L;
 4000|      0|        goto switch_break;
 4001|      0|case_37:
 4002|      0|        pc->day_ordinal = 0L;
 4003|      0|        pc->day_number = (int)(yyvsp + 0)->intval;
 4004|      0|        goto switch_break;
 4005|      0|case_38:
 4006|      0|        pc->day_ordinal = 0L;
 4007|      0|        pc->day_number = (int)(yyvsp + -1)->intval;
 4008|      0|        goto switch_break;
 4009|      1|case_39:
 4010|      1|        pc->day_ordinal = (yyvsp + -1)->intval;
 4011|      1|        pc->day_number = (int)(yyvsp + 0)->intval;
 4012|      1|        goto switch_break;
 4013|      0|case_40:
 4014|      0|        pc->day_ordinal = (yyvsp + -1)->textintval.value;
 4015|      0|        pc->day_number = (int)(yyvsp + 0)->intval;
 4016|      0|        goto switch_break;
 4017|      0|case_41:
 4018|      0|        pc->month = (yyvsp + -2)->textintval.value;
 4019|      0|        pc->day = (yyvsp + 0)->textintval.value;
 4020|      0|        goto switch_break;
 4021|      0|case_42:
 4022|      0|        if (4UL <= (yyvsp + -4)->textintval.digits) {
 4023|      0|            pc->year = (yyvsp + -4)->textintval;
 4024|      0|            pc->month = (yyvsp + -2)->textintval.value;
 4025|      0|            pc->day = (yyvsp + 0)->textintval.value;
 4026|      0|        }
 4027|      0|        else {
 4028|      0|            pc->month = (yyvsp + -4)->textintval.value;
 4029|      0|            pc->day = (yyvsp + -2)->textintval.value;
 4030|      0|            pc->year = (yyvsp + 0)->textintval;
 4031|      0|        }
 4032|      0|        goto switch_break;
 4033|      0|case_43:
 4034|      0|        pc->day = (yyvsp + -2)->textintval.value;
 4035|      0|        pc->month = (yyvsp + -1)->intval;
 4036|      0|        pc->year.value = -(yyvsp + 0)->textintval.value;
 4037|      0|        pc->year.digits = (yyvsp + 0)->textintval.digits;
 4038|      0|        goto switch_break;
 4039|      0|case_44:
 4040|      0|        pc->month = (yyvsp + -2)->intval;
 4041|      0|        pc->day = -(yyvsp + -1)->textintval.value;
 4042|      0|        pc->year.value = -(yyvsp + 0)->textintval.value;
 4043|      0|        pc->year.digits = (yyvsp + 0)->textintval.digits;
 4044|      0|        goto switch_break;
 4045|      0|case_45:
 4046|      0|        pc->month = (yyvsp + -1)->intval;
 4047|      0|        pc->day = (yyvsp + 0)->textintval.value;
 4048|      0|        goto switch_break;
 4049|      0|case_46:
 4050|      0|        pc->month = (yyvsp + -3)->intval;
 4051|      0|        pc->day = (yyvsp + -2)->textintval.value;
 4052|      0|        pc->year = (yyvsp + 0)->textintval;
 4053|      0|        goto switch_break;
 4054|      0|case_47:
 4055|      0|        pc->day = (yyvsp + -1)->textintval.value;
 4056|      0|        pc->month = (yyvsp + 0)->intval;
 4057|      0|        goto switch_break;
 4058|      0|case_48:
 4059|      0|        pc->day = (yyvsp + -2)->textintval.value;
 4060|      0|        pc->month = (yyvsp + -1)->intval;
 4061|      0|        pc->year = (yyvsp + 0)->textintval;
 4062|      0|        goto switch_break;
 4063|      0|case_50:
 4064|      0|        pc->year = (yyvsp + -2)->textintval;
 4065|      0|        pc->month = -(yyvsp + -1)->textintval.value;
 4066|      0|        pc->day = -(yyvsp + 0)->textintval.value;
 4067|      0|        goto switch_break;
 4068|      0|case_51:
 4069|      0|        apply_relative_time(pc, (yyvsp + -1)->rel, (int)(yyvsp + 0)->intval);
 4070|      0|        goto switch_break;
 4071|      1|case_52:
 4072|      1|        apply_relative_time(pc, (yyvsp + 0)->rel, 1);
 4073|      1|        goto switch_break;
 4074|      1|case_53:
 4075|      1|        apply_relative_time(pc, (yyvsp + 0)->rel, 1);
 4076|      1|        goto switch_break;
 4077|      1|case_54:
 4078|      1|        __constr_expr_13.year = 0L;
 4079|      1|        __constr_expr_13.month = 0L;
 4080|      1|        __constr_expr_13.day = 0L;
 4081|      1|        __constr_expr_13.hour = 0L;
 4082|      1|        __constr_expr_13.minutes = 0L;
 4083|      1|        __constr_expr_13.seconds = (long_time_t)0;
 4084|      1|        __constr_expr_13.ns = 0L;
 4085|      1|        yyval.rel = __constr_expr_13;
 4086|      1|        yyval.rel.year = (yyvsp + -1)->intval;
 4087|      1|        goto switch_break;
 4088|      0|case_55:
 4089|      0|        __constr_expr_14.year = 0L;
 4090|      0|        __constr_expr_14.month = 0L;
 4091|      0|        __constr_expr_14.day = 0L;
 4092|      0|        __constr_expr_14.hour = 0L;
 4093|      0|        __constr_expr_14.minutes = 0L;
 4094|      0|        __constr_expr_14.seconds = (long_time_t)0;
 4095|      0|        __constr_expr_14.ns = 0L;
 4096|      0|        yyval.rel = __constr_expr_14;
 4097|      0|        yyval.rel.year = (yyvsp + -1)->textintval.value;
 4098|      0|        goto switch_break;
 4099|      0|case_56:
 4100|      0|        __constr_expr_15.year = 0L;
 4101|      0|        __constr_expr_15.month = 0L;
 4102|      0|        __constr_expr_15.day = 0L;
 4103|      0|        __constr_expr_15.hour = 0L;
 4104|      0|        __constr_expr_15.minutes = 0L;
 4105|      0|        __constr_expr_15.seconds = (long_time_t)0;
 4106|      0|        __constr_expr_15.ns = 0L;
 4107|      0|        yyval.rel = __constr_expr_15;
 4108|      0|        yyval.rel.year = 1L;
 4109|      0|        goto switch_break;
 4110|      0|case_57:
 4111|      0|        __constr_expr_16.year = 0L;
 4112|      0|        __constr_expr_16.month = 0L;
 4113|      0|        __constr_expr_16.day = 0L;
 4114|      0|        __constr_expr_16.hour = 0L;
 4115|      0|        __constr_expr_16.minutes = 0L;
 4116|      0|        __constr_expr_16.seconds = (long_time_t)0;
 4117|      0|        __constr_expr_16.ns = 0L;
 4118|      0|        yyval.rel = __constr_expr_16;
 4119|      0|        yyval.rel.month = (yyvsp + -1)->intval;
 4120|      0|        goto switch_break;
 4121|      0|case_58:
 4122|      0|        __constr_expr_17.year = 0L;
 4123|      0|        __constr_expr_17.month = 0L;
 4124|      0|        __constr_expr_17.day = 0L;
 4125|      0|        __constr_expr_17.hour = 0L;
 4126|      0|        __constr_expr_17.minutes = 0L;
 4127|      0|        __constr_expr_17.seconds = (long_time_t)0;
 4128|      0|        __constr_expr_17.ns = 0L;
 4129|      0|        yyval.rel = __constr_expr_17;
 4130|      0|        yyval.rel.month = (yyvsp + -1)->textintval.value;
 4131|      0|        goto switch_break;
 4132|      0|case_59:
 4133|      0|        __constr_expr_18.year = 0L;
 4134|      0|        __constr_expr_18.month = 0L;
 4135|      0|        __constr_expr_18.day = 0L;
 4136|      0|        __constr_expr_18.hour = 0L;
 4137|      0|        __constr_expr_18.minutes = 0L;
 4138|      0|        __constr_expr_18.seconds = (long_time_t)0;
 4139|      0|        __constr_expr_18.ns = 0L;
 4140|      0|        yyval.rel = __constr_expr_18;
 4141|      0|        yyval.rel.month = 1L;
 4142|      0|        goto switch_break;
 4143|      0|case_60:
 4144|      0|        __constr_expr_19.year = 0L;
 4145|      0|        __constr_expr_19.month = 0L;
 4146|      0|        __constr_expr_19.day = 0L;
 4147|      0|        __constr_expr_19.hour = 0L;
 4148|      0|        __constr_expr_19.minutes = 0L;
 4149|      0|        __constr_expr_19.seconds = (long_time_t)0;
 4150|      0|        __constr_expr_19.ns = 0L;
 4151|      0|        yyval.rel = __constr_expr_19;
 4152|      0|        yyval.rel.day = (yyvsp + -1)->intval * (yyvsp + 0)->intval;
 4153|      0|        goto switch_break;
 4154|      0|case_61:
 4155|      0|        __constr_expr_20.year = 0L;
 4156|      0|        __constr_expr_20.month = 0L;
 4157|      0|        __constr_expr_20.day = 0L;
 4158|      0|        __constr_expr_20.hour = 0L;
 4159|      0|        __constr_expr_20.minutes = 0L;
 4160|      0|        __constr_expr_20.seconds = (long_time_t)0;
 4161|      0|        __constr_expr_20.ns = 0L;
 4162|      0|        yyval.rel = __constr_expr_20;
 4163|      0|        yyval.rel.day = (yyvsp + -1)->textintval.value * (yyvsp + 0)->intval;
 4164|      0|        goto switch_break;
 4165|      0|case_62:
 4166|      0|        __constr_expr_21.year = 0L;
 4167|      0|        __constr_expr_21.month = 0L;
 4168|      0|        __constr_expr_21.day = 0L;
 4169|      0|        __constr_expr_21.hour = 0L;
 4170|      0|        __constr_expr_21.minutes = 0L;
 4171|      0|        __constr_expr_21.seconds = (long_time_t)0;
 4172|      0|        __constr_expr_21.ns = 0L;
 4173|      0|        yyval.rel = __constr_expr_21;
 4174|      0|        yyval.rel.day = (yyvsp + 0)->intval;
 4175|      0|        goto switch_break;
 4176|      0|case_63:
 4177|      0|        __constr_expr_22.year = 0L;
 4178|      0|        __constr_expr_22.month = 0L;
 4179|      0|        __constr_expr_22.day = 0L;
 4180|      0|        __constr_expr_22.hour = 0L;
 4181|      0|        __constr_expr_22.minutes = 0L;
 4182|      0|        __constr_expr_22.seconds = (long_time_t)0;
 4183|      0|        __constr_expr_22.ns = 0L;
 4184|      0|        yyval.rel = __constr_expr_22;
 4185|      0|        yyval.rel.hour = (yyvsp + -1)->intval;
 4186|      0|        goto switch_break;
 4187|      0|case_64:
 4188|      0|        __constr_expr_23.year = 0L;
 4189|      0|        __constr_expr_23.month = 0L;
 4190|      0|        __constr_expr_23.day = 0L;
 4191|      0|        __constr_expr_23.hour = 0L;
 4192|      0|        __constr_expr_23.minutes = 0L;
 4193|      0|        __constr_expr_23.seconds = (long_time_t)0;
 4194|      0|        __constr_expr_23.ns = 0L;
 4195|      0|        yyval.rel = __constr_expr_23;
 4196|      0|        yyval.rel.hour = (yyvsp + -1)->textintval.value;
 4197|      0|        goto switch_break;
 4198|      0|case_65:
 4199|      0|        __constr_expr_24.year = 0L;
 4200|      0|        __constr_expr_24.month = 0L;
 4201|      0|        __constr_expr_24.day = 0L;
 4202|      0|        __constr_expr_24.hour = 0L;
 4203|      0|        __constr_expr_24.minutes = 0L;
 4204|      0|        __constr_expr_24.seconds = (long_time_t)0;
 4205|      0|        __constr_expr_24.ns = 0L;
 4206|      0|        yyval.rel = __constr_expr_24;
 4207|      0|        yyval.rel.hour = 1L;
 4208|      0|        goto switch_break;
 4209|      0|case_66:
 4210|      0|        __constr_expr_25.year = 0L;
 4211|      0|        __constr_expr_25.month = 0L;
 4212|      0|        __constr_expr_25.day = 0L;
 4213|      0|        __constr_expr_25.hour = 0L;
 4214|      0|        __constr_expr_25.minutes = 0L;
 4215|      0|        __constr_expr_25.seconds = (long_time_t)0;
 4216|      0|        __constr_expr_25.ns = 0L;
 4217|      0|        yyval.rel = __constr_expr_25;
 4218|      0|        yyval.rel.minutes = (yyvsp + -1)->intval;
 4219|      0|        goto switch_break;
 4220|      0|case_67:
 4221|      0|        __constr_expr_26.year = 0L;
 4222|      0|        __constr_expr_26.month = 0L;
 4223|      0|        __constr_expr_26.day = 0L;
 4224|      0|        __constr_expr_26.hour = 0L;
 4225|      0|        __constr_expr_26.minutes = 0L;
 4226|      0|        __constr_expr_26.seconds = (long_time_t)0;
 4227|      0|        __constr_expr_26.ns = 0L;
 4228|      0|        yyval.rel = __constr_expr_26;
 4229|      0|        yyval.rel.minutes = (yyvsp + -1)->textintval.value;
 4230|      0|        goto switch_break;
 4231|      0|case_68:
 4232|      0|        __constr_expr_27.year = 0L;
 4233|      0|        __constr_expr_27.month = 0L;
 4234|      0|        __constr_expr_27.day = 0L;
 4235|      0|        __constr_expr_27.hour = 0L;
 4236|      0|        __constr_expr_27.minutes = 0L;
 4237|      0|        __constr_expr_27.seconds = (long_time_t)0;
 4238|      0|        __constr_expr_27.ns = 0L;
 4239|      0|        yyval.rel = __constr_expr_27;
 4240|      0|        yyval.rel.minutes = 1L;
 4241|      0|        goto switch_break;
 4242|      0|case_69:
 4243|      0|        __constr_expr_28.year = 0L;
 4244|      0|        __constr_expr_28.month = 0L;
 4245|      0|        __constr_expr_28.day = 0L;
 4246|      0|        __constr_expr_28.hour = 0L;
 4247|      0|        __constr_expr_28.minutes = 0L;
 4248|      0|        __constr_expr_28.seconds = (long_time_t)0;
 4249|      0|        __constr_expr_28.ns = 0L;
 4250|      0|        yyval.rel = __constr_expr_28;
 4251|      0|        yyval.rel.seconds = (yyvsp + -1)->intval;
 4252|      0|        goto switch_break;
 4253|      0|case_70:
 4254|      0|        __constr_expr_29.year = 0L;
 4255|      0|        __constr_expr_29.month = 0L;
 4256|      0|        __constr_expr_29.day = 0L;
 4257|      0|        __constr_expr_29.hour = 0L;
 4258|      0|        __constr_expr_29.minutes = 0L;
 4259|      0|        __constr_expr_29.seconds = (long_time_t)0;
 4260|      0|        __constr_expr_29.ns = 0L;
 4261|      0|        yyval.rel = __constr_expr_29;
 4262|      0|        yyval.rel.seconds = (yyvsp + -1)->textintval.value;
 4263|      0|        goto switch_break;
 4264|      0|case_71:
 4265|      0|        __constr_expr_30.year = 0L;
 4266|      0|        __constr_expr_30.month = 0L;
 4267|      0|        __constr_expr_30.day = 0L;
 4268|      0|        __constr_expr_30.hour = 0L;
 4269|      0|        __constr_expr_30.minutes = 0L;
 4270|      0|        __constr_expr_30.seconds = (long_time_t)0;
 4271|      0|        __constr_expr_30.ns = 0L;
 4272|      0|        yyval.rel = __constr_expr_30;
 4273|      0|        yyval.rel.seconds = (yyvsp + -1)->timespec.tv_sec;
 4274|      0|        yyval.rel.ns = (yyvsp + -1)->timespec.tv_nsec;
 4275|      0|        goto switch_break;
 4276|      0|case_72:
 4277|      0|        __constr_expr_31.year = 0L;
 4278|      0|        __constr_expr_31.month = 0L;
 4279|      0|        __constr_expr_31.day = 0L;
 4280|      0|        __constr_expr_31.hour = 0L;
 4281|      0|        __constr_expr_31.minutes = 0L;
 4282|      0|        __constr_expr_31.seconds = (long_time_t)0;
 4283|      0|        __constr_expr_31.ns = 0L;
 4284|      0|        yyval.rel = __constr_expr_31;
 4285|      0|        yyval.rel.seconds = (yyvsp + -1)->timespec.tv_sec;
 4286|      0|        yyval.rel.ns = (yyvsp + -1)->timespec.tv_nsec;
 4287|      0|        goto switch_break;
 4288|      0|case_73:
 4289|      0|        __constr_expr_32.year = 0L;
 4290|      0|        __constr_expr_32.month = 0L;
 4291|      0|        __constr_expr_32.day = 0L;
 4292|      0|        __constr_expr_32.hour = 0L;
 4293|      0|        __constr_expr_32.minutes = 0L;
 4294|      0|        __constr_expr_32.seconds = (long_time_t)0;
 4295|      0|        __constr_expr_32.ns = 0L;
 4296|      0|        yyval.rel = __constr_expr_32;
 4297|      0|        yyval.rel.seconds = (long_time_t)1;
 4298|      0|        goto switch_break;
 4299|      0|case_75:
 4300|      0|        __constr_expr_33.year = 0L;
 4301|      0|        __constr_expr_33.month = 0L;
 4302|      0|        __constr_expr_33.day = 0L;
 4303|      0|        __constr_expr_33.hour = 0L;
 4304|      0|        __constr_expr_33.minutes = 0L;
 4305|      0|        __constr_expr_33.seconds = (long_time_t)0;
 4306|      0|        __constr_expr_33.ns = 0L;
 4307|      0|        yyval.rel = __constr_expr_33;
 4308|      0|        yyval.rel.year = (yyvsp + -1)->textintval.value;
 4309|      0|        goto switch_break;
 4310|      0|case_76:
 4311|      0|        __constr_expr_34.year = 0L;
 4312|      0|        __constr_expr_34.month = 0L;
 4313|      0|        __constr_expr_34.day = 0L;
 4314|      0|        __constr_expr_34.hour = 0L;
 4315|      0|        __constr_expr_34.minutes = 0L;
 4316|      0|        __constr_expr_34.seconds = (long_time_t)0;
 4317|      0|        __constr_expr_34.ns = 0L;
 4318|      0|        yyval.rel = __constr_expr_34;
 4319|      0|        yyval.rel.month = (yyvsp + -1)->textintval.value;
 4320|      0|        goto switch_break;
 4321|      0|case_77:
 4322|      0|        __constr_expr_35.year = 0L;
 4323|      0|        __constr_expr_35.month = 0L;
 4324|      0|        __constr_expr_35.day = 0L;
 4325|      0|        __constr_expr_35.hour = 0L;
 4326|      0|        __constr_expr_35.minutes = 0L;
 4327|      0|        __constr_expr_35.seconds = (long_time_t)0;
 4328|      0|        __constr_expr_35.ns = 0L;
 4329|      0|        yyval.rel = __constr_expr_35;
 4330|      0|        yyval.rel.day = (yyvsp + -1)->textintval.value * (yyvsp + 0)->intval;
 4331|      0|        goto switch_break;
 4332|      0|case_78:
 4333|      0|        __constr_expr_36.year = 0L;
 4334|      0|        __constr_expr_36.month = 0L;
 4335|      0|        __constr_expr_36.day = 0L;
 4336|      0|        __constr_expr_36.hour = 0L;
 4337|      0|        __constr_expr_36.minutes = 0L;
 4338|      0|        __constr_expr_36.seconds = (long_time_t)0;
 4339|      0|        __constr_expr_36.ns = 0L;
 4340|      0|        yyval.rel = __constr_expr_36;
 4341|      0|        yyval.rel.hour = (yyvsp + -1)->textintval.value;
 4342|      0|        goto switch_break;
 4343|      0|case_79:
 4344|      0|        __constr_expr_37.year = 0L;
 4345|      0|        __constr_expr_37.month = 0L;
 4346|      0|        __constr_expr_37.day = 0L;
 4347|      0|        __constr_expr_37.hour = 0L;
 4348|      0|        __constr_expr_37.minutes = 0L;
 4349|      0|        __constr_expr_37.seconds = (long_time_t)0;
 4350|      0|        __constr_expr_37.ns = 0L;
 4351|      0|        yyval.rel = __constr_expr_37;
 4352|      0|        yyval.rel.minutes = (yyvsp + -1)->textintval.value;
 4353|      0|        goto switch_break;
 4354|      0|case_80:
 4355|      0|        __constr_expr_38.year = 0L;
 4356|      0|        __constr_expr_38.month = 0L;
 4357|      0|        __constr_expr_38.day = 0L;
 4358|      0|        __constr_expr_38.hour = 0L;
 4359|      0|        __constr_expr_38.minutes = 0L;
 4360|      0|        __constr_expr_38.seconds = (long_time_t)0;
 4361|      0|        __constr_expr_38.ns = 0L;
 4362|      0|        yyval.rel = __constr_expr_38;
 4363|      0|        yyval.rel.seconds = (yyvsp + -1)->textintval.value;
 4364|      0|        goto switch_break;
 4365|      1|case_81:
 4366|      1|        __constr_expr_39.year = 0L;
 4367|      1|        __constr_expr_39.month = 0L;
 4368|      1|        __constr_expr_39.day = 0L;
 4369|      1|        __constr_expr_39.hour = 0L;
 4370|      1|        __constr_expr_39.minutes = 0L;
 4371|      1|        __constr_expr_39.seconds = (long_time_t)0;
 4372|      1|        __constr_expr_39.ns = 0L;
 4373|      1|        yyval.rel = __constr_expr_39;
 4374|      1|        yyval.rel.day = (yyvsp + 0)->intval;
 4375|      1|        goto switch_break;
 4376|      0|case_85:
 4377|      0|        yyval.timespec.tv_sec = (yyvsp + 0)->textintval.value;
 4378|      0|        yyval.timespec.tv_nsec = (__syscall_slong_t)0;
 4379|      0|        goto switch_break;
 4380|      0|case_87:
 4381|      0|        yyval.timespec.tv_sec = (yyvsp + 0)->textintval.value;
 4382|      0|        yyval.timespec.tv_nsec = (__syscall_slong_t)0;
 4383|      0|        goto switch_break;
 4384|      0|case_88:
 4385|      0|        digits_to_date_time(pc, (yyvsp + 0)->textintval);
 4386|      0|        goto switch_break;
 4387|      0|case_89:
 4388|      0|        digits_to_date_time(pc, (yyvsp + -1)->textintval);
 4389|      0|        apply_relative_time(pc, (yyvsp + 0)->rel, 1);
 4390|      0|        goto switch_break;
 4391|      0|case_90:
 4392|      0|        yyval.intval = -1L;
 4393|      0|        goto switch_break;
 4394|      0|case_91:
 4395|      0|        yyval.intval = (yyvsp + 0)->textintval.value;
 4396|      0|        goto switch_break;
 4397|     11|switch_default:
 4398|     11|        goto switch_break;
 4399|     17|switch_break:
 4400|     17|        yyvsp -= yylen;
 4401|     17|        yyssp -= yylen;
 4402|     17|        yylen = 0;
 4403|     17|        yyvsp++;
 4404|     17|        *yyvsp = yyval;
 4405|     17|        yyn = (int)yyr1[yyn];
 4406|     17|        yystate = (int)((int const)yypgoto[yyn - 28] + (int const) * yyssp);
 4407|     17|        if (0 <= yystate) {
 4408|      0|            if (yystate <= 112) {
 4409|      0|                if ((int const)yycheck[yystate] == (int const) * yyssp) {
 4410|      0|                    yystate = (int)yytable[yystate];
 4411|      0|                }
 4412|      0|                else {
 4413|      0|                    yystate = (int)yydefgoto[yyn - 28];
 4414|      0|                }
 4415|      0|            }
 4416|      0|            else {
 4417|      0|                yystate = (int)yydefgoto[yyn - 28];
 4418|      0|            }
 4419|      0|        }
 4420|     17|        else {
 4421|     17|            yystate = (int)yydefgoto[yyn - 28];
 4422|     17|        }
 4423|     17|        goto yynewstate;
 4424|      0|yyerrlab:
 4425|      0|        if (!yyerrstatus) {
 4426|      0|            yynerrs++;
 4427|      0|            yyerror((parser_control const *)pc, "syntax error");
 4428|      0|        }
 4429|      0|        if (yyerrstatus == 3) {
 4430|      0|            if (yychar <= 0) {
 4431|      0|                if (yychar == 0) {
 4432|      0|                    goto yyabortlab;
 4433|      0|                }
 4434|      0|            }
 4435|      0|            else {
 4436|      0|                yydestruct("Error: discarding", yytoken, &yylval, pc);
 4437|      0|                yychar = -2;
 4438|      0|            }
 4439|      0|        }
 4440|      0|        goto yyerrlab1;
 4441|      0|        yyvsp -= yylen;
 4442|      0|        yyssp -= yylen;
 4443|      0|        yylen = 0;
 4444|      0|        yystate = (int)*yyssp;
 4445|      0|        goto yyerrlab1;
 4446|      0|yyerrlab1:
 4447|      0|        yyerrstatus = 3;
 4448|      0|        while (1) {
 4449|      0|            yyn = (int)yypact[yystate];
 4450|      0|            if (yyn != -93) {
 4451|      0|                yyn++;
 4452|      0|                if (0 <= yyn) {
 4453|      0|                    if (yyn <= 112) {
 4454|      0|                        if ((int const)yycheck[yyn] == 1) {
 4455|      0|                            yyn = (int)yytable[yyn];
 4456|      0|                            if (0 < yyn) {
 4457|      0|                                goto while_break___1;
 4458|      0|                            }
 4459|      0|                        }
 4460|      0|                    }
 4461|      0|                }
 4462|      0|            }
 4463|      0|            if ((unsigned long)yyssp == (unsigned long)yyss) {
 4464|      0|                goto yyabortlab;
 4465|      0|            }
 4466|      0|            yydestruct("Error: popping", (int)yystos[yystate], yyvsp, pc);
 4467|      0|            yyvsp--;
 4468|      0|            yyssp--;
 4469|      0|            yystate = (int)*yyssp;
 4470|      0|        }
 4471|      0|while_break___1:
 4472|      0|        yyvsp++;
 4473|      0|        *yyvsp = yylval;
 4474|      0|        yystate = yyn;
 4475|      0|        goto yynewstate;
 4476|      3|yyacceptlab:
 4477|      3|        yyresult = 0;
 4478|      3|        goto yyreturn;
 4479|      0|yyabortlab:
 4480|      0|        yyresult = 1;
 4481|      0|        goto yyreturn;
 4482|      0|yyexhaustedlab:
 4483|      0|        yyerror((parser_control const *)pc, "memory exhausted");
 4484|      0|        yyresult = 2;
 4485|      3|yyreturn:
 4486|      3|        if (yychar != -2) {
 4487|      0|            yydestruct("Cleanup: discarding lookahead", yytoken, &yylval, pc);
 4488|      0|        }
 4489|      3|        yyvsp -= yylen;
 4490|      3|        yyssp -= yylen;
 4491|      9|        while (1) {
 4492|       |
 4493|      9|            if (!((unsigned long)yyssp != (unsigned long)yyss)) {
 4494|      3|                goto while_break___2;
 4495|      3|            }
 4496|      6|            yydestruct("Cleanup: popping", (int)yystos[*yyssp], yyvsp, pc);
 4497|      6|            yyvsp--;
 4498|      6|            yyssp--;
 4499|      6|        }
 4500|      3|while_break___2:
 4501|      3|        ;
 4502|      3|        if ((unsigned long)yyss != (unsigned long)(yyssa)) {
 4503|      0|            free((void *)yyss);
 4504|      0|        }
 4505|      3|        return (yyresult);
 4506|      3|    }
 4507|      3|}
 4508|       |static table const meridian_table[5] = {{"AM", 270, 0},
 4509|       |    {"A.M.", 270, 0},
 4510|       |    {"PM", 270, 1},
 4511|       |    {"P.M.", 270, 1},
 4512|       |    {(char const *)((void *)0), 0, 0}
 4513|       |};
 4514|       |static table const dst_table[1] = {{"DST", 259, 0}};
 4515|       |static table const month_and_day_table[25] = {
 4516|       |    {"JANUARY", 271, 1},
 4517|       |    {"FEBRUARY", 271, 2},
 4518|       |    {"MARCH", 271, 3},
 4519|       |    {"APRIL", 271, 4},
 4520|       |    {"MAY", 271, 5},
 4521|       |    {"JUNE", 271, 6},
 4522|       |    {"JULY", 271, 7},
 4523|       |    {"AUGUST", 271, 8},
 4524|       |    {"SEPTEMBER", 271, 9},
 4525|       |    {"SEPT", 271, 9},
 4526|       |    {"OCTOBER", 271, 10},
 4527|       |    {"NOVEMBER", 271, 11},
 4528|       |    {"DECEMBER", 271, 12},
 4529|       |    {"SUNDAY", 267, 0},
 4530|       |    {"MONDAY", 267, 1},
 4531|       |    {"TUESDAY", 267, 2},
 4532|       |    {"TUES", 267, 2},
 4533|       |    {"WEDNESDAY", 267, 3},
 4534|       |    {"WEDNES", 267, 3},
 4535|       |    {"THURSDAY", 267, 4},
 4536|       |    {"THUR", 267, 4},
 4537|       |    {"THURS", 267, 4},
 4538|       |    {"FRIDAY", 267, 5},
 4539|       |    {"SATURDAY", 267, 6},
 4540|       |    {(char const *)((void *)0), 0, 0}
 4541|       |};
 4542|       |static table const time_units_table[11] = {{"YEAR", 260, 1},
 4543|       |    {"MONTH", 261, 1},
 4544|       |    {"FORTNIGHT", 265, 14},
 4545|       |    {"WEEK", 265, 7},
 4546|       |    {"DAY", 265, 1},
 4547|       |    {"HOUR", 262, 1},
 4548|       |    {"MINUTE", 263, 1},
 4549|       |    {"MIN", 263, 1},
 4550|       |    {"SECOND", 264, 1},
 4551|       |    {"SEC", 264, 1},
 4552|       |    {(char const *)((void *)0), 0, 0}
 4553|       |};
 4554|       |static table const relative_time_table[21] = {
 4555|       |    {"TOMORROW", 266, 1},
 4556|       |    {"YESTERDAY", 266, -1},
 4557|       |    {"TODAY", 266, 0},
 4558|       |    {"NOW", 266, 0},
 4559|       |    {"LAST", 272, -1},
 4560|       |    {"THIS", 272, 0},
 4561|       |    {"NEXT", 272, 1},
 4562|       |    {"FIRST", 272, 1},
 4563|       |    {"THIRD", 272, 3},
 4564|       |    {"FOURTH", 272, 4},
 4565|       |    {"FIFTH", 272, 5},
 4566|       |    {"SIXTH", 272, 6},
 4567|       |    {"SEVENTH", 272, 7},
 4568|       |    {"EIGHTH", 272, 8},
 4569|       |    {"NINTH", 272, 9},
 4570|       |    {"TENTH", 272, 10},
 4571|       |    {"ELEVENTH", 272, 11},
 4572|       |    {"TWELFTH", 272, 12},
 4573|       |    {"AGO", 258, -1},
 4574|       |    {"HENCE", 258, 1},
 4575|       |    {(char const *)((void *)0), 0, 0}
 4576|       |};
 4577|       |static table const universal_time_zone_table[4] = {
 4578|       |    {"GMT", 273, 0},
 4579|       |    {"UT", 273, 0},
 4580|       |    {"UTC", 273, 0},
 4581|       |    {(char const *)((void *)0), 0, 0}
 4582|       |};
 4583|       |static table const time_zone_table[48] = {
 4584|       |    {"WET", 273, 0},     {"WEST", 268, 0},   {"BST", 268, 0},
 4585|       |    {"ART", 273, -180},  {"BRT", 273, -180}, {"BRST", 268, -180},
 4586|       |    {"NST", 273, -210},  {"NDT", 268, -210}, {"AST", 273, -240},
 4587|       |    {"ADT", 268, -240},  {"CLT", 273, -240}, {"CLST", 268, -240},
 4588|       |    {"EST", 273, -300},  {"EDT", 268, -300}, {"CST", 273, -360},
 4589|       |    {"CDT", 268, -360},  {"MST", 273, -420}, {"MDT", 268, -420},
 4590|       |    {"PST", 273, -480},  {"PDT", 268, -480}, {"AKST", 273, -540},
 4591|       |    {"AKDT", 268, -540}, {"HST", 273, -600}, {"HAST", 273, -600},
 4592|       |    {"HADT", 268, -600}, {"SST", 273, -720}, {"WAT", 273, 60},
 4593|       |    {"CET", 273, 60},    {"CEST", 268, 60},  {"MET", 273, 60},
 4594|       |    {"MEZ", 273, 60},    {"MEST", 268, 60},  {"MESZ", 268, 60},
 4595|       |    {"EET", 273, 120},   {"EEST", 268, 120}, {"CAT", 273, 120},
 4596|       |    {"SAST", 273, 120},  {"EAT", 273, 180},  {"MSK", 273, 180},
 4597|       |    {"MSD", 268, 180},   {"IST", 273, 330},  {"SGT", 273, 480},
 4598|       |    {"KST", 273, 540},   {"JST", 273, 540},  {"GST", 273, 600},
 4599|       |    {"NZST", 273, 720},  {"NZDT", 268, 720}, {(char const *)((void *)0), 0, 0}
 4600|       |};
 4601|       |static table const military_table[26] = {
 4602|       |    {"A", 273, -60},  {"B", 273, -120},
 4603|       |    {"C", 273, -180}, {"D", 273, -240},
 4604|       |    {"E", 273, -300}, {"F", 273, -360},
 4605|       |    {"G", 273, -420}, {"H", 273, -480},
 4606|       |    {"I", 273, -540}, {"K", 273, -600},
 4607|       |    {"L", 273, -660}, {"M", 273, -720},
 4608|       |    {"N", 273, 60},   {"O", 273, 120},
 4609|       |    {"P", 273, 180},  {"Q", 273, 240},
 4610|       |    {"R", 273, 300},  {"S", 273, 360},
 4611|       |    {"T", 'T', 0},    {"U", 273, 480},
 4612|       |    {"V", 273, 540},  {"W", 273, 600},
 4613|       |    {"X", 273, 660},  {"Y", 273, 720},
 4614|       |    {"Z", 273, 0},    {(char const *)((void *)0), 0, 0}
 4615|       |};
 4616|       |static long time_zone_hhmm(parser_control *pc, textint s, long mm)
 4617|      0|{
 4618|      0|    long n_minutes;
 4619|      0|    long tmp;
 4620|      0|    int tmp___0;
 4621|       |
 4622|      0|    {
 4623|      0|        if (s.digits <= 2UL) {
 4624|      0|            if (mm < 0L) {
 4625|      0|                s.value *= 100L;
 4626|      0|            }
 4627|      0|        }
 4628|      0|        if (mm < 0L) {
 4629|      0|            n_minutes = (s.value / 100L) * 60L + s.value % 100L;
 4630|      0|        }
 4631|      0|        else {
 4632|      0|            if (s.negative) {
 4633|      0|                tmp = -mm;
 4634|      0|            }
 4635|      0|            else {
 4636|      0|                tmp = mm;
 4637|      0|            }
 4638|      0|            n_minutes = s.value * 60L + tmp;
 4639|      0|        }
 4640|      0|        tmp___0 = abs((int)n_minutes);
 4641|      0|        if (1440 < tmp___0) {
 4642|      0|            (pc->zones_seen)++;
 4643|      0|        }
 4644|      0|        return (n_minutes);
 4645|      0|    }
 4646|      0|}
 4647|       |static int to_hour(long hours, int meridian)
 4648|      2|{
 4649|      2|    long tmp;
 4650|      2|    int tmp___0;
 4651|      2|    long tmp___1;
 4652|      2|    int tmp___2;
 4653|      2|    long tmp___3;
 4654|       |
 4655|      2|    {
 4656|      2|        if (meridian == 0) {
 4657|      0|            goto case_0;
 4658|      0|        }
 4659|      2|        if (meridian == 1) {
 4660|      0|            goto case_1;
 4661|      0|        }
 4662|      2|        goto switch_default;
 4663|      2|switch_default:
 4664|      2|        if (0L <= hours) {
 4665|      2|            if (hours < 24L) {
 4666|      2|                tmp = hours;
 4667|      2|            }
 4668|      0|            else {
 4669|      0|                tmp = -1L;
 4670|      0|            }
 4671|      2|        }
 4672|      0|        else {
 4673|      0|            tmp = -1L;
 4674|      0|        }
 4675|      2|        return ((int)tmp);
 4676|      0|case_0:
 4677|      0|        if (0L < hours) {
 4678|      0|            if (hours < 12L) {
 4679|      0|                tmp___1 = hours;
 4680|      0|            }
 4681|      0|            else {
 4682|      0|                goto _L;
 4683|      0|            }
 4684|      0|        }
 4685|      0|        else {
 4686|      0|_L:
 4687|      0|            if (hours == 12L) {
 4688|      0|                tmp___0 = 0;
 4689|      0|            }
 4690|      0|            else {
 4691|      0|                tmp___0 = -1;
 4692|      0|            }
 4693|      0|            tmp___1 = (long)tmp___0;
 4694|      0|        }
 4695|      0|        return ((int)tmp___1);
 4696|      0|case_1:
 4697|      0|        if (0L < hours) {
 4698|      0|            if (hours < 12L) {
 4699|      0|                tmp___3 = hours + 12L;
 4700|      0|            }
 4701|      0|            else {
 4702|      0|                goto _L___0;
 4703|      0|            }
 4704|      0|        }
 4705|      0|        else {
 4706|      0|_L___0:
 4707|      0|            if (hours == 12L) {
 4708|      0|                tmp___2 = 12;
 4709|      0|            }
 4710|      0|            else {
 4711|      0|                tmp___2 = -1;
 4712|      0|            }
 4713|      0|            tmp___3 = (long)tmp___2;
 4714|      0|        }
 4715|      0|        return ((int)tmp___3);
 4716|       |
 4717|      0|        return (0);
 4718|      0|    }
 4719|      0|}
 4720|       |static long to_year(textint textyear)
 4721|      3|{
 4722|      3|    long year___1;
 4723|      3|    int tmp;
 4724|       |
 4725|      3|    {
 4726|      3|        year___1 = textyear.value;
 4727|      3|        if (year___1 < 0L) {
 4728|      0|            year___1 = -year___1;
 4729|      0|        }
 4730|      3|        else {
 4731|      3|            if (textyear.digits == 2UL) {
 4732|      0|                if (year___1 < 69L) {
 4733|      0|                    tmp = 2000;
 4734|      0|                }
 4735|      0|                else {
 4736|      0|                    tmp = 1900;
 4737|      0|                }
 4738|      0|                year___1 += (long)tmp;
 4739|      0|            }
 4740|      3|        }
 4741|      3|        return (year___1);
 4742|      3|    }
 4743|      3|}
 4744|       |static table const *__attribute__((__pure__))
 4745|       |lookup_zone(parser_control const *pc, char const *name)
 4746|      4|{
 4747|      4|    table const *tp;
 4748|      4|    int tmp;
 4749|      4|    int tmp___0;
 4750|      4|    int tmp___1;
 4751|       |
 4752|      4|    {
 4753|      4|        tp = universal_time_zone_table;
 4754|     16|        while (1) {
 4755|       |
 4756|     16|            if (!tp->name) {
 4757|      4|                goto while_break;
 4758|      4|            }
 4759|     12|            tmp = strcmp(name, (char const *)tp->name);
 4760|     12|            if (tmp == 0) {
 4761|      0|                return (tp);
 4762|      0|            }
 4763|     12|            tp++;
 4764|     12|        }
 4765|      4|while_break:
 4766|      4|        tp = (table const *)(pc->local_time_zone_table);
 4767|      8|        while (1) {
 4768|       |
 4769|      8|            if (!tp->name) {
 4770|      4|                goto while_break___0;
 4771|      4|            }
 4772|      4|            tmp___0 = strcmp(name, (char const *)tp->name);
 4773|      4|            if (tmp___0 == 0) {
 4774|      0|                return (tp);
 4775|      0|            }
 4776|      4|            tp++;
 4777|      4|        }
 4778|      4|while_break___0:
 4779|      4|        tp = time_zone_table;
 4780|    192|        while (1) {
 4781|       |
 4782|    192|            if (!tp->name) {
 4783|      4|                goto while_break___1;
 4784|      4|            }
 4785|    188|            tmp___1 = strcmp(name, (char const *)tp->name);
 4786|    188|            if (tmp___1 == 0) {
 4787|      0|                return (tp);
 4788|      0|            }
 4789|    188|            tp++;
 4790|    188|        }
 4791|      4|while_break___1:
 4792|      4|        ;
 4793|      4|        return ((table const *)((void *)0));
 4794|      4|    }
 4795|      4|}
 4796|       |static table const *lookup_word(parser_control const *pc, char *word___0)
 4797|      5|{
 4798|      5|    char *p;
 4799|      5|    char *q;
 4800|      5|    size_t wordlen;
 4801|      5|    table const *tp;
 4802|      5|    _Bool period_found;
 4803|      5|    _Bool abbrev;
 4804|      5|    unsigned char ch;
 4805|      5|    int tmp;
 4806|      5|    int tmp___0;
 4807|      5|    int tmp___1;
 4808|      5|    int tmp___2;
 4809|      5|    int tmp___3;
 4810|      5|    int tmp___4;
 4811|      5|    int tmp___5;
 4812|      5|    int tmp___6;
 4813|      5|    int tmp___7;
 4814|      5|    char tmp___8;
 4815|       |
 4816|      5|    {
 4817|      5|        p = word___0;
 4818|     32|        while (1) {
 4819|       |
 4820|     32|            if (!*p) {
 4821|      5|                goto while_break;
 4822|      5|            }
 4823|     27|            ch = (unsigned char)*p;
 4824|     27|            *p = (char)c_toupper((int)ch);
 4825|     27|            p++;
 4826|     27|        }
 4827|      5|while_break:
 4828|      5|        tp = meridian_table;
 4829|     25|        while (1) {
 4830|       |
 4831|     25|            if (!tp->name) {
 4832|      5|                goto while_break___0;
 4833|      5|            }
 4834|     20|            tmp = strcmp((char const *)word___0, (char const *)tp->name);
 4835|     20|            if (tmp == 0) {
 4836|      0|                return (tp);
 4837|      0|            }
 4838|     20|            tp++;
 4839|     20|        }
 4840|      5|while_break___0:
 4841|      5|        wordlen = strlen((char const *)word___0);
 4842|      5|        if (wordlen == 3UL) {
 4843|      0|            tmp___0 = 1;
 4844|      0|        }
 4845|      5|        else {
 4846|      5|            if (wordlen == 4UL) {
 4847|      3|                if ((int)*(word___0 + 3) == 46) {
 4848|      0|                    tmp___0 = 1;
 4849|      0|                }
 4850|      3|                else {
 4851|      3|                    tmp___0 = 0;
 4852|      3|                }
 4853|      3|            }
 4854|      2|            else {
 4855|      2|                tmp___0 = 0;
 4856|      2|            }
 4857|      5|        }
 4858|      5|        abbrev = (_Bool)tmp___0;
 4859|      5|        tp = month_and_day_table;
 4860|    115|        while (1) {
 4861|       |
 4862|    115|            if (!tp->name) {
 4863|      4|                goto while_break___1;
 4864|      4|            }
 4865|    111|            if (abbrev) {
 4866|      0|                tmp___1 =
 4867|      0|                    strncmp((char const *)word___0, (char const *)tp->name, (size_t)3);
 4868|      0|                tmp___3 = tmp___1;
 4869|      0|            }
 4870|    111|            else {
 4871|    111|                tmp___2 = strcmp((char const *)word___0, (char const *)tp->name);
 4872|    111|                tmp___3 = tmp___2;
 4873|    111|            }
 4874|    111|            if (tmp___3 == 0) {
 4875|      1|                return (tp);
 4876|      1|            }
 4877|    110|            tp++;
 4878|    110|        }
 4879|      4|while_break___1:
 4880|      4|        tp = (table const *)lookup_zone(pc, (char const *)word___0);
 4881|      4|        if (tp) {
 4882|      0|            return (tp);
 4883|      0|        }
 4884|      4|        tmp___4 = strcmp((char const *)word___0, (char const *)dst_table[0].name);
 4885|      4|        if (tmp___4 == 0) {
 4886|      0|            return (dst_table);
 4887|      0|        }
 4888|      4|        tp = time_units_table;
 4889|     34|        while (1) {
 4890|       |
 4891|     34|            if (!tp->name) {
 4892|      3|                goto while_break___2;
 4893|      3|            }
 4894|     31|            tmp___5 = strcmp((char const *)word___0, (char const *)tp->name);
 4895|     31|            if (tmp___5 == 0) {
 4896|      1|                return (tp);
 4897|      1|            }
 4898|     30|            tp++;
 4899|     30|        }
 4900|      3|while_break___2:
 4901|      3|        ;
 4902|      3|        if ((int)*(word___0 + (wordlen - 1UL)) == 83) {
 4903|      0|            *(word___0 + (wordlen - 1UL)) = (char)'\000';
 4904|      0|            tp = time_units_table;
 4905|      0|            while (1) {
 4906|       |
 4907|      0|                if (!tp->name) {
 4908|      0|                    goto while_break___3;
 4909|      0|                }
 4910|      0|                tmp___6 = strcmp((char const *)word___0, (char const *)tp->name);
 4911|      0|                if (tmp___6 == 0) {
 4912|      0|                    return (tp);
 4913|      0|                }
 4914|      0|                tp++;
 4915|      0|            }
 4916|      0|while_break___3:
 4917|      0|            *(word___0 + (wordlen - 1UL)) = (char)'S';
 4918|      0|        }
 4919|      3|        tp = relative_time_table;
 4920|     14|        while (1) {
 4921|       |
 4922|     14|            if (!tp->name) {
 4923|      0|                goto while_break___4;
 4924|      0|            }
 4925|     14|            tmp___7 = strcmp((char const *)word___0, (char const *)tp->name);
 4926|     14|            if (tmp___7 == 0) {
 4927|      3|                return (tp);
 4928|      3|            }
 4929|     11|            tp++;
 4930|     11|        }
 4931|      0|while_break___4:
 4932|      0|        ;
 4933|      0|        if (wordlen == 1UL) {
 4934|      0|            tp = military_table;
 4935|      0|            while (1) {
 4936|       |
 4937|      0|                if (!tp->name) {
 4938|      0|                    goto while_break___5;
 4939|      0|                }
 4940|      0|                if ((int)*(word___0 + 0) == (int)*(tp->name + 0)) {
 4941|      0|                    return (tp);
 4942|      0|                }
 4943|      0|                tp++;
 4944|      0|            }
 4945|      0|while_break___5:
 4946|      0|            ;
 4947|      0|        }
 4948|      0|        period_found = (_Bool)0;
 4949|      0|        q = word___0;
 4950|      0|        p = q;
 4951|      0|        while (1) {
 4952|      0|            tmp___8 = *q;
 4953|      0|            *p = tmp___8;
 4954|      0|            if (!tmp___8) {
 4955|      0|                goto while_break___6;
 4956|      0|            }
 4957|      0|            if ((int)*q == 46) {
 4958|      0|                period_found = (_Bool)1;
 4959|      0|            }
 4960|      0|            else {
 4961|      0|                p++;
 4962|      0|            }
 4963|      0|            q++;
 4964|      0|        }
 4965|      0|while_break___6:
 4966|      0|        ;
 4967|      0|        if (period_found) {
 4968|      0|            tp = (table const *)lookup_zone(pc, (char const *)word___0);
 4969|      0|            if (tp) {
 4970|      0|                return (tp);
 4971|      0|            }
 4972|      0|        }
 4973|      0|        return ((table const *)((void *)0));
 4974|      0|    }
 4975|      0|}
 4976|       |static int yylex(union YYSTYPE *lvalp, parser_control *pc)
 4977|      8|{
 4978|      8|    unsigned char c;
 4979|      8|    size_t count;
 4980|      8|    _Bool tmp;
 4981|      8|    char const *p;
 4982|      8|    int sign;
 4983|      8|    unsigned long value;
 4984|      8|    _Bool tmp___0;
 4985|      8|    unsigned long value1;
 4986|      8|    time_t s;
 4987|      8|    int ns;
 4988|      8|    int digits;
 4989|      8|    unsigned long value1___0;
 4990|      8|    char const *tmp___1;
 4991|      8|    char const *tmp___2;
 4992|      8|    int tmp___3;
 4993|      8|    int tmp___4;
 4994|      8|    char buff[20];
 4995|      8|    char *p___0;
 4996|      8|    table const *tp;
 4997|      8|    char *tmp___5;
 4998|      8|    _Bool tmp___6;
 4999|      8|    _Bool tmp___7;
 5000|      8|    char const *tmp___8;
 5001|      8|    int tmp___9;
 5002|      8|    char const *tmp___10;
 5003|       |
 5004|      8|    {
 5005|      8|        while (1) {
 5006|       |
 5007|     10|            while (1) {
 5008|     10|                c = (unsigned char)*(pc->input);
 5009|     10|                tmp = c_isspace((int)c);
 5010|     10|                if (!tmp) {
 5011|      8|                    goto while_break___0;
 5012|      8|                }
 5013|      2|                (pc->input)++;
 5014|      2|            }
 5015|      8|while_break___0:
 5016|      8|            ;
 5017|      8|            if ((unsigned int)c - 48U <= 9U) {
 5018|      0|                goto _L___2;
 5019|      0|            }
 5020|      8|            else {
 5021|      8|                if ((int)c == 45) {
 5022|      0|                    goto _L___2;
 5023|      0|                }
 5024|      8|                else {
 5025|      8|                    if ((int)c == 43) {
 5026|      0|_L___2:
 5027|      0|                        if ((int)c == 45) {
 5028|      0|                            goto _L;
 5029|      0|                        }
 5030|      0|                        else {
 5031|      0|                            if ((int)c == 43) {
 5032|      0|_L:
 5033|      0|                                if ((int)c == 45) {
 5034|      0|                                    sign = -1;
 5035|      0|                                }
 5036|      0|                                else {
 5037|      0|                                    sign = 1;
 5038|      0|                                }
 5039|      0|                                while (1) {
 5040|      0|while_continue___1:
 5041|      0|                                    (pc->input)++;
 5042|      0|                                    c = (unsigned char)*(pc->input);
 5043|      0|                                    tmp___0 = c_isspace((int)c);
 5044|      0|                                    if (!tmp___0) {
 5045|      0|                                        goto while_break___1;
 5046|      0|                                    }
 5047|      0|                                    goto while_continue___1;
 5048|      0|                                }
 5049|      0|while_break___1:
 5050|      0|                                ;
 5051|      0|                                if (!((unsigned int)c - 48U <= 9U)) {
 5052|      0|                                    goto __Cont;
 5053|      0|                                }
 5054|      0|                            }
 5055|      0|                            else {
 5056|      0|                                sign = 0;
 5057|      0|                            }
 5058|      0|                        }
 5059|      0|                        p = pc->input;
 5060|      0|                        value = 0UL;
 5061|      0|                        while (1) {
 5062|      0|                            value1 = value + (unsigned long)((int)c - 48);
 5063|      0|                            if (value1 < value) {
 5064|      0|                                return ('?');
 5065|      0|                            }
 5066|      0|                            value = value1;
 5067|      0|                            p++;
 5068|      0|                            c = (unsigned char)*p;
 5069|      0|                            if (!((unsigned int)c - 48U <= 9U)) {
 5070|      0|                                goto while_break___2;
 5071|      0|                            }
 5072|      0|                            if (1844674407370955161UL < value) {
 5073|      0|                                return ('?');
 5074|      0|                            }
 5075|      0|                            value *= 10UL;
 5076|      0|                        }
 5077|      0|while_break___2:
 5078|      0|                        ;
 5079|      0|                        if ((int)c == 46) {
 5080|      0|                            goto _L___1;
 5081|      0|                        }
 5082|      0|                        else {
 5083|      0|                            if ((int)c == 44) {
 5084|      0|_L___1:
 5085|      0|                                if ((unsigned int)*(p + 1) - 48U <= 9U) {
 5086|      0|                                    if (sign < 0) {
 5087|      0|                                        s = (time_t)(-value);
 5088|      0|                                        if (0L < s) {
 5089|      0|                                            return ('?');
 5090|      0|                                        }
 5091|      0|                                        value1___0 = (unsigned long)(-s);
 5092|      0|                                    }
 5093|      0|                                    else {
 5094|      0|                                        s = (time_t)value;
 5095|      0|                                        if (s < 0L) {
 5096|      0|                                            return ('?');
 5097|      0|                                        }
 5098|      0|                                        value1___0 = (unsigned long)s;
 5099|      0|                                    }
 5100|      0|                                    if (value != value1___0) {
 5101|      0|                                        return ('?');
 5102|      0|                                    }
 5103|      0|                                    p++;
 5104|      0|                                    tmp___1 = p;
 5105|      0|                                    p++;
 5106|      0|                                    ns = (int)((int const) * tmp___1 - 48);
 5107|      0|                                    digits = 2;
 5108|      0|                                    while (1) {
 5109|       |
 5110|      0|                                        if (!(digits <= 9)) {
 5111|      0|                                            goto while_break___3;
 5112|      0|                                        }
 5113|      0|                                        ns *= 10;
 5114|      0|                                        if ((unsigned int)*p - 48U <= 9U) {
 5115|      0|                                            tmp___2 = p;
 5116|      0|                                            p++;
 5117|      0|                                            ns += (int)((int const) * tmp___2 - 48);
 5118|      0|                                        }
 5119|      0|                                        digits++;
 5120|      0|                                    }
 5121|      0|while_break___3:
 5122|      0|                                    ;
 5123|      0|                                    if (sign < 0) {
 5124|      0|                                        while (1) {
 5125|       |
 5126|      0|                                            if (!((unsigned int)*p - 48U <= 9U)) {
 5127|      0|                                                goto while_break___4;
 5128|      0|                                            }
 5129|      0|                                            if ((int const) * p != 48) {
 5130|      0|                                                ns++;
 5131|      0|                                                goto while_break___4;
 5132|      0|                                            }
 5133|      0|                                            p++;
 5134|      0|                                        }
 5135|      0|while_break___4:
 5136|      0|                                        ;
 5137|      0|                                    }
 5138|      0|                                    while (1) {
 5139|       |
 5140|      0|                                        if (!((unsigned int)*p - 48U <= 9U)) {
 5141|      0|                                            goto while_break___5;
 5142|      0|                                        }
 5143|      0|                                        p++;
 5144|      0|                                    }
 5145|      0|while_break___5:
 5146|      0|                                    ;
 5147|      0|                                    if (sign < 0) {
 5148|      0|                                        if (ns) {
 5149|      0|                                            s--;
 5150|      0|                                            if (!(s < 0L)) {
 5151|      0|                                                return ('?');
 5152|      0|                                            }
 5153|      0|                                            ns = 1000000000 - ns;
 5154|      0|                                        }
 5155|      0|                                    }
 5156|      0|                                    lvalp->timespec.tv_sec = s;
 5157|      0|                                    lvalp->timespec.tv_nsec = (__syscall_slong_t)ns;
 5158|      0|                                    pc->input = p;
 5159|      0|                                    if (sign) {
 5160|      0|                                        tmp___3 = 276;
 5161|      0|                                    }
 5162|      0|                                    else {
 5163|      0|                                        tmp___3 = 277;
 5164|      0|                                    }
 5165|      0|                                    return (tmp___3);
 5166|      0|                                }
 5167|      0|                                else {
 5168|      0|                                    goto _L___0;
 5169|      0|                                }
 5170|      0|                            }
 5171|      0|                            else {
 5172|      0|_L___0:
 5173|      0|                                lvalp->textintval.negative = (_Bool)(sign < 0);
 5174|      0|                                if (sign < 0) {
 5175|      0|                                    lvalp->textintval.value = (long)(-value);
 5176|      0|                                    if (0L < lvalp->textintval.value) {
 5177|      0|                                        return ('?');
 5178|      0|                                    }
 5179|      0|                                }
 5180|      0|                                else {
 5181|      0|                                    lvalp->textintval.value = (long)value;
 5182|      0|                                    if (lvalp->textintval.value < 0L) {
 5183|      0|                                        return ('?');
 5184|      0|                                    }
 5185|      0|                                }
 5186|      0|                                lvalp->textintval.digits = (size_t)(p - pc->input);
 5187|      0|                                pc->input = p;
 5188|      0|                                if (sign) {
 5189|      0|                                    tmp___4 = 274;
 5190|      0|                                }
 5191|      0|                                else {
 5192|      0|                                    tmp___4 = 275;
 5193|      0|                                }
 5194|      0|                                return (tmp___4);
 5195|      0|                            }
 5196|      0|                        }
 5197|      0|                    }
 5198|      8|                }
 5199|      8|            }
 5200|      8|            tmp___7 = c_isalpha((int)c);
 5201|      8|            if (tmp___7) {
 5202|      5|                p___0 = buff;
 5203|     27|                while (1) {
 5204|       |
 5205|     27|                    if ((unsigned long)(p___0 - buff) < sizeof(buff) - 1UL) {
 5206|     27|                        tmp___5 = p___0;
 5207|     27|                        p___0++;
 5208|     27|                        *tmp___5 = (char)c;
 5209|     27|                    }
 5210|     27|                    (pc->input)++;
 5211|     27|                    c = (unsigned char)*(pc->input);
 5212|     27|                    tmp___6 = c_isalpha((int)c);
 5213|     27|                    if (!tmp___6) {
 5214|      5|                        if (!((int)c == 46)) {
 5215|      5|                            goto while_break___6;
 5216|      5|                        }
 5217|      5|                    }
 5218|     27|                }
 5219|      5|while_break___6:
 5220|      5|                *p___0 = (char)'\000';
 5221|      5|                tp = lookup_word((parser_control const *)pc, buff);
 5222|      5|                if (!tp) {
 5223|      0|                    return ('?');
 5224|      0|                }
 5225|      5|                lvalp->intval = (long)tp->value;
 5226|      5|                return ((int)tp->type);
 5227|      5|            }
 5228|      3|            if ((int)c != 40) {
 5229|      3|                tmp___8 = pc->input;
 5230|      3|                (pc->input)++;
 5231|      3|                tmp___9 = (int)to_uchar___0((char)*tmp___8);
 5232|      3|                return (tmp___9);
 5233|      3|            }
 5234|      0|            count = (size_t)0;
 5235|      0|            while (1) {
 5236|      0|                tmp___10 = pc->input;
 5237|      0|                (pc->input)++;
 5238|      0|                c = (unsigned char)*tmp___10;
 5239|      0|                if ((int)c == 0) {
 5240|      0|                    return ((int)c);
 5241|      0|                }
 5242|      0|                if ((int)c == 40) {
 5243|      0|                    count++;
 5244|      0|                }
 5245|      0|                else {
 5246|      0|                    if ((int)c == 41) {
 5247|      0|                        count--;
 5248|      0|                    }
 5249|      0|                }
 5250|      0|                if (!(count != 0UL)) {
 5251|      0|                    goto while_break___7;
 5252|      0|                }
 5253|      0|            }
 5254|      0|while_break___7:
 5255|      0|            ;
 5256|      0|__Cont:
 5257|      0|            ;
 5258|      0|        }
 5259|       |
 5260|      0|        return (0);
 5261|      8|    }
 5262|      8|}
 5263|       |static int yyerror(parser_control const *pc __attribute__((__unused__)),
 5264|       |                   char const *s __attribute__((__unused__)))
 5265|      0|{
 5266|       |
 5267|      0|    {
 5268|      0|        return (0);
 5269|      0|    }
 5270|      0|}
 5271|       |static _Bool mktime_ok(struct tm const *tm0, struct tm const *tm1, time_t t)
 5272|      3|{
 5273|       |
 5274|      3|    {
 5275|      3|        if (t == -1L) {
 5276|      0|            tm1 = (struct tm const *)localtime((time_t const *)(&t));
 5277|      0|            if (!tm1) {
 5278|      0|                return ((_Bool)0);
 5279|      0|            }
 5280|      0|        }
 5281|      3|        return ((_Bool)(!(
 5282|      3|                            (((((tm0->tm_sec ^ tm1->tm_sec) | (tm0->tm_min ^ tm1->tm_min)) |
 5283|      3|                               (tm0->tm_hour ^ tm1->tm_hour)) |
 5284|      3|                              (tm0->tm_mday ^ tm1->tm_mday)) |
 5285|      3|                             (tm0->tm_mon ^ tm1->tm_mon)) |
 5286|      3|                            (tm0->tm_year ^ tm1->tm_year))));
 5287|      3|    }
 5288|      3|}
 5289|       |static char *get_tz(char *tzbuf)
 5290|      0|{
 5291|      0|    char *tz;
 5292|      0|    char *tmp;
 5293|      0|    size_t tzsize;
 5294|      0|    size_t tmp___0;
 5295|      0|    void *tmp___1;
 5296|      0|    void *tmp___2;
 5297|       |
 5298|      0|    {
 5299|      0|        tmp = getenv("TZ");
 5300|      0|        tz = tmp;
 5301|      0|        if (tz) {
 5302|      0|            tmp___0 = strlen((char const *)tz);
 5303|      0|            tzsize = tmp___0 + 1UL;
 5304|      0|            if (tzsize <= 100UL) {
 5305|      0|                tmp___1 = memcpy((void *)tzbuf, (void const *)tz, tzsize);
 5306|      0|                tz = (char *)tmp___1;
 5307|      0|            }
 5308|      0|            else {
 5309|      0|                tmp___2 = xmemdup((void const *)tz, tzsize);
 5310|      0|                tz = (char *)tmp___2;
 5311|      0|            }
 5312|      0|        }
 5313|      0|        return (tz);
 5314|      0|    }
 5315|      0|}
 5316|       |_Bool parse_datetime(struct timespec *result, char const *p,
 5317|       |                     struct timespec const *now)
 5318|      3|{
 5319|      3|    time_t Start;
 5320|      3|    long Start_ns;
 5321|      3|    struct tm const *tmp;
 5322|      3|    struct tm tm;
 5323|      3|    struct tm tm0;
 5324|      3|    parser_control pc;
 5325|      3|    struct timespec gettime_buffer;
 5326|      3|    unsigned char c;
 5327|      3|    _Bool tz_was_altered;
 5328|      3|    char *tz0;
 5329|      3|    char tz0buf[100];
 5330|      3|    _Bool ok;
 5331|      3|    _Bool tmp___0;
 5332|      3|    char const *tzbase;
 5333|      3|    size_t tzsize;
 5334|      3|    char const *s;
 5335|      3|    char *z;
 5336|      3|    char *tz1;
 5337|      3|    char tz1buf[100];
 5338|      3|    _Bool large_tz;
 5339|      3|    _Bool setenv_ok;
 5340|      3|    void *tmp___1;
 5341|      3|    char *tmp___2;
 5342|      3|    int tmp___3;
 5343|      3|    int tmp___4;
 5344|      3|    relative_time __constr_expr_40;
 5345|      3|    int quarter;
 5346|      3|    time_t probe;
 5347|      3|    struct tm const *probe_tm;
 5348|      3|    struct tm const *tmp___5;
 5349|      3|    int tmp___6;
 5350|      3|    int tmp___7;
 5351|      3|    long tmp___8;
 5352|      3|    long time_zone;
 5353|      3|    long abs_time_zone;
 5354|      3|    long tmp___9;
 5355|      3|    long abs_time_zone_hour;
 5356|      3|    int abs_time_zone_min;
 5357|      3|    char tz1buf___0[sizeof("XXX+0:00") + (sizeof(pc.time_zone) * 8UL) / 3UL];
 5358|      3|    int tmp___10;
 5359|      3|    _Bool tmp___11;
 5360|      3|    _Bool tmp___12;
 5361|      3|    int tmp___13;
 5362|      3|    int year___1;
 5363|      3|    int month;
 5364|      3|    int day;
 5365|      3|    long delta;
 5366|      3|    time_t t1;
 5367|      3|    long sum_ns;
 5368|      3|    long normalized_ns;
 5369|      3|    time_t t0;
 5370|      3|    long d1;
 5371|      3|    time_t t1___0;
 5372|      3|    long d2;
 5373|      3|    time_t t2;
 5374|      3|    long_time_t d3;
 5375|      3|    long_time_t t3;
 5376|      3|    long d4;
 5377|      3|    long_time_t t4;
 5378|      3|    time_t t5;
 5379|      3|    int tmp___14;
 5380|      3|    int tmp___15;
 5381|      3|    int tmp___16;
 5382|       |
 5383|      3|    {
 5384|      3|        tz_was_altered = (_Bool)0;
 5385|      3|        tz0 = (char *)((void *)0);
 5386|      3|        ok = (_Bool)1;
 5387|      3|        if (!now) {
 5388|      3|            gettime(&gettime_buffer);
 5389|      3|            now = (struct timespec const *)(&gettime_buffer);
 5390|      3|        }
 5391|      3|        Start = (time_t)now->tv_sec;
 5392|      3|        Start_ns = (long)now->tv_nsec;
 5393|      3|        tmp = (struct tm const *)localtime(&now->tv_sec);
 5394|      3|        if (!tmp) {
 5395|      0|            return ((_Bool)0);
 5396|      0|        }
 5397|      3|        while (1) {
 5398|      3|            c = (unsigned char)*p;
 5399|      3|            tmp___0 = c_isspace((int)c);
 5400|      3|            if (!tmp___0) {
 5401|      3|                goto while_break;
 5402|      3|            }
 5403|      0|            p++;
 5404|      0|        }
 5405|      3|while_break:
 5406|      3|        tmp___4 = strncmp(p, "TZ=\"", (size_t)4);
 5407|      3|        if (tmp___4 == 0) {
 5408|      0|            tzbase = p + 4;
 5409|      0|            tzsize = (size_t)1;
 5410|      0|            s = tzbase;
 5411|      0|            while (1) {
 5412|       |
 5413|      0|                if (!*s) {
 5414|      0|                    goto while_break___0;
 5415|      0|                }
 5416|      0|                if ((int const) * s == 92) {
 5417|      0|                    s++;
 5418|      0|                    if (!((int const) * s == 92)) {
 5419|      0|                        if (!((int const) * s == 34)) {
 5420|      0|                            goto while_break___0;
 5421|      0|                        }
 5422|      0|                    }
 5423|      0|                }
 5424|      0|                else {
 5425|      0|                    if ((int const) * s == 34) {
 5426|      0|                        large_tz = (_Bool)(100UL < tzsize);
 5427|      0|                        free((void *)tz0);
 5428|      0|                        tz0 = get_tz(tz0buf);
 5429|      0|                        if (large_tz) {
 5430|      0|                            tmp___1 = xmalloc(tzsize);
 5431|      0|                            tz1 = (char *)tmp___1;
 5432|      0|                        }
 5433|      0|                        else {
 5434|      0|                            tz1 = tz1buf;
 5435|      0|                        }
 5436|      0|                        z = tz1;
 5437|      0|                        s = tzbase;
 5438|      0|                        while (1) {
 5439|       |
 5440|      0|                            if (!((int const) * s != 34)) {
 5441|      0|                                goto while_break___1;
 5442|      0|                            }
 5443|      0|                            tmp___2 = z;
 5444|      0|                            z++;
 5445|      0|                            s += (int const) * s == 92;
 5446|      0|                            *tmp___2 = (char)*s;
 5447|      0|                            s++;
 5448|      0|                        }
 5449|      0|while_break___1:
 5450|      0|                        *z = (char)'\000';
 5451|      0|                        tmp___3 = setenv("TZ", (char const *)tz1, 1);
 5452|      0|                        setenv_ok = (_Bool)(tmp___3 == 0);
 5453|      0|                        if (large_tz) {
 5454|      0|                            free((void *)tz1);
 5455|      0|                        }
 5456|      0|                        if (!setenv_ok) {
 5457|      0|                            goto fail;
 5458|      0|                        }
 5459|      0|                        tz_was_altered = (_Bool)1;
 5460|      0|                        p = s + 1;
 5461|      0|                    }
 5462|      0|                }
 5463|      0|                s++;
 5464|      0|                tzsize++;
 5465|      0|            }
 5466|      0|while_break___0:
 5467|      0|            ;
 5468|      0|        }
 5469|      3|        if ((int const) * p == 0) {
 5470|      0|            p = "0";
 5471|      0|        }
 5472|      3|        pc.input = p;
 5473|      3|        pc.year.value = (long)tmp->tm_year;
 5474|      3|        pc.year.value += 1900L;
 5475|      3|        pc.year.digits = (size_t)0;
 5476|      3|        pc.month = (long)(tmp->tm_mon + 1);
 5477|      3|        pc.day = (long)tmp->tm_mday;
 5478|      3|        pc.hour = (long)tmp->tm_hour;
 5479|      3|        pc.minutes = (long)tmp->tm_min;
 5480|      3|        pc.seconds.tv_sec = (__time_t)tmp->tm_sec;
 5481|      3|        pc.seconds.tv_nsec = Start_ns;
 5482|      3|        tm.tm_isdst = (int)tmp->tm_isdst;
 5483|      3|        pc.meridian = 2;
 5484|      3|        __constr_expr_40.year = 0L;
 5485|      3|        __constr_expr_40.month = 0L;
 5486|      3|        __constr_expr_40.day = 0L;
 5487|      3|        __constr_expr_40.hour = 0L;
 5488|      3|        __constr_expr_40.minutes = 0L;
 5489|      3|        __constr_expr_40.seconds = (long_time_t)0;
 5490|      3|        __constr_expr_40.ns = 0L;
 5491|      3|        pc.rel = __constr_expr_40;
 5492|      3|        pc.timespec_seen = (_Bool)0;
 5493|      3|        pc.rels_seen = (_Bool)0;
 5494|      3|        pc.dates_seen = (size_t)0;
 5495|      3|        pc.days_seen = (size_t)0;
 5496|      3|        pc.times_seen = (size_t)0;
 5497|      3|        pc.local_zones_seen = (size_t)0;
 5498|      3|        pc.dsts_seen = (size_t)0;
 5499|      3|        pc.zones_seen = (size_t)0;
 5500|      3|        pc.local_time_zone_table[0].name = (char const *)tmp->tm_zone;
 5501|      3|        pc.local_time_zone_table[0].type = 269;
 5502|      3|        pc.local_time_zone_table[0].value = (int)tmp->tm_isdst;
 5503|      3|        pc.local_time_zone_table[1].name = (char const *)((void *)0);
 5504|      3|        quarter = 1;
 5505|     12|        while (1) {
 5506|       |
 5507|     12|            if (!(quarter <= 3)) {
 5508|      3|                goto while_break___2;
 5509|      3|            }
 5510|      9|            probe = Start + (time_t)(quarter * 7776000);
 5511|      9|            tmp___5 = (struct tm const *)localtime((time_t const *)(&probe));
 5512|      9|            probe_tm = tmp___5;
 5513|      9|            if (probe_tm) {
 5514|      9|                if (probe_tm->tm_zone) {
 5515|      9|                    if (probe_tm->tm_isdst !=
 5516|      9|                            (int const)pc.local_time_zone_table[0].value) {
 5517|      0|                        pc.local_time_zone_table[1].name = (char const *)probe_tm->tm_zone;
 5518|      0|                        pc.local_time_zone_table[1].type = 269;
 5519|      0|                        pc.local_time_zone_table[1].value = (int)probe_tm->tm_isdst;
 5520|      0|                        pc.local_time_zone_table[2].name = (char const *)((void *)0);
 5521|      0|                        goto while_break___2;
 5522|      0|                    }
 5523|      9|                }
 5524|      9|            }
 5525|      9|            quarter++;
 5526|      9|        }
 5527|      3|while_break___2:
 5528|      3|        ;
 5529|      3|        if (pc.local_time_zone_table[0].name) {
 5530|      3|            if (pc.local_time_zone_table[1].name) {
 5531|      0|                tmp___6 = strcmp(pc.local_time_zone_table[0].name,
 5532|      0|                                 pc.local_time_zone_table[1].name);
 5533|      0|                if (!tmp___6) {
 5534|      0|                    pc.local_time_zone_table[0].value = -1;
 5535|      0|                    pc.local_time_zone_table[1].name = (char const *)((void *)0);
 5536|      0|                }
 5537|      0|            }
 5538|      3|        }
 5539|      3|        tmp___7 = yyparse(&pc);
 5540|      3|        if (tmp___7 != 0) {
 5541|      0|            goto fail;
 5542|      0|        }
 5543|      3|        if (pc.timespec_seen) {
 5544|      0|            *result = pc.seconds;
 5545|      0|        }
 5546|      3|        else {
 5547|      3|            if (1UL <
 5548|      3|                    ((((pc.times_seen | pc.dates_seen) | pc.days_seen) | pc.dsts_seen) |
 5549|      3|                     (pc.local_zones_seen + pc.zones_seen))) {
 5550|      0|                goto fail;
 5551|      0|            }
 5552|      3|            tmp___8 = to_year(pc.year);
 5553|      3|            tm.tm_year = (int)(tmp___8 - 1900L);
 5554|      3|            tm.tm_mon = (int)(pc.month - 1L);
 5555|      3|            tm.tm_mday = (int)pc.day;
 5556|      3|            if (pc.times_seen) {
 5557|      0|                goto _L;
 5558|      0|            }
 5559|      3|            else {
 5560|      3|                if (pc.rels_seen) {
 5561|      2|                    if (!pc.dates_seen) {
 5562|      2|                        if (!pc.days_seen) {
 5563|      2|_L:
 5564|      2|                            tm.tm_hour = to_hour(pc.hour, pc.meridian);
 5565|      2|                            if (tm.tm_hour < 0) {
 5566|      0|                                goto fail;
 5567|      0|                            }
 5568|      2|                            tm.tm_min = (int)pc.minutes;
 5569|      2|                            tm.tm_sec = (int)pc.seconds.tv_sec;
 5570|      2|                        }
 5571|      0|                        else {
 5572|      0|                            tm.tm_sec = 0;
 5573|      0|                            tm.tm_min = tm.tm_sec;
 5574|      0|                            tm.tm_hour = tm.tm_min;
 5575|      0|                            pc.seconds.tv_nsec = (__syscall_slong_t)0;
 5576|      0|                        }
 5577|      2|                    }
 5578|      0|                    else {
 5579|      0|                        tm.tm_sec = 0;
 5580|      0|                        tm.tm_min = tm.tm_sec;
 5581|      0|                        tm.tm_hour = tm.tm_min;
 5582|      0|                        pc.seconds.tv_nsec = (__syscall_slong_t)0;
 5583|      0|                    }
 5584|      2|                }
 5585|      1|                else {
 5586|      1|                    tm.tm_sec = 0;
 5587|      1|                    tm.tm_min = tm.tm_sec;
 5588|      1|                    tm.tm_hour = tm.tm_min;
 5589|      1|                    pc.seconds.tv_nsec = (__syscall_slong_t)0;
 5590|      1|                }
 5591|      3|            }
 5592|      3|            if ((pc.dates_seen | pc.days_seen) | pc.times_seen) {
 5593|      1|                tm.tm_isdst = -1;
 5594|      1|            }
 5595|      3|            if (pc.local_zones_seen) {
 5596|      0|                tm.tm_isdst = pc.local_isdst;
 5597|      0|            }
 5598|      3|            tm0 = tm;
 5599|      3|            Start = mktime(&tm);
 5600|      3|            tmp___12 =
 5601|      3|                mktime_ok((struct tm const *)(&tm0), (struct tm const *)(&tm), Start);
 5602|      3|            if (!tmp___12) {
 5603|      0|                if (!pc.zones_seen) {
 5604|      0|                    goto fail;
 5605|      0|                }
 5606|      0|                else {
 5607|      0|                    time_zone = pc.time_zone;
 5608|      0|                    if (time_zone < 0L) {
 5609|      0|                        tmp___9 = -time_zone;
 5610|      0|                    }
 5611|      0|                    else {
 5612|      0|                        tmp___9 = time_zone;
 5613|      0|                    }
 5614|      0|                    abs_time_zone = tmp___9;
 5615|      0|                    abs_time_zone_hour = abs_time_zone / 60L;
 5616|      0|                    abs_time_zone_min = (int)(abs_time_zone % 60L);
 5617|      0|                    if (!tz_was_altered) {
 5618|      0|                        tz0 = get_tz(tz0buf);
 5619|      0|                    }
 5620|      0|                    sprintf(tz1buf___0, "XXX%s%ld:%02d", "-" + (time_zone < 0L),
 5621|      0|                            abs_time_zone_hour, abs_time_zone_min);
 5622|      0|                    tmp___10 = setenv("TZ", (char const *)(tz1buf___0), 1);
 5623|      0|                    if (tmp___10 != 0) {
 5624|      0|                        goto fail;
 5625|      0|                    }
 5626|      0|                    tz_was_altered = (_Bool)1;
 5627|      0|                    tm = tm0;
 5628|      0|                    Start = mktime(&tm);
 5629|      0|                    tmp___11 = mktime_ok((struct tm const *)(&tm0),
 5630|      0|                                         (struct tm const *)(&tm), Start);
 5631|      0|                    if (!tmp___11) {
 5632|      0|                        goto fail;
 5633|      0|                    }
 5634|      0|                }
 5635|      0|            }
 5636|      3|            if (pc.days_seen) {
 5637|      1|                if (!pc.dates_seen) {
 5638|      1|                    if (0L < pc.day_ordinal) {
 5639|      1|                        if (tm.tm_wday != pc.day_number) {
 5640|      0|                            tmp___13 = 1;
 5641|      0|                        }
 5642|      1|                        else {
 5643|      1|                            tmp___13 = 0;
 5644|      1|                        }
 5645|      1|                    }
 5646|      0|                    else {
 5647|      0|                        tmp___13 = 0;
 5648|      0|                    }
 5649|      1|                    tm.tm_mday = (int)((long)tm.tm_mday +
 5650|      1|                                       ((long)(((pc.day_number - tm.tm_wday) + 7) % 7) +
 5651|      1|                                        7L * (pc.day_ordinal - (long)tmp___13)));
 5652|      1|                    tm.tm_isdst = -1;
 5653|      1|                    Start = mktime(&tm);
 5654|      1|                    if (Start == -1L) {
 5655|      0|                        goto fail;
 5656|      0|                    }
 5657|      1|                }
 5658|      1|            }
 5659|      3|            if ((pc.rel.year | pc.rel.month) | pc.rel.day) {
 5660|      2|                year___1 = (int)((long)tm.tm_year + pc.rel.year);
 5661|      2|                month = (int)((long)tm.tm_mon + pc.rel.month);
 5662|      2|                day = (int)((long)tm.tm_mday + pc.rel.day);
 5663|      2|                if ((((year___1 < tm.tm_year) ^ (pc.rel.year < 0L)) |
 5664|      2|                        ((month < tm.tm_mon) ^ (pc.rel.month < 0L))) |
 5665|      2|                        ((day < tm.tm_mday) ^ (pc.rel.day < 0L))) {
 5666|      0|                    goto fail;
 5667|      0|                }
 5668|      2|                tm.tm_year = year___1;
 5669|      2|                tm.tm_mon = month;
 5670|      2|                tm.tm_mday = day;
 5671|      2|                tm.tm_hour = tm0.tm_hour;
 5672|      2|                tm.tm_min = tm0.tm_min;
 5673|      2|                tm.tm_sec = tm0.tm_sec;
 5674|      2|                tm.tm_isdst = tm0.tm_isdst;
 5675|      2|                Start = mktime(&tm);
 5676|      2|                if (Start == -1L) {
 5677|      0|                    goto fail;
 5678|      0|                }
 5679|      2|            }
 5680|      3|            if (pc.zones_seen) {
 5681|      0|                delta = pc.time_zone * 60L;
 5682|      0|                delta -= tm.tm_gmtoff;
 5683|      0|                t1 = Start - delta;
 5684|      0|                if ((Start < t1) != (delta < 0L)) {
 5685|      0|                    goto fail;
 5686|      0|                }
 5687|      0|                Start = t1;
 5688|      0|            }
 5689|      3|            sum_ns = pc.seconds.tv_nsec + pc.rel.ns;
 5690|      3|            normalized_ns = (sum_ns % 1000000000L + 1000000000L) % 1000000000L;
 5691|      3|            t0 = Start;
 5692|      3|            d1 = 3600L * pc.rel.hour;
 5693|      3|            t1___0 = t0 + d1;
 5694|      3|            d2 = 60L * pc.rel.minutes;
 5695|      3|            t2 = t1___0 + d2;
 5696|      3|            d3 = pc.rel.seconds;
 5697|      3|            t3 = t2 + d3;
 5698|      3|            d4 = (sum_ns - normalized_ns) / 1000000000L;
 5699|      3|            t4 = t3 + d4;
 5700|      3|            t5 = t4;
 5701|      3|            if (((((((d1 / 3600L ^ pc.rel.hour) | (d2 / 60L ^ pc.rel.minutes)) |
 5702|      3|                    (long)((t1___0 < t0) ^ (d1 < 0L))) |
 5703|      3|                    (long)((t2 < t1___0) ^ (d2 < 0L))) |
 5704|      3|                    (long)((t3 < t2) ^ (d3 < 0L))) |
 5705|      3|                    (long)((t4 < t3) ^ (d4 < 0L))) |
 5706|      3|                    (long)(t5 != t4)) {
 5707|      0|                goto fail;
 5708|      0|            }
 5709|      3|            result->tv_sec = t5;
 5710|      3|            result->tv_nsec = normalized_ns;
 5711|      3|        }
 5712|      3|        goto done;
 5713|      3|fail:
 5714|      0|        ok = (_Bool)0;
 5715|      3|done:
 5716|      3|        if (tz_was_altered) {
 5717|      0|            if (tz0) {
 5718|      0|                tmp___14 = setenv("TZ", (char const *)tz0, 1);
 5719|      0|                tmp___16 = tmp___14;
 5720|      0|            }
 5721|      0|            else {
 5722|      0|                tmp___15 = unsetenv("TZ");
 5723|      0|                tmp___16 = tmp___15;
 5724|      0|            }
 5725|      0|            ok = (_Bool)((int)ok & (tmp___16 == 0));
 5726|      0|        }
 5727|      3|        if ((unsigned long)tz0 != (unsigned long)(tz0buf)) {
 5728|      3|            free((void *)tz0);
 5729|      3|        }
 5730|      3|        return (ok);
 5731|      0|    }
 5732|      0|}
 5733|       |#pragma GCC diagnostic push
 5734|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5735|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5736|       |#pragma GCC diagnostic pop
 5737|       |#pragma GCC diagnostic push
 5738|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5739|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5740|       |#pragma GCC diagnostic pop
 5741|       |#pragma GCC diagnostic push
 5742|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5743|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5744|       |#pragma GCC diagnostic pop
 5745|       |#pragma GCC diagnostic push
 5746|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5747|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5748|       |#pragma GCC diagnostic pop
 5749|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 5750|       |#pragma GCC diagnostic push
 5751|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5752|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5753|       |#pragma GCC diagnostic pop
 5754|       |#pragma GCC diagnostic push
 5755|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5756|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5757|       |#pragma GCC diagnostic pop
 5758|       |#pragma GCC diagnostic push
 5759|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5760|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5761|       |#pragma GCC diagnostic pop
 5762|       |#pragma GCC diagnostic push
 5763|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5764|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5765|       |#pragma GCC diagnostic push
 5766|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5767|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5768|       |#pragma GCC diagnostic pop
 5769|       |#pragma GCC diagnostic push
 5770|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5771|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5772|       |#pragma GCC diagnostic push
 5773|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5774|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5775|       |#pragma GCC diagnostic pop
 5776|       |#pragma GCC diagnostic push
 5777|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5778|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5779|       |#pragma GCC diagnostic pop
 5780|       |#pragma GCC diagnostic push
 5781|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5782|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5783|       |#pragma GCC diagnostic pop
 5784|       |#pragma GCC diagnostic push
 5785|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5786|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5787|       |#pragma GCC diagnostic pop
 5788|       |#pragma GCC diagnostic push
 5789|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5790|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5791|       |#pragma GCC diagnostic pop
 5792|       |#pragma GCC diagnostic push
 5793|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5794|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5795|       |#pragma GCC diagnostic pop
 5796|       |#pragma GCC diagnostic push
 5797|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5798|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5799|       |#pragma GCC diagnostic pop
 5800|       |#pragma GCC diagnostic push
 5801|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5802|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5803|       |#pragma GCC diagnostic pop
 5804|       |#pragma GCC diagnostic push
 5805|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5806|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5807|       |#pragma GCC diagnostic pop
 5808|       |#pragma GCC diagnostic push
 5809|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5810|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5811|       |#pragma GCC diagnostic pop
 5812|       |#pragma GCC diagnostic push
 5813|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5814|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5815|       |#pragma GCC diagnostic pop
 5816|       |#pragma GCC diagnostic push
 5817|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5818|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5819|       |#pragma GCC diagnostic pop
 5820|       |#pragma GCC diagnostic push
 5821|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5822|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5823|       |#pragma GCC diagnostic pop
 5824|       |#pragma GCC diagnostic push
 5825|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5826|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5827|       |#pragma GCC diagnostic pop
 5828|       |#pragma GCC diagnostic push
 5829|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5830|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5831|       |#pragma GCC diagnostic pop
 5832|       |#pragma GCC diagnostic push
 5833|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5834|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5835|       |#pragma GCC diagnostic pop
 5836|       |#pragma GCC diagnostic push
 5837|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5838|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5839|       |#pragma GCC diagnostic pop
 5840|       |#pragma GCC diagnostic push
 5841|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5842|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5843|       |#pragma GCC diagnostic pop
 5844|       |#pragma GCC diagnostic push
 5845|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5846|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5847|       |#pragma GCC diagnostic pop
 5848|       |#pragma GCC diagnostic push
 5849|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5850|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5851|       |#pragma GCC diagnostic pop
 5852|       |#pragma GCC diagnostic push
 5853|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5854|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5855|       |#pragma GCC diagnostic pop
 5856|       |#pragma GCC diagnostic push
 5857|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5858|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5859|       |#pragma GCC diagnostic pop
 5860|       |#pragma GCC diagnostic push
 5861|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5862|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5863|       |#pragma GCC diagnostic pop
 5864|       |#pragma GCC diagnostic push
 5865|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5866|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5867|       |#pragma GCC diagnostic pop
 5868|       |unsigned int const is_basic_table[8] = {
 5869|       |    (unsigned int const)6656, (unsigned int const)4294967279U,
 5870|       |    (unsigned int const)4294967294U, (unsigned int const)2147483646
 5871|       |};
 5872|       |#pragma GCC diagnostic push
 5873|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5874|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5875|       |#pragma GCC diagnostic pop
 5876|       |extern __attribute__((__nothrow__, __noreturn__)) void(
 5877|       |    __attribute__((__leaf__)) exit)(int __status);
 5878|       |extern int optind;
 5879|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) getopt_long)(
 5880|       |    int ___argc, char *const *___argv, char const *__shortopts,
 5881|       |    struct option const *__longopts, int *__longind);
 5882|       |#pragma weak pthread_mutex_init
 5883|       |#pragma weak pthread_mutex_lock
 5884|       |#pragma weak pthread_mutex_unlock
 5885|       |#pragma weak pthread_mutex_destroy
 5886|       |#pragma weak pthread_rwlock_init
 5887|       |#pragma weak pthread_rwlock_rdlock
 5888|       |#pragma weak pthread_rwlock_wrlock
 5889|       |#pragma weak pthread_rwlock_unlock
 5890|       |#pragma weak pthread_rwlock_destroy
 5891|       |#pragma weak pthread_once
 5892|       |#pragma weak pthread_cond_init
 5893|       |#pragma weak pthread_cond_wait
 5894|       |#pragma weak pthread_cond_signal
 5895|       |#pragma weak pthread_cond_broadcast
 5896|       |#pragma weak pthread_cond_destroy
 5897|       |#pragma weak pthread_mutexattr_init
 5898|       |#pragma weak pthread_mutexattr_settype
 5899|       |#pragma weak pthread_mutexattr_destroy
 5900|       |#pragma weak pthread_self
 5901|       |#pragma weak pthread_cancel
 5902|       |extern __attribute__((__nothrow__))
 5903|       |FILE *(__attribute__((__leaf__)) fdopen)(int __fd, char const *__modes);
 5904|       |extern int fscanf(FILE *__restrict __stream, char const *__restrict __format,
 5905|       |                  ...);
 5906|       |extern int ungetc(int __c, FILE *__stream);
 5907|       |#pragma GCC diagnostic push
 5908|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 5909|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 5910|       |#pragma GCC diagnostic pop
 5911|       |static char const *volatile charset_aliases;
 5912|       |static char const *get_charset_aliases(void)
 5913|      0|{
 5914|      0|    char const *cp;
 5915|      0|    char const *dir;
 5916|      0|    char const *base;
 5917|      0|    char *file_name___3;
 5918|      0|    size_t dir_len___0;
 5919|      0|    size_t tmp;
 5920|      0|    size_t base_len___0;
 5921|      0|    size_t tmp___0;
 5922|      0|    int add_slash;
 5923|      0|    int tmp___1;
 5924|      0|    int fd;
 5925|      0|    FILE *fp;
 5926|      0|    char *res_ptr;
 5927|      0|    size_t res_size;
 5928|      0|    int c;
 5929|      0|    char buf1[51];
 5930|      0|    char buf2[51];
 5931|      0|    size_t l1;
 5932|      0|    size_t l2;
 5933|      0|    char *old_res_ptr;
 5934|      0|    int tmp___3;
 5935|       |
 5936|      0|    {
 5937|      0|        cp = (char const *)charset_aliases;
 5938|      0|        if ((unsigned long)cp == (unsigned long)((void *)0)) {
 5939|      0|            base = "charset.alias";
 5940|      0|            dir = (char const *)getenv("CHARSETALIASDIR");
 5941|      0|            if ((unsigned long)dir == (unsigned long)((void *)0)) {
 5942|      0|                dir = "/usr/local/lib";
 5943|      0|            }
 5944|      0|            else {
 5945|      0|                if ((int const) * (dir + 0) == 0) {
 5946|      0|                    dir = "/usr/local/lib";
 5947|      0|                }
 5948|      0|            }
 5949|      0|            tmp = strlen(dir);
 5950|      0|            dir_len___0 = tmp;
 5951|      0|            tmp___0 = strlen(base);
 5952|      0|            base_len___0 = tmp___0;
 5953|      0|            if (dir_len___0 > 0UL) {
 5954|      0|                if (!((int const) * (dir + (dir_len___0 - 1UL)) == 47)) {
 5955|      0|                    tmp___1 = 1;
 5956|      0|                }
 5957|      0|                else {
 5958|      0|                    tmp___1 = 0;
 5959|      0|                }
 5960|      0|            }
 5961|      0|            else {
 5962|      0|                tmp___1 = 0;
 5963|      0|            }
 5964|      0|            add_slash = tmp___1;
 5965|      0|            file_name___3 = (char *)malloc(
 5966|      0|                                ((dir_len___0 + (size_t)add_slash) + base_len___0) + 1UL);
 5967|      0|            if ((unsigned long)file_name___3 != (unsigned long)((void *)0)) {
 5968|      0|                memcpy((void *)file_name___3, (void const *)dir, dir_len___0);
 5969|      0|                if (add_slash) {
 5970|      0|                    *(file_name___3 + dir_len___0) = (char)'/';
 5971|      0|                }
 5972|      0|                memcpy((void *)((file_name___3 + dir_len___0) + add_slash),
 5973|      0|                       (void const *)base, base_len___0 + 1UL);
 5974|      0|            }
 5975|      0|            if ((unsigned long)file_name___3 == (unsigned long)((void *)0)) {
 5976|      0|                cp = "";
 5977|      0|            }
 5978|      0|            else {
 5979|      0|                fd = open((char const *)file_name___3, 131072);
 5980|      0|                if (fd < 0) {
 5981|      0|                    cp = "";
 5982|      0|                }
 5983|      0|                else {
 5984|      0|                    fp = fdopen(fd, "r");
 5985|      0|                    if ((unsigned long)fp == (unsigned long)((void *)0)) {
 5986|      0|                        close(fd);
 5987|      0|                        cp = "";
 5988|      0|                    }
 5989|      0|                    else {
 5990|      0|                        res_ptr = (char *)((void *)0);
 5991|      0|                        res_size = (size_t)0;
 5992|      0|                        while (1) {
 5993|      0|                            c = getc_unlocked(fp);
 5994|      0|                            if (c == -1) {
 5995|      0|                                goto while_break;
 5996|      0|                            }
 5997|      0|                            if (c == 10) {
 5998|      0|                                goto __Cont;
 5999|      0|                            }
 6000|      0|                            else {
 6001|      0|                                if (c == 32) {
 6002|      0|                                    goto __Cont;
 6003|      0|                                }
 6004|      0|                                else {
 6005|      0|                                    if (c == 9) {
 6006|      0|                                        goto __Cont;
 6007|      0|                                    }
 6008|      0|                                }
 6009|      0|                            }
 6010|      0|                            if (c == 35) {
 6011|      0|                                while (1) {
 6012|      0|                                    c = getc_unlocked(fp);
 6013|      0|                                    if (c == -1) {
 6014|      0|                                        goto while_break___0;
 6015|      0|                                    }
 6016|      0|                                    else {
 6017|      0|                                        if (c == 10) {
 6018|      0|                                            goto while_break___0;
 6019|      0|                                        }
 6020|      0|                                    }
 6021|      0|                                }
 6022|      0|while_break___0:
 6023|      0|                                ;
 6024|      0|                                if (c == -1) {
 6025|      0|                                    goto while_break;
 6026|      0|                                }
 6027|      0|                                goto __Cont;
 6028|      0|                            }
 6029|      0|                            ungetc(c, fp);
 6030|      0|                            tmp___3 = fscanf(fp, "%50s %50s", buf1, buf2);
 6031|      0|                            if (tmp___3 < 2) {
 6032|      0|                                goto while_break;
 6033|      0|                            }
 6034|      0|                            l1 = strlen((char const *)(buf1));
 6035|      0|                            l2 = strlen((char const *)(buf2));
 6036|      0|                            old_res_ptr = res_ptr;
 6037|      0|                            if (res_size == 0UL) {
 6038|      0|                                res_size = ((l1 + 1UL) + l2) + 1UL;
 6039|      0|                                res_ptr = (char *)malloc(res_size + 1UL);
 6040|      0|                            }
 6041|      0|                            else {
 6042|      0|                                res_size += ((l1 + 1UL) + l2) + 1UL;
 6043|      0|                                res_ptr = (char *)realloc((void *)res_ptr, res_size + 1UL);
 6044|      0|                            }
 6045|      0|                            if ((unsigned long)res_ptr == (unsigned long)((void *)0)) {
 6046|      0|                                res_size = (size_t)0;
 6047|      0|                                free((void *)old_res_ptr);
 6048|      0|                                goto while_break;
 6049|      0|                            }
 6050|      0|                            strcpy(((res_ptr + res_size) - (l2 + 1UL)) - (l1 + 1UL),
 6051|      0|                                   (char const *)(buf1));
 6052|      0|                            strcpy((res_ptr + res_size) - (l2 + 1UL), (char const *)(buf2));
 6053|      0|__Cont:
 6054|      0|                            ;
 6055|      0|                        }
 6056|      0|while_break:
 6057|      0|                        rpl_fclose(fp);
 6058|      0|                        if (res_size == 0UL) {
 6059|      0|                            cp = "";
 6060|      0|                        }
 6061|      0|                        else {
 6062|      0|                            *(res_ptr + res_size) = (char)'\000';
 6063|      0|                            cp = (char const *)res_ptr;
 6064|      0|                        }
 6065|      0|                    }
 6066|      0|                }
 6067|      0|                free((void *)file_name___3);
 6068|      0|            }
 6069|      0|            charset_aliases = cp;
 6070|      0|        }
 6071|      0|        return (cp);
 6072|      0|    }
 6073|      0|}
 6074|       |char const *locale_charset(void)
 6075|      0|{
 6076|      0|    char const *codeset;
 6077|      0|    char const *aliases;
 6078|      0|    size_t tmp;
 6079|      0|    size_t tmp___0;
 6080|      0|    size_t tmp___1;
 6081|      0|    int tmp___2;
 6082|       |
 6083|      0|    {
 6084|      0|        codeset = (char const *)nl_langinfo(14);
 6085|      0|        if ((unsigned long)codeset == (unsigned long)((void *)0)) {
 6086|      0|            codeset = "";
 6087|      0|        }
 6088|      0|        aliases = get_charset_aliases();
 6089|      0|        while (1) {
 6090|       |
 6091|      0|            if (!((int const) * aliases != 0)) {
 6092|      0|                goto while_break;
 6093|      0|            }
 6094|      0|            tmp___2 = strcmp(codeset, aliases);
 6095|      0|            if (tmp___2 == 0) {
 6096|      0|                tmp___1 = strlen(aliases);
 6097|      0|                codeset = (aliases + tmp___1) + 1;
 6098|      0|                goto while_break;
 6099|      0|            }
 6100|      0|            else {
 6101|      0|                if ((int const) * (aliases + 0) == 42) {
 6102|      0|                    if ((int const) * (aliases + 1) == 0) {
 6103|      0|                        tmp___1 = strlen(aliases);
 6104|      0|                        codeset = (aliases + tmp___1) + 1;
 6105|      0|                        goto while_break;
 6106|      0|                    }
 6107|      0|                }
 6108|      0|            }
 6109|      0|            tmp = strlen(aliases);
 6110|      0|            aliases += tmp + 1UL;
 6111|      0|            tmp___0 = strlen(aliases);
 6112|      0|            aliases += tmp___0 + 1UL;
 6113|      0|        }
 6114|      0|while_break:
 6115|      0|        ;
 6116|      0|        if ((int const) * (codeset + 0) == 0) {
 6117|      0|            codeset = "ASCII";
 6118|      0|        }
 6119|      0|        return (codeset);
 6120|      0|    }
 6121|      0|}
 6122|       |#pragma GCC diagnostic push
 6123|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6124|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6125|       |#pragma GCC diagnostic pop
 6126|       |#pragma GCC diagnostic push
 6127|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6128|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6129|       |#pragma GCC diagnostic push
 6130|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6131|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6132|       |#pragma GCC diagnostic pop
 6133|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 6134|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 6135|       |char *(__attribute__((__warn_unused_result__)) imaxtostr)(intmax_t i,
 6136|       |        char *buf___1);
 6137|       |char *(__attribute__((__warn_unused_result__)) imaxtostr)(intmax_t i,
 6138|       |        char *buf___1)
 6139|      0|{
 6140|      0|    char *p;
 6141|       |
 6142|      0|    {
 6143|      0|        p = buf___1 +
 6144|      0|            (((sizeof(intmax_t) * 8UL - 1UL) * 146UL + 484UL) / 485UL + 1UL);
 6145|      0|        *p = (char)0;
 6146|      0|        if (i < 0L) {
 6147|      0|            while (1) {
 6148|      0|                p--;
 6149|      0|                *p = (char)(48L - i % 10L);
 6150|      0|                i /= 10L;
 6151|      0|                if (!(i != 0L)) {
 6152|      0|                    goto while_break;
 6153|      0|                }
 6154|      0|            }
 6155|      0|while_break:
 6156|      0|            p--;
 6157|      0|            *p = (char)'-';
 6158|      0|        }
 6159|      0|        else {
 6160|      0|            while (1) {
 6161|      0|                p--;
 6162|      0|                *p = (char)(48L + i % 10L);
 6163|      0|                i /= 10L;
 6164|      0|                if (!(i != 0L)) {
 6165|      0|                    goto while_break___0;
 6166|      0|                }
 6167|      0|            }
 6168|      0|while_break___0:
 6169|      0|            ;
 6170|      0|        }
 6171|      0|        return (p);
 6172|      0|    }
 6173|      0|}
 6174|       |#pragma GCC diagnostic push
 6175|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6176|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6177|       |#pragma GCC diagnostic pop
 6178|       |#pragma GCC diagnostic push
 6179|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6180|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6181|       |#pragma GCC diagnostic push
 6182|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6183|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6184|       |#pragma GCC diagnostic pop
 6185|       |#pragma GCC diagnostic push
 6186|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6187|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6188|       |#pragma GCC diagnostic push
 6189|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6190|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6191|       |#pragma GCC diagnostic pop
 6192|       |extern __attribute__((__nothrow__)) char *(__attribute__((__leaf__)) setlocale)(
 6193|       |    int __category, char const *__locale);
 6194|       |#pragma GCC diagnostic push
 6195|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6196|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6197|       |#pragma GCC diagnostic pop
 6198|       |extern
 6199|       |__attribute__((__nothrow__)) int(__attribute__((__leaf__)) clock_gettime)(
 6200|       |    clockid_t __clock_id, struct timespec *__tp);
 6201|       |#pragma GCC diagnostic push
 6202|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6203|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6204|       |#pragma GCC diagnostic pop
 6205|       |void gettime(struct timespec *ts)
 6206|      6|{
 6207|      6|    int tmp;
 6208|      6|    struct timeval tv;
 6209|       |
 6210|      6|    {
 6211|      6|        tmp = clock_gettime(0, ts);
 6212|      6|        if (tmp == 0) {
 6213|      6|            return;
 6214|      6|        }
 6215|      0|        gettimeofday(&tv, (__timezone_ptr_t)((void *)0));
 6216|      0|        ts->tv_sec = tv.tv_sec;
 6217|      0|        ts->tv_nsec = tv.tv_usec * 1000L;
 6218|      0|        return;
 6219|      6|    }
 6220|      6|}
 6221|       |#pragma GCC diagnostic push
 6222|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6223|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6224|       |#pragma GCC diagnostic pop
 6225|       |int(__attribute__((__nonnull__(1))) rpl_fseeko)(FILE *fp, off_t offset,
 6226|       |        int whence);
 6227|       |#pragma GCC diagnostic push
 6228|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6229|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6230|       |#pragma GCC diagnostic push
 6231|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6232|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6233|       |#pragma GCC diagnostic pop
 6234|       |#pragma GCC diagnostic push
 6235|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6236|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6237|       |#pragma GCC diagnostic pop
 6238|       |#pragma GCC diagnostic push
 6239|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6240|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6241|       |#pragma GCC diagnostic pop
 6242|       |#pragma GCC diagnostic push
 6243|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6244|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6245|       |#pragma GCC diagnostic pop
 6246|       |#pragma GCC diagnostic push
 6247|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6248|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6249|       |#pragma GCC diagnostic pop
 6250|       |extern int fseeko(FILE *__stream, __off_t __off, int __whence);
 6251|       |extern __attribute__((__nothrow__))
 6252|       |__off_t(__attribute__((__leaf__)) lseek)(int __fd, __off_t __offset,
 6253|       |        int __whence);
 6254|       |#pragma GCC diagnostic push
 6255|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6256|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6257|       |#pragma GCC diagnostic pop
 6258|       |int(__attribute__((__nonnull__(1))) rpl_fseeko)(FILE *fp, off_t offset,
 6259|       |        int whence)
 6260|      0|{
 6261|      0|    off_t pos;
 6262|      0|    int tmp;
 6263|      0|    off_t tmp___0;
 6264|      0|    int tmp___1;
 6265|       |
 6266|      0|    {
 6267|      0|        if ((unsigned long)fp->_IO_read_end == (unsigned long)fp->_IO_read_ptr) {
 6268|      0|            if ((unsigned long)fp->_IO_write_ptr ==
 6269|      0|                    (unsigned long)fp->_IO_write_base) {
 6270|      0|                if ((unsigned long)fp->_IO_save_base == (unsigned long)((void *)0)) {
 6271|      0|                    tmp = fileno(fp);
 6272|      0|                    tmp___0 = lseek(tmp, offset, whence);
 6273|      0|                    pos = tmp___0;
 6274|      0|                    if (pos == -1L) {
 6275|      0|                        return (-1);
 6276|      0|                    }
 6277|      0|                    fp->_flags &= -17;
 6278|      0|                    fp->_offset = pos;
 6279|      0|                    return (0);
 6280|      0|                }
 6281|      0|            }
 6282|      0|        }
 6283|      0|        tmp___1 = fseeko(fp, offset, whence);
 6284|      0|        return (tmp___1);
 6285|      0|    }
 6286|      0|}
 6287|       |#pragma GCC diagnostic push
 6288|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6289|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6290|       |#pragma GCC diagnostic pop
 6291|       |#pragma GCC diagnostic push
 6292|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6293|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6294|       |#pragma GCC diagnostic pop
 6295|       |#pragma GCC diagnostic push
 6296|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 6297|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 6298|       |#pragma GCC diagnostic pop
 6299|       |extern int fputc(int __c, FILE *__stream);
 6300|       |size_t fprintftime(FILE *s, char const *format, struct tm const *tp, int ut,
 6301|       |                   int ns);
 6302|       |static void fwrite_lowcase(FILE *fp, char const *src, size_t len)
 6303|      0|{
 6304|      0|    int tmp;
 6305|      0|    size_t tmp___0;
 6306|       |
 6307|      0|    {
 6308|      0|        while (1) {
 6309|      0|            tmp___0 = len;
 6310|      0|            len--;
 6311|      0|            if (!(tmp___0 > 0UL)) {
 6312|      0|                goto while_break;
 6313|      0|            }
 6314|      0|            tmp = tolower((int)((unsigned char)*src));
 6315|      0|            fputc(tmp, fp);
 6316|      0|            src++;
 6317|      0|        }
 6318|      0|while_break:
 6319|      0|        ;
 6320|      0|        return;
 6321|      0|    }
 6322|      0|}
 6323|       |static void fwrite_uppcase(FILE *fp, char const *src, size_t len)
 6324|      0|{
 6325|      0|    int tmp;
 6326|      0|    size_t tmp___0;
 6327|       |
 6328|      0|    {
 6329|      0|        while (1) {
 6330|      0|            tmp___0 = len;
 6331|      0|            len--;
 6332|      0|            if (!(tmp___0 > 0UL)) {
 6333|      0|                goto while_break;
 6334|      0|            }
 6335|      0|            tmp = toupper((int)((unsigned char)*src));
 6336|      0|            fputc(tmp, fp);
 6337|      0|            src++;
 6338|      0|        }
 6339|      0|while_break:
 6340|      0|        ;
 6341|      0|        return;
 6342|      0|    }
 6343|      0|}
 6344|       |static size_t strftime_case____0(_Bool upcase, FILE *s, char const *format,
 6345|       |                                 struct tm const *tp, int ut, int ns)
 6346|      6|{
 6347|      6|    size_t maxsize;
 6348|      6|    int hour12;
 6349|      6|    char const *zone;
 6350|      6|    size_t i;
 6351|      6|    FILE *p;
 6352|      6|    char const *f;
 6353|      6|    int pad;
 6354|      6|    int modifier;
 6355|      6|    int digits;
 6356|      6|    int number_value;
 6357|      6|    unsigned int u_number_value;
 6358|      6|    _Bool negative_number;
 6359|      6|    _Bool always_output_a_sign;
 6360|      6|    int tz_colon_mask;
 6361|      6|    char const *subfmt;
 6362|      6|    char sign_char;
 6363|      6|    char *bufp;
 6364|      6|    char buf___1[3UL + (((sizeof(time_t) * 8UL - 1UL) * 146UL) / 485UL + 2UL)];
 6365|      6|    int width;
 6366|      6|    _Bool to_lowcase;
 6367|      6|    _Bool to_uppcase;
 6368|      6|    size_t colons;
 6369|      6|    _Bool change_case;
 6370|      6|    int format_char;
 6371|      6|    size_t _n;
 6372|      6|    size_t _w;
 6373|      6|    int tmp;
 6374|      6|    size_t _incr;
 6375|      6|    size_t tmp___0;
 6376|      6|    size_t _delta;
 6377|      6|    size_t _i;
 6378|      6|    size_t _i___0;
 6379|      6|    char const *tmp___1;
 6380|      6|    size_t _n___0;
 6381|      6|    size_t _w___0;
 6382|      6|    int tmp___2;
 6383|      6|    size_t _incr___0;
 6384|      6|    size_t tmp___3;
 6385|      6|    size_t _delta___0;
 6386|      6|    size_t _i___1;
 6387|      6|    size_t _i___2;
 6388|      6|    size_t len;
 6389|      6|    size_t tmp___4;
 6390|      6|    size_t _n___1;
 6391|      6|    size_t _w___1;
 6392|      6|    int tmp___5;
 6393|      6|    size_t _incr___1;
 6394|      6|    size_t tmp___6;
 6395|      6|    size_t _delta___1;
 6396|      6|    size_t _i___3;
 6397|      6|    size_t _i___4;
 6398|      6|    char ufmt[5];
 6399|      6|    char *u;
 6400|      6|    char ubuf[1024];
 6401|      6|    size_t len___0;
 6402|      6|    char *tmp___7;
 6403|      6|    char *tmp___8;
 6404|      6|    char *tmp___9;
 6405|      6|    char *tmp___10;
 6406|      6|    size_t _n___2;
 6407|      6|    size_t _w___2;
 6408|      6|    int tmp___11;
 6409|      6|    size_t _incr___2;
 6410|      6|    size_t tmp___12;
 6411|      6|    size_t _delta___2;
 6412|      6|    size_t _i___5;
 6413|      6|    size_t _i___6;
 6414|      6|    int century;
 6415|      6|    int tmp___13;
 6416|      6|    int tmp___14;
 6417|      6|    size_t _n___3;
 6418|      6|    size_t _w___3;
 6419|      6|    int tmp___15;
 6420|      6|    size_t _incr___3;
 6421|      6|    size_t tmp___16;
 6422|      6|    size_t _delta___3;
 6423|      6|    size_t _i___7;
 6424|      6|    size_t _i___8;
 6425|      6|    int padding;
 6426|      6|    size_t _i___9;
 6427|      6|    size_t _n___4;
 6428|      6|    size_t _w___4;
 6429|      6|    int tmp___17;
 6430|      6|    size_t _incr___4;
 6431|      6|    size_t tmp___18;
 6432|      6|    size_t _delta___4;
 6433|      6|    size_t _i___10;
 6434|      6|    size_t _i___11;
 6435|      6|    size_t _n___5;
 6436|      6|    size_t _w___5;
 6437|      6|    int tmp___19;
 6438|      6|    size_t _incr___5;
 6439|      6|    size_t tmp___20;
 6440|      6|    size_t _delta___5;
 6441|      6|    size_t _i___12;
 6442|      6|    size_t _i___13;
 6443|      6|    size_t _i___14;
 6444|      6|    size_t _n___6;
 6445|      6|    size_t _w___6;
 6446|      6|    int tmp___21;
 6447|      6|    size_t _incr___6;
 6448|      6|    size_t tmp___22;
 6449|      6|    size_t _delta___6;
 6450|      6|    size_t _i___15;
 6451|      6|    size_t _i___16;
 6452|      6|    size_t _n___7;
 6453|      6|    size_t _w___7;
 6454|      6|    int tmp___23;
 6455|      6|    size_t _incr___7;
 6456|      6|    size_t tmp___24;
 6457|      6|    size_t _delta___7;
 6458|      6|    size_t _i___17;
 6459|      6|    size_t _i___18;
 6460|      6|    int j;
 6461|      6|    size_t _n___8;
 6462|      6|    size_t _w___8;
 6463|      6|    int tmp___25;
 6464|      6|    size_t _incr___8;
 6465|      6|    size_t tmp___26;
 6466|      6|    size_t _delta___8;
 6467|      6|    size_t _i___19;
 6468|      6|    size_t _i___20;
 6469|      6|    struct tm ltm;
 6470|      6|    time_t t;
 6471|      6|    int d;
 6472|      6|    int tmp___27;
 6473|      6|    size_t _n___9;
 6474|      6|    size_t _w___9;
 6475|      6|    int tmp___28;
 6476|      6|    size_t _incr___9;
 6477|      6|    size_t tmp___29;
 6478|      6|    size_t _delta___9;
 6479|      6|    size_t _i___21;
 6480|      6|    size_t _i___22;
 6481|      6|    int year___1;
 6482|      6|    int tmp___30;
 6483|      6|    int year_adjust;
 6484|      6|    int days;
 6485|      6|    int tmp___31;
 6486|      6|    int tmp___32;
 6487|      6|    int d___0;
 6488|      6|    int tmp___33;
 6489|      6|    int tmp___34;
 6490|      6|    int yy;
 6491|      6|    int tmp___35;
 6492|      6|    int yy___0;
 6493|      6|    size_t _n___10;
 6494|      6|    size_t tmp___36;
 6495|      6|    size_t _w___10;
 6496|      6|    int tmp___37;
 6497|      6|    size_t _incr___10;
 6498|      6|    size_t tmp___38;
 6499|      6|    size_t _delta___10;
 6500|      6|    size_t _i___23;
 6501|      6|    size_t _i___24;
 6502|      6|    int diff;
 6503|      6|    int hour_diff;
 6504|      6|    int min_diff;
 6505|      6|    int sec_diff;
 6506|      6|    int flen;
 6507|      6|    size_t _n___11;
 6508|      6|    size_t _w___11;
 6509|      6|    int tmp___39;
 6510|      6|    size_t _incr___11;
 6511|      6|    size_t tmp___40;
 6512|      6|    size_t _delta___11;
 6513|      6|    size_t _i___25;
 6514|      6|    size_t _i___26;
 6515|       |
 6516|      6|    {
 6517|      6|        maxsize = (size_t)-1;
 6518|      6|        hour12 = (int)tp->tm_hour;
 6519|      6|        i = (size_t)0;
 6520|      6|        p = s;
 6521|      6|        zone = (char const *)((void *)0);
 6522|      6|        zone = (char const *)tp->tm_zone;
 6523|      6|        if (hour12 > 12) {
 6524|      5|            hour12 -= 12;
 6525|      5|        }
 6526|      1|        else {
 6527|      1|            if (hour12 == 0) {
 6528|      1|                hour12 = 12;
 6529|      1|            }
 6530|      1|        }
 6531|      6|        f = format;
 6532|     32|        while (1) {
 6533|       |
 6534|     32|            if (!((int const) * f != 0)) {
 6535|      6|                goto while_break;
 6536|      6|            }
 6537|     26|            pad = 0;
 6538|     26|            digits = 0;
 6539|     26|            width = -1;
 6540|     26|            to_lowcase = (_Bool)0;
 6541|     26|            to_uppcase = upcase;
 6542|     26|            change_case = (_Bool)0;
 6543|     26|            if ((int const) * f != 37) {
 6544|     10|                while (1) {
 6545|     10|                    _n = (size_t)1;
 6546|     10|                    if (width < 0) {
 6547|     10|                        tmp = 0;
 6548|     10|                    }
 6549|      0|                    else {
 6550|      0|                        tmp = width;
 6551|      0|                    }
 6552|     10|                    _w = (size_t)tmp;
 6553|     10|                    if (_n < _w) {
 6554|      0|                        tmp___0 = _w;
 6555|      0|                    }
 6556|     10|                    else {
 6557|     10|                        tmp___0 = _n;
 6558|     10|                    }
 6559|     10|                    _incr = tmp___0;
 6560|     10|                    if (_incr >= maxsize - i) {
 6561|      0|                        return ((size_t)0);
 6562|      0|                    }
 6563|     10|                    if (p) {
 6564|     10|                        if (digits == 0) {
 6565|     10|                            if (_n < _w) {
 6566|      0|                                _delta = (size_t)width - _n;
 6567|      0|                                if (pad == 48) {
 6568|      0|                                    while (1) {
 6569|      0|                                        _i = (size_t)0;
 6570|      0|                                        while (1) {
 6571|       |
 6572|      0|                                            if (!(_i < _delta)) {
 6573|      0|                                                goto while_break___2;
 6574|      0|                                            }
 6575|      0|                                            fputc('0', p);
 6576|      0|                                            _i++;
 6577|      0|                                        }
 6578|      0|while_break___2:
 6579|      0|                                        ;
 6580|      0|                                        goto while_break___1;
 6581|      0|                                    }
 6582|      0|while_break___1:
 6583|      0|                                    ;
 6584|      0|                                }
 6585|      0|                                else {
 6586|      0|                                    while (1) {
 6587|      0|                                        _i___0 = (size_t)0;
 6588|      0|                                        while (1) {
 6589|       |
 6590|      0|                                            if (!(_i___0 < _delta)) {
 6591|      0|                                                goto while_break___4;
 6592|      0|                                            }
 6593|      0|                                            fputc(' ', p);
 6594|      0|                                            _i___0++;
 6595|      0|                                        }
 6596|      0|while_break___4:
 6597|      0|                                        ;
 6598|      0|                                        goto while_break___3;
 6599|      0|                                    }
 6600|      0|while_break___3:
 6601|      0|                                    ;
 6602|      0|                                }
 6603|      0|                            }
 6604|     10|                        }
 6605|     10|                        fputc((int)*f, p);
 6606|     10|                    }
 6607|     10|                    i += _incr;
 6608|     10|                    goto while_break___0;
 6609|     10|                }
 6610|     10|while_break___0:
 6611|     10|                ;
 6612|     10|                goto __Cont;
 6613|     10|            }
 6614|     16|            while (1) {
 6615|     16|while_continue___5:
 6616|     16|                f++;
 6617|     16|                if ((int const) * f == 95) {
 6618|      0|                    goto case_95;
 6619|      0|                }
 6620|     16|                if ((int const) * f == 45) {
 6621|      0|                    goto case_95;
 6622|      0|                }
 6623|     16|                if ((int const) * f == 48) {
 6624|      0|                    goto case_95;
 6625|      0|                }
 6626|     16|                if ((int const) * f == 94) {
 6627|      0|                    goto case_94;
 6628|      0|                }
 6629|     16|                if ((int const) * f == 35) {
 6630|      0|                    goto case_35;
 6631|      0|                }
 6632|     16|                goto switch_default;
 6633|     16|case_95:
 6634|      0|                pad = (int)*f;
 6635|      0|                goto while_continue___5;
 6636|      0|case_94:
 6637|      0|                to_uppcase = (_Bool)1;
 6638|      0|                goto while_continue___5;
 6639|      0|case_35:
 6640|      0|                change_case = (_Bool)1;
 6641|      0|                goto while_continue___5;
 6642|     16|switch_default:
 6643|     16|                goto switch_break;
 6644|     16|switch_break:
 6645|     16|                ;
 6646|     16|                goto while_break___5;
 6647|     16|            }
 6648|     16|while_break___5:
 6649|     16|            ;
 6650|     16|            if ((unsigned int)*f - 48U <= 9U) {
 6651|      0|                width = 0;
 6652|      0|                while (1) {
 6653|       |
 6654|      0|                    if (width > 214748364) {
 6655|      0|                        width = 2147483647;
 6656|      0|                    }
 6657|      0|                    else {
 6658|      0|                        if (width == 214748364) {
 6659|      0|                            if ((int const) * f - 48 > 7) {
 6660|      0|                                width = 2147483647;
 6661|      0|                            }
 6662|      0|                            else {
 6663|      0|                                width *= 10;
 6664|      0|                                width += (int)((int const) * f - 48);
 6665|      0|                            }
 6666|      0|                        }
 6667|      0|                        else {
 6668|      0|                            width *= 10;
 6669|      0|                            width += (int)((int const) * f - 48);
 6670|      0|                        }
 6671|      0|                    }
 6672|      0|                    f++;
 6673|      0|                    if (!((unsigned int)*f - 48U <= 9U)) {
 6674|      0|                        goto while_break___6;
 6675|      0|                    }
 6676|      0|                }
 6677|      0|while_break___6:
 6678|      0|                ;
 6679|      0|            }
 6680|     16|            if ((int const) * f == 69) {
 6681|      0|                goto case_69;
 6682|      0|            }
 6683|     16|            if ((int const) * f == 79) {
 6684|      0|                goto case_69;
 6685|      0|            }
 6686|     16|            goto switch_default___0;
 6687|     16|case_69:
 6688|      0|            tmp___1 = f;
 6689|      0|            f++;
 6690|      0|            modifier = (int)*tmp___1;
 6691|      0|            goto switch_break___0;
 6692|     16|switch_default___0:
 6693|     16|            modifier = 0;
 6694|     16|            goto switch_break___0;
 6695|     16|switch_break___0:
 6696|     16|            format_char = (int)*f;
 6697|     16|            if (format_char == 37) {
 6698|      0|                goto case_37;
 6699|      0|            }
 6700|     16|            if (format_char == 97) {
 6701|      0|                goto case_97;
 6702|      0|            }
 6703|     16|            if (format_char == 65) {
 6704|      0|                goto case_65;
 6705|      0|            }
 6706|     16|            if (format_char == 98) {
 6707|      0|                goto case_98;
 6708|      0|            }
 6709|     16|            if (format_char == 104) {
 6710|      0|                goto case_98;
 6711|      0|            }
 6712|     16|            if (format_char == 66) {
 6713|      0|                goto case_66;
 6714|      0|            }
 6715|     16|            if (format_char == 99) {
 6716|      0|                goto case_99;
 6717|      0|            }
 6718|     16|            if (format_char == 67) {
 6719|      0|                goto case_67;
 6720|      0|            }
 6721|     16|            if (format_char == 120) {
 6722|      0|                goto case_120;
 6723|      0|            }
 6724|     16|            if (format_char == 68) {
 6725|      0|                goto case_68;
 6726|      0|            }
 6727|     16|            if (format_char == 100) {
 6728|      4|                goto case_100;
 6729|      4|            }
 6730|     12|            if (format_char == 101) {
 6731|      0|                goto case_101;
 6732|      0|            }
 6733|     12|            if (format_char == 70) {
 6734|      0|                goto case_70;
 6735|      0|            }
 6736|     12|            if (format_char == 72) {
 6737|      1|                goto case_72;
 6738|      1|            }
 6739|     11|            if (format_char == 73) {
 6740|      0|                goto case_73;
 6741|      0|            }
 6742|     11|            if (format_char == 107) {
 6743|      0|                goto case_107;
 6744|      0|            }
 6745|     11|            if (format_char == 108) {
 6746|      0|                goto case_108;
 6747|      0|            }
 6748|     11|            if (format_char == 106) {
 6749|      0|                goto case_106;
 6750|      0|            }
 6751|     11|            if (format_char == 77) {
 6752|      1|                goto case_77;
 6753|      1|            }
 6754|     10|            if (format_char == 109) {
 6755|      4|                goto case_109;
 6756|      4|            }
 6757|      6|            if (format_char == 78) {
 6758|      0|                goto case_78;
 6759|      0|            }
 6760|      6|            if (format_char == 110) {
 6761|      0|                goto case_110;
 6762|      0|            }
 6763|      6|            if (format_char == 80) {
 6764|      0|                goto case_80;
 6765|      0|            }
 6766|      6|            if (format_char == 112) {
 6767|      0|                goto case_112;
 6768|      0|            }
 6769|      6|            if (format_char == 82) {
 6770|      0|                goto case_82;
 6771|      0|            }
 6772|      6|            if (format_char == 114) {
 6773|      0|                goto case_114;
 6774|      0|            }
 6775|      6|            if (format_char == 83) {
 6776|      1|                goto case_83;
 6777|      1|            }
 6778|      5|            if (format_char == 115) {
 6779|      1|                goto case_115;
 6780|      1|            }
 6781|      4|            if (format_char == 88) {
 6782|      0|                goto case_88;
 6783|      0|            }
 6784|      4|            if (format_char == 84) {
 6785|      0|                goto case_84;
 6786|      0|            }
 6787|      4|            if (format_char == 116) {
 6788|      0|                goto case_116;
 6789|      0|            }
 6790|      4|            if (format_char == 117) {
 6791|      0|                goto case_117;
 6792|      0|            }
 6793|      4|            if (format_char == 85) {
 6794|      0|                goto case_85;
 6795|      0|            }
 6796|      4|            if (format_char == 86) {
 6797|      0|                goto case_86;
 6798|      0|            }
 6799|      4|            if (format_char == 103) {
 6800|      0|                goto case_86;
 6801|      0|            }
 6802|      4|            if (format_char == 71) {
 6803|      0|                goto case_86;
 6804|      0|            }
 6805|      4|            if (format_char == 87) {
 6806|      0|                goto case_87;
 6807|      0|            }
 6808|      4|            if (format_char == 119) {
 6809|      0|                goto case_119;
 6810|      0|            }
 6811|      4|            if (format_char == 89) {
 6812|      4|                goto case_89;
 6813|      4|            }
 6814|      0|            if (format_char == 121) {
 6815|      0|                goto case_121;
 6816|      0|            }
 6817|      0|            if (format_char == 90) {
 6818|      0|                goto case_90;
 6819|      0|            }
 6820|      0|            if (format_char == 58) {
 6821|      0|                goto case_58;
 6822|      0|            }
 6823|      0|            if (format_char == 122) {
 6824|      0|                goto case_122;
 6825|      0|            }
 6826|      0|            if (format_char == 0) {
 6827|      0|                goto case_0___0;
 6828|      0|            }
 6829|      0|            goto bad_format;
 6830|      0|case_37:
 6831|      0|            if (modifier != 0) {
 6832|      0|                goto bad_format;
 6833|      0|            }
 6834|      0|            while (1) {
 6835|      0|                _n___0 = (size_t)1;
 6836|      0|                if (width < 0) {
 6837|      0|                    tmp___2 = 0;
 6838|      0|                }
 6839|      0|                else {
 6840|      0|                    tmp___2 = width;
 6841|      0|                }
 6842|      0|                _w___0 = (size_t)tmp___2;
 6843|      0|                if (_n___0 < _w___0) {
 6844|      0|                    tmp___3 = _w___0;
 6845|      0|                }
 6846|      0|                else {
 6847|      0|                    tmp___3 = _n___0;
 6848|      0|                }
 6849|      0|                _incr___0 = tmp___3;
 6850|      0|                if (_incr___0 >= maxsize - i) {
 6851|      0|                    return ((size_t)0);
 6852|      0|                }
 6853|      0|                if (p) {
 6854|      0|                    if (digits == 0) {
 6855|      0|                        if (_n___0 < _w___0) {
 6856|      0|                            _delta___0 = (size_t)width - _n___0;
 6857|      0|                            if (pad == 48) {
 6858|      0|                                while (1) {
 6859|      0|                                    _i___1 = (size_t)0;
 6860|      0|                                    while (1) {
 6861|       |
 6862|      0|                                        if (!(_i___1 < _delta___0)) {
 6863|      0|                                            goto while_break___9;
 6864|      0|                                        }
 6865|      0|                                        fputc('0', p);
 6866|      0|                                        _i___1++;
 6867|      0|                                    }
 6868|      0|while_break___9:
 6869|      0|                                    ;
 6870|      0|                                    goto while_break___8;
 6871|      0|                                }
 6872|      0|while_break___8:
 6873|      0|                                ;
 6874|      0|                            }
 6875|      0|                            else {
 6876|      0|                                while (1) {
 6877|      0|                                    _i___2 = (size_t)0;
 6878|      0|                                    while (1) {
 6879|       |
 6880|      0|                                        if (!(_i___2 < _delta___0)) {
 6881|      0|                                            goto while_break___11;
 6882|      0|                                        }
 6883|      0|                                        fputc(' ', p);
 6884|      0|                                        _i___2++;
 6885|      0|                                    }
 6886|      0|while_break___11:
 6887|      0|                                    ;
 6888|      0|                                    goto while_break___10;
 6889|      0|                                }
 6890|      0|while_break___10:
 6891|      0|                                ;
 6892|      0|                            }
 6893|      0|                        }
 6894|      0|                    }
 6895|      0|                    fputc((int)*f, p);
 6896|      0|                }
 6897|      0|                i += _incr___0;
 6898|      0|                goto while_break___7;
 6899|      0|            }
 6900|      0|while_break___7:
 6901|      0|            ;
 6902|      0|            goto switch_break___1;
 6903|      0|case_97:
 6904|      0|            if (modifier != 0) {
 6905|      0|                goto bad_format;
 6906|      0|            }
 6907|      0|            if (change_case) {
 6908|      0|                to_uppcase = (_Bool)1;
 6909|      0|                to_lowcase = (_Bool)0;
 6910|      0|            }
 6911|      0|            goto underlying_strftime;
 6912|      0|case_65:
 6913|      0|            if (modifier != 0) {
 6914|      0|                goto bad_format;
 6915|      0|            }
 6916|      0|            if (change_case) {
 6917|      0|                to_uppcase = (_Bool)1;
 6918|      0|                to_lowcase = (_Bool)0;
 6919|      0|            }
 6920|      0|            goto underlying_strftime;
 6921|      0|case_98:
 6922|      0|            if (change_case) {
 6923|      0|                to_uppcase = (_Bool)1;
 6924|      0|                to_lowcase = (_Bool)0;
 6925|      0|            }
 6926|      0|            if (modifier != 0) {
 6927|      0|                goto bad_format;
 6928|      0|            }
 6929|      0|            goto underlying_strftime;
 6930|      0|case_66:
 6931|      0|            if (modifier != 0) {
 6932|      0|                goto bad_format;
 6933|      0|            }
 6934|      0|            if (change_case) {
 6935|      0|                to_uppcase = (_Bool)1;
 6936|      0|                to_lowcase = (_Bool)0;
 6937|      0|            }
 6938|      0|            goto underlying_strftime;
 6939|      0|case_99:
 6940|      0|            if (modifier == 79) {
 6941|      0|                goto bad_format;
 6942|      0|            }
 6943|      0|            goto underlying_strftime;
 6944|      0|subformat:
 6945|      0|            tmp___4 = strftime_case____0(to_uppcase, (FILE *)((void *)0), subfmt, tp,
 6946|      0|                                         ut, ns);
 6947|      0|            len = tmp___4;
 6948|      0|            while (1) {
 6949|      0|                _n___1 = len;
 6950|      0|                if (width < 0) {
 6951|      0|                    tmp___5 = 0;
 6952|      0|                }
 6953|      0|                else {
 6954|      0|                    tmp___5 = width;
 6955|      0|                }
 6956|      0|                _w___1 = (size_t)tmp___5;
 6957|      0|                if (_n___1 < _w___1) {
 6958|      0|                    tmp___6 = _w___1;
 6959|      0|                }
 6960|      0|                else {
 6961|      0|                    tmp___6 = _n___1;
 6962|      0|                }
 6963|      0|                _incr___1 = tmp___6;
 6964|      0|                if (_incr___1 >= maxsize - i) {
 6965|      0|                    return ((size_t)0);
 6966|      0|                }
 6967|      0|                if (p) {
 6968|      0|                    if (digits == 0) {
 6969|      0|                        if (_n___1 < _w___1) {
 6970|      0|                            _delta___1 = (size_t)width - _n___1;
 6971|      0|                            if (pad == 48) {
 6972|      0|                                while (1) {
 6973|      0|                                    _i___3 = (size_t)0;
 6974|      0|                                    while (1) {
 6975|       |
 6976|      0|                                        if (!(_i___3 < _delta___1)) {
 6977|      0|                                            goto while_break___14;
 6978|      0|                                        }
 6979|      0|                                        fputc('0', p);
 6980|      0|                                        _i___3++;
 6981|      0|                                    }
 6982|      0|while_break___14:
 6983|      0|                                    ;
 6984|      0|                                    goto while_break___13;
 6985|      0|                                }
 6986|      0|while_break___13:
 6987|      0|                                ;
 6988|      0|                            }
 6989|      0|                            else {
 6990|      0|                                while (1) {
 6991|      0|                                    _i___4 = (size_t)0;
 6992|      0|                                    while (1) {
 6993|       |
 6994|      0|                                        if (!(_i___4 < _delta___1)) {
 6995|      0|                                            goto while_break___16;
 6996|      0|                                        }
 6997|      0|                                        fputc(' ', p);
 6998|      0|                                        _i___4++;
 6999|      0|                                    }
 7000|      0|while_break___16:
 7001|      0|                                    ;
 7002|      0|                                    goto while_break___15;
 7003|      0|                                }
 7004|      0|while_break___15:
 7005|      0|                                ;
 7006|      0|                            }
 7007|      0|                        }
 7008|      0|                    }
 7009|      0|                    strftime_case____0(to_uppcase, p, subfmt, tp, ut, ns);
 7010|      0|                }
 7011|      0|                i += _incr___1;
 7012|      0|                goto while_break___12;
 7013|      0|            }
 7014|      0|while_break___12:
 7015|      0|            ;
 7016|      0|            goto switch_break___1;
 7017|      0|underlying_strftime:
 7018|      0|            u = ufmt;
 7019|      0|            tmp___7 = u;
 7020|      0|            u++;
 7021|      0|            *tmp___7 = (char)' ';
 7022|      0|            tmp___8 = u;
 7023|      0|            u++;
 7024|      0|            *tmp___8 = (char)'%';
 7025|      0|            if (modifier != 0) {
 7026|      0|                tmp___9 = u;
 7027|      0|                u++;
 7028|      0|                *tmp___9 = (char)modifier;
 7029|      0|            }
 7030|      0|            tmp___10 = u;
 7031|      0|            u++;
 7032|      0|            *tmp___10 = (char)format_char;
 7033|      0|            *u = (char)'\000';
 7034|      0|            len___0 = strftime(ubuf, sizeof(ubuf), (char const *)(ufmt), tp);
 7035|      0|            if (len___0 != 0UL) {
 7036|      0|                while (1) {
 7037|      0|                    _n___2 = len___0 - 1UL;
 7038|      0|                    if (width < 0) {
 7039|      0|                        tmp___11 = 0;
 7040|      0|                    }
 7041|      0|                    else {
 7042|      0|                        tmp___11 = width;
 7043|      0|                    }
 7044|      0|                    _w___2 = (size_t)tmp___11;
 7045|      0|                    if (_n___2 < _w___2) {
 7046|      0|                        tmp___12 = _w___2;
 7047|      0|                    }
 7048|      0|                    else {
 7049|      0|                        tmp___12 = _n___2;
 7050|      0|                    }
 7051|      0|                    _incr___2 = tmp___12;
 7052|      0|                    if (_incr___2 >= maxsize - i) {
 7053|      0|                        return ((size_t)0);
 7054|      0|                    }
 7055|      0|                    if (p) {
 7056|      0|                        if (digits == 0) {
 7057|      0|                            if (_n___2 < _w___2) {
 7058|      0|                                _delta___2 = (size_t)width - _n___2;
 7059|      0|                                if (pad == 48) {
 7060|      0|                                    while (1) {
 7061|      0|                                        _i___5 = (size_t)0;
 7062|      0|                                        while (1) {
 7063|       |
 7064|      0|                                            if (!(_i___5 < _delta___2)) {
 7065|      0|                                                goto while_break___19;
 7066|      0|                                            }
 7067|      0|                                            fputc('0', p);
 7068|      0|                                            _i___5++;
 7069|      0|                                        }
 7070|      0|while_break___19:
 7071|      0|                                        ;
 7072|      0|                                        goto while_break___18;
 7073|      0|                                    }
 7074|      0|while_break___18:
 7075|      0|                                    ;
 7076|      0|                                }
 7077|      0|                                else {
 7078|      0|                                    while (1) {
 7079|      0|                                        _i___6 = (size_t)0;
 7080|      0|                                        while (1) {
 7081|       |
 7082|      0|                                            if (!(_i___6 < _delta___2)) {
 7083|      0|                                                goto while_break___21;
 7084|      0|                                            }
 7085|      0|                                            fputc(' ', p);
 7086|      0|                                            _i___6++;
 7087|      0|                                        }
 7088|      0|while_break___21:
 7089|      0|                                        ;
 7090|      0|                                        goto while_break___20;
 7091|      0|                                    }
 7092|      0|while_break___20:
 7093|      0|                                    ;
 7094|      0|                                }
 7095|      0|                            }
 7096|      0|                        }
 7097|      0|                        while (1) {
 7098|       |
 7099|      0|                            if (to_lowcase) {
 7100|      0|                                fwrite_lowcase(p, (char const *)(ubuf + 1), _n___2);
 7101|      0|                            }
 7102|      0|                            else {
 7103|      0|                                if (to_uppcase) {
 7104|      0|                                    fwrite_uppcase(p, (char const *)(ubuf + 1), _n___2);
 7105|      0|                                }
 7106|      0|                                else {
 7107|      0|                                    fwrite((void const *)(ubuf + 1), _n___2, (size_t)1, p);
 7108|      0|                                }
 7109|      0|                            }
 7110|      0|                            goto while_break___22;
 7111|      0|                        }
 7112|      0|while_break___22:
 7113|      0|                        ;
 7114|      0|                    }
 7115|      0|                    i += _incr___2;
 7116|      0|                    goto while_break___17;
 7117|      0|                }
 7118|      0|while_break___17:
 7119|      0|                ;
 7120|      0|            }
 7121|      0|            goto switch_break___1;
 7122|      0|case_67:
 7123|      0|            if (modifier == 79) {
 7124|      0|                goto bad_format;
 7125|      0|            }
 7126|      0|            if (modifier == 69) {
 7127|      0|                goto underlying_strftime;
 7128|      0|            }
 7129|      0|            century = (int)(tp->tm_year / 100 + 19);
 7130|      0|            if (tp->tm_year % 100 < 0) {
 7131|      0|                if (0 < century) {
 7132|      0|                    tmp___13 = 1;
 7133|      0|                }
 7134|      0|                else {
 7135|      0|                    tmp___13 = 0;
 7136|      0|                }
 7137|      0|            }
 7138|      0|            else {
 7139|      0|                tmp___13 = 0;
 7140|      0|            }
 7141|      0|            century -= tmp___13;
 7142|      0|            digits = 2;
 7143|      0|            negative_number = (_Bool)(tp->tm_year < -1900);
 7144|      0|            u_number_value = (unsigned int)century;
 7145|      0|            goto do_signed_number;
 7146|      0|case_120:
 7147|      0|            if (modifier == 79) {
 7148|      0|                goto bad_format;
 7149|      0|            }
 7150|      0|            goto underlying_strftime;
 7151|      0|case_68:
 7152|      0|            if (modifier != 0) {
 7153|      0|                goto bad_format;
 7154|      0|            }
 7155|      0|            subfmt = "%m/%d/%y";
 7156|      0|            goto subformat;
 7157|      4|case_100:
 7158|      4|            if (modifier == 69) {
 7159|      0|                goto bad_format;
 7160|      0|            }
 7161|      4|            digits = 2;
 7162|      4|            number_value = (int)tp->tm_mday;
 7163|      4|            goto do_number;
 7164|      0|case_101:
 7165|      0|            if (modifier == 69) {
 7166|      0|                goto bad_format;
 7167|      0|            }
 7168|      0|            digits = 2;
 7169|      0|            number_value = (int)tp->tm_mday;
 7170|      0|            goto do_number_spacepad;
 7171|      0|do_tz_offset:
 7172|      0|            always_output_a_sign = (_Bool)1;
 7173|      0|            goto do_number_body;
 7174|      0|do_number_spacepad:
 7175|      0|            if (pad != 48) {
 7176|      0|                if (pad != 45) {
 7177|      0|                    pad = '_';
 7178|      0|                }
 7179|      0|            }
 7180|      7|do_number:
 7181|      7|            negative_number = (_Bool)(number_value < 0);
 7182|      7|            u_number_value = (unsigned int)number_value;
 7183|     15|do_signed_number:
 7184|     15|            always_output_a_sign = (_Bool)0;
 7185|     15|            tz_colon_mask = 0;
 7186|     15|do_number_body:
 7187|     15|            if (modifier == 79) {
 7188|      0|                if (!negative_number) {
 7189|      0|                    goto underlying_strftime;
 7190|      0|                }
 7191|      0|            }
 7192|     15|            bufp = buf___1 + sizeof(buf___1) / sizeof(buf___1[0]);
 7193|     15|            if (negative_number) {
 7194|      0|                u_number_value = -u_number_value;
 7195|      0|            }
 7196|     33|            while (1) {
 7197|       |
 7198|     33|                if (tz_colon_mask & 1) {
 7199|      0|                    bufp--;
 7200|      0|                    *bufp = (char)':';
 7201|      0|                }
 7202|     33|                tz_colon_mask >>= 1;
 7203|     33|                bufp--;
 7204|     33|                *bufp = (char)(u_number_value % 10U + 48U);
 7205|     33|                u_number_value /= 10U;
 7206|     33|                if (!(u_number_value != 0U)) {
 7207|     15|                    if (!(tz_colon_mask != 0)) {
 7208|     15|                        goto while_break___23;
 7209|     15|                    }
 7210|     15|                }
 7211|     33|            }
 7212|     15|while_break___23:
 7213|     15|            ;
 7214|     16|do_number_sign_and_padding:
 7215|     16|            if (digits < width) {
 7216|      0|                digits = width;
 7217|      0|            }
 7218|     16|            if (negative_number) {
 7219|      0|                sign_char = (char)'-';
 7220|      0|            }
 7221|     16|            else {
 7222|     16|                if (always_output_a_sign) {
 7223|      0|                    tmp___14 = '+';
 7224|      0|                }
 7225|     16|                else {
 7226|     16|                    tmp___14 = 0;
 7227|     16|                }
 7228|     16|                sign_char = (char)tmp___14;
 7229|     16|            }
 7230|     16|            if (pad == 45) {
 7231|      0|                if (sign_char) {
 7232|      0|                    while (1) {
 7233|      0|                        _n___3 = (size_t)1;
 7234|      0|                        if (width < 0) {
 7235|      0|                            tmp___15 = 0;
 7236|      0|                        }
 7237|      0|                        else {
 7238|      0|                            tmp___15 = width;
 7239|      0|                        }
 7240|      0|                        _w___3 = (size_t)tmp___15;
 7241|      0|                        if (_n___3 < _w___3) {
 7242|      0|                            tmp___16 = _w___3;
 7243|      0|                        }
 7244|      0|                        else {
 7245|      0|                            tmp___16 = _n___3;
 7246|      0|                        }
 7247|      0|                        _incr___3 = tmp___16;
 7248|      0|                        if (_incr___3 >= maxsize - i) {
 7249|      0|                            return ((size_t)0);
 7250|      0|                        }
 7251|      0|                        if (p) {
 7252|      0|                            if (digits == 0) {
 7253|      0|                                if (_n___3 < _w___3) {
 7254|      0|                                    _delta___3 = (size_t)width - _n___3;
 7255|      0|                                    if (pad == 48) {
 7256|      0|                                        while (1) {
 7257|      0|                                            _i___7 = (size_t)0;
 7258|      0|                                            while (1) {
 7259|       |
 7260|      0|                                                if (!(_i___7 < _delta___3)) {
 7261|      0|                                                    goto while_break___26;
 7262|      0|                                                }
 7263|      0|                                                fputc('0', p);
 7264|      0|                                                _i___7++;
 7265|      0|                                            }
 7266|      0|while_break___26:
 7267|      0|                                            ;
 7268|      0|                                            goto while_break___25;
 7269|      0|                                        }
 7270|      0|while_break___25:
 7271|      0|                                        ;
 7272|      0|                                    }
 7273|      0|                                    else {
 7274|      0|                                        while (1) {
 7275|      0|                                            _i___8 = (size_t)0;
 7276|      0|                                            while (1) {
 7277|       |
 7278|      0|                                                if (!(_i___8 < _delta___3)) {
 7279|      0|                                                    goto while_break___28;
 7280|      0|                                                }
 7281|      0|                                                fputc(' ', p);
 7282|      0|                                                _i___8++;
 7283|      0|                                            }
 7284|      0|while_break___28:
 7285|      0|                                            ;
 7286|      0|                                            goto while_break___27;
 7287|      0|                                        }
 7288|      0|while_break___27:
 7289|      0|                                        ;
 7290|      0|                                    }
 7291|      0|                                }
 7292|      0|                            }
 7293|      0|                            fputc((int)sign_char, p);
 7294|      0|                        }
 7295|      0|                        i += _incr___3;
 7296|      0|                        goto while_break___24;
 7297|      0|                    }
 7298|      0|while_break___24:
 7299|      0|                    ;
 7300|      0|                }
 7301|      0|            }
 7302|     16|            else {
 7303|     16|                padding =
 7304|     16|                    (int)(((long)digits -
 7305|     16|                           ((buf___1 + sizeof(buf___1) / sizeof(buf___1[0])) - bufp)) -
 7306|     16|                          (long)(!(!sign_char)));
 7307|     16|                if (padding > 0) {
 7308|      5|                    if (pad == 95) {
 7309|      0|                        if ((size_t)padding >= maxsize - i) {
 7310|      0|                            return ((size_t)0);
 7311|      0|                        }
 7312|      0|                        if (p) {
 7313|      0|                            while (1) {
 7314|      0|                                _i___9 = (size_t)0;
 7315|      0|                                while (1) {
 7316|       |
 7317|      0|                                    if (!(_i___9 < (size_t)padding)) {
 7318|      0|                                        goto while_break___30;
 7319|      0|                                    }
 7320|      0|                                    fputc(' ', p);
 7321|      0|                                    _i___9++;
 7322|      0|                                }
 7323|      0|while_break___30:
 7324|      0|                                ;
 7325|      0|                                goto while_break___29;
 7326|      0|                            }
 7327|      0|while_break___29:
 7328|      0|                            ;
 7329|      0|                        }
 7330|      0|                        i += (size_t)padding;
 7331|      0|                        if (width > padding) {
 7332|      0|                            width -= padding;
 7333|      0|                        }
 7334|      0|                        else {
 7335|      0|                            width = 0;
 7336|      0|                        }
 7337|      0|                        if (sign_char) {
 7338|      0|                            while (1) {
 7339|      0|                                _n___4 = (size_t)1;
 7340|      0|                                if (width < 0) {
 7341|      0|                                    tmp___17 = 0;
 7342|      0|                                }
 7343|      0|                                else {
 7344|      0|                                    tmp___17 = width;
 7345|      0|                                }
 7346|      0|                                _w___4 = (size_t)tmp___17;
 7347|      0|                                if (_n___4 < _w___4) {
 7348|      0|                                    tmp___18 = _w___4;
 7349|      0|                                }
 7350|      0|                                else {
 7351|      0|                                    tmp___18 = _n___4;
 7352|      0|                                }
 7353|      0|                                _incr___4 = tmp___18;
 7354|      0|                                if (_incr___4 >= maxsize - i) {
 7355|      0|                                    return ((size_t)0);
 7356|      0|                                }
 7357|      0|                                if (p) {
 7358|      0|                                    if (digits == 0) {
 7359|      0|                                        if (_n___4 < _w___4) {
 7360|      0|                                            _delta___4 = (size_t)width - _n___4;
 7361|      0|                                            if (pad == 48) {
 7362|      0|                                                while (1) {
 7363|      0|                                                    _i___10 = (size_t)0;
 7364|      0|                                                    while (1) {
 7365|       |
 7366|      0|                                                        if (!(_i___10 < _delta___4)) {
 7367|      0|                                                            goto while_break___33;
 7368|      0|                                                        }
 7369|      0|                                                        fputc('0', p);
 7370|      0|                                                        _i___10++;
 7371|      0|                                                    }
 7372|      0|while_break___33:
 7373|      0|                                                    ;
 7374|      0|                                                    goto while_break___32;
 7375|      0|                                                }
 7376|      0|while_break___32:
 7377|      0|                                                ;
 7378|      0|                                            }
 7379|      0|                                            else {
 7380|      0|                                                while (1) {
 7381|      0|                                                    _i___11 = (size_t)0;
 7382|      0|                                                    while (1) {
 7383|       |
 7384|      0|                                                        if (!(_i___11 < _delta___4)) {
 7385|      0|                                                            goto while_break___35;
 7386|      0|                                                        }
 7387|      0|                                                        fputc(' ', p);
 7388|      0|                                                        _i___11++;
 7389|      0|                                                    }
 7390|      0|while_break___35:
 7391|      0|                                                    ;
 7392|      0|                                                    goto while_break___34;
 7393|      0|                                                }
 7394|      0|while_break___34:
 7395|      0|                                                ;
 7396|      0|                                            }
 7397|      0|                                        }
 7398|      0|                                    }
 7399|      0|                                    fputc((int)sign_char, p);
 7400|      0|                                }
 7401|      0|                                i += _incr___4;
 7402|      0|                                goto while_break___31;
 7403|      0|                            }
 7404|      0|while_break___31:
 7405|      0|                            ;
 7406|      0|                        }
 7407|      0|                    }
 7408|      5|                    else {
 7409|      5|                        if ((size_t)digits >= maxsize - i) {
 7410|      0|                            return ((size_t)0);
 7411|      0|                        }
 7412|      5|                        if (sign_char) {
 7413|      0|                            while (1) {
 7414|      0|                                _n___5 = (size_t)1;
 7415|      0|                                if (width < 0) {
 7416|      0|                                    tmp___19 = 0;
 7417|      0|                                }
 7418|      0|                                else {
 7419|      0|                                    tmp___19 = width;
 7420|      0|                                }
 7421|      0|                                _w___5 = (size_t)tmp___19;
 7422|      0|                                if (_n___5 < _w___5) {
 7423|      0|                                    tmp___20 = _w___5;
 7424|      0|                                }
 7425|      0|                                else {
 7426|      0|                                    tmp___20 = _n___5;
 7427|      0|                                }
 7428|      0|                                _incr___5 = tmp___20;
 7429|      0|                                if (_incr___5 >= maxsize - i) {
 7430|      0|                                    return ((size_t)0);
 7431|      0|                                }
 7432|      0|                                if (p) {
 7433|      0|                                    if (digits == 0) {
 7434|      0|                                        if (_n___5 < _w___5) {
 7435|      0|                                            _delta___5 = (size_t)width - _n___5;
 7436|      0|                                            if (pad == 48) {
 7437|      0|                                                while (1) {
 7438|      0|                                                    _i___12 = (size_t)0;
 7439|      0|                                                    while (1) {
 7440|       |
 7441|      0|                                                        if (!(_i___12 < _delta___5)) {
 7442|      0|                                                            goto while_break___38;
 7443|      0|                                                        }
 7444|      0|                                                        fputc('0', p);
 7445|      0|                                                        _i___12++;
 7446|      0|                                                    }
 7447|      0|while_break___38:
 7448|      0|                                                    ;
 7449|      0|                                                    goto while_break___37;
 7450|      0|                                                }
 7451|      0|while_break___37:
 7452|      0|                                                ;
 7453|      0|                                            }
 7454|      0|                                            else {
 7455|      0|                                                while (1) {
 7456|      0|                                                    _i___13 = (size_t)0;
 7457|      0|                                                    while (1) {
 7458|       |
 7459|      0|                                                        if (!(_i___13 < _delta___5)) {
 7460|      0|                                                            goto while_break___40;
 7461|      0|                                                        }
 7462|      0|                                                        fputc(' ', p);
 7463|      0|                                                        _i___13++;
 7464|      0|                                                    }
 7465|      0|while_break___40:
 7466|      0|                                                    ;
 7467|      0|                                                    goto while_break___39;
 7468|      0|                                                }
 7469|      0|while_break___39:
 7470|      0|                                                ;
 7471|      0|                                            }
 7472|      0|                                        }
 7473|      0|                                    }
 7474|      0|                                    fputc((int)sign_char, p);
 7475|      0|                                }
 7476|      0|                                i += _incr___5;
 7477|      0|                                goto while_break___36;
 7478|      0|                            }
 7479|      0|while_break___36:
 7480|      0|                            ;
 7481|      0|                        }
 7482|      5|                        if (p) {
 7483|      5|                            while (1) {
 7484|      5|                                _i___14 = (size_t)0;
 7485|     10|                                while (1) {
 7486|       |
 7487|     10|                                    if (!(_i___14 < (size_t)padding)) {
 7488|      5|                                        goto while_break___42;
 7489|      5|                                    }
 7490|      5|                                    fputc('0', p);
 7491|      5|                                    _i___14++;
 7492|      5|                                }
 7493|      5|while_break___42:
 7494|      5|                                ;
 7495|      5|                                goto while_break___41;
 7496|      5|                            }
 7497|      5|while_break___41:
 7498|      5|                            ;
 7499|      5|                        }
 7500|      5|                        i += (size_t)padding;
 7501|      5|                        width = 0;
 7502|      5|                    }
 7503|      5|                }
 7504|     11|                else {
 7505|     11|                    if (sign_char) {
 7506|      0|                        while (1) {
 7507|      0|                            _n___6 = (size_t)1;
 7508|      0|                            if (width < 0) {
 7509|      0|                                tmp___21 = 0;
 7510|      0|                            }
 7511|      0|                            else {
 7512|      0|                                tmp___21 = width;
 7513|      0|                            }
 7514|      0|                            _w___6 = (size_t)tmp___21;
 7515|      0|                            if (_n___6 < _w___6) {
 7516|      0|                                tmp___22 = _w___6;
 7517|      0|                            }
 7518|      0|                            else {
 7519|      0|                                tmp___22 = _n___6;
 7520|      0|                            }
 7521|      0|                            _incr___6 = tmp___22;
 7522|      0|                            if (_incr___6 >= maxsize - i) {
 7523|      0|                                return ((size_t)0);
 7524|      0|                            }
 7525|      0|                            if (p) {
 7526|      0|                                if (digits == 0) {
 7527|      0|                                    if (_n___6 < _w___6) {
 7528|      0|                                        _delta___6 = (size_t)width - _n___6;
 7529|      0|                                        if (pad == 48) {
 7530|      0|                                            while (1) {
 7531|      0|                                                _i___15 = (size_t)0;
 7532|      0|                                                while (1) {
 7533|       |
 7534|      0|                                                    if (!(_i___15 < _delta___6)) {
 7535|      0|                                                        goto while_break___45;
 7536|      0|                                                    }
 7537|      0|                                                    fputc('0', p);
 7538|      0|                                                    _i___15++;
 7539|      0|                                                }
 7540|      0|while_break___45:
 7541|      0|                                                ;
 7542|      0|                                                goto while_break___44;
 7543|      0|                                            }
 7544|      0|while_break___44:
 7545|      0|                                            ;
 7546|      0|                                        }
 7547|      0|                                        else {
 7548|      0|                                            while (1) {
 7549|      0|                                                _i___16 = (size_t)0;
 7550|      0|                                                while (1) {
 7551|       |
 7552|      0|                                                    if (!(_i___16 < _delta___6)) {
 7553|      0|                                                        goto while_break___47;
 7554|      0|                                                    }
 7555|      0|                                                    fputc(' ', p);
 7556|      0|                                                    _i___16++;
 7557|      0|                                                }
 7558|      0|while_break___47:
 7559|      0|                                                ;
 7560|      0|                                                goto while_break___46;
 7561|      0|                                            }
 7562|      0|while_break___46:
 7563|      0|                                            ;
 7564|      0|                                        }
 7565|      0|                                    }
 7566|      0|                                }
 7567|      0|                                fputc((int)sign_char, p);
 7568|      0|                            }
 7569|      0|                            i += _incr___6;
 7570|      0|                            goto while_break___43;
 7571|      0|                        }
 7572|      0|while_break___43:
 7573|      0|                        ;
 7574|      0|                    }
 7575|     11|                }
 7576|     16|            }
 7577|     16|            while (1) {
 7578|     16|                _n___7 =
 7579|     16|                    (size_t)((buf___1 + sizeof(buf___1) / sizeof(buf___1[0])) - bufp);
 7580|     16|                if (width < 0) {
 7581|     11|                    tmp___23 = 0;
 7582|     11|                }
 7583|      5|                else {
 7584|      5|                    tmp___23 = width;
 7585|      5|                }
 7586|     16|                _w___7 = (size_t)tmp___23;
 7587|     16|                if (_n___7 < _w___7) {
 7588|      0|                    tmp___24 = _w___7;
 7589|      0|                }
 7590|     16|                else {
 7591|     16|                    tmp___24 = _n___7;
 7592|     16|                }
 7593|     16|                _incr___7 = tmp___24;
 7594|     16|                if (_incr___7 >= maxsize - i) {
 7595|      0|                    return ((size_t)0);
 7596|      0|                }
 7597|     16|                if (p) {
 7598|     16|                    if (digits == 0) {
 7599|      0|                        if (_n___7 < _w___7) {
 7600|      0|                            _delta___7 = (size_t)width - _n___7;
 7601|      0|                            if (pad == 48) {
 7602|      0|                                while (1) {
 7603|      0|                                    _i___17 = (size_t)0;
 7604|      0|                                    while (1) {
 7605|       |
 7606|      0|                                        if (!(_i___17 < _delta___7)) {
 7607|      0|                                            goto while_break___50;
 7608|      0|                                        }
 7609|      0|                                        fputc('0', p);
 7610|      0|                                        _i___17++;
 7611|      0|                                    }
 7612|      0|while_break___50:
 7613|      0|                                    ;
 7614|      0|                                    goto while_break___49;
 7615|      0|                                }
 7616|      0|while_break___49:
 7617|      0|                                ;
 7618|      0|                            }
 7619|      0|                            else {
 7620|      0|                                while (1) {
 7621|      0|                                    _i___18 = (size_t)0;
 7622|      0|                                    while (1) {
 7623|       |
 7624|      0|                                        if (!(_i___18 < _delta___7)) {
 7625|      0|                                            goto while_break___52;
 7626|      0|                                        }
 7627|      0|                                        fputc(' ', p);
 7628|      0|                                        _i___18++;
 7629|      0|                                    }
 7630|      0|while_break___52:
 7631|      0|                                    ;
 7632|      0|                                    goto while_break___51;
 7633|      0|                                }
 7634|      0|while_break___51:
 7635|      0|                                ;
 7636|      0|                            }
 7637|      0|                        }
 7638|      0|                    }
 7639|     16|                    while (1) {
 7640|       |
 7641|     16|                        if (to_lowcase) {
 7642|      0|                            fwrite_lowcase(p, (char const *)bufp, _n___7);
 7643|      0|                        }
 7644|     16|                        else {
 7645|     16|                            if (to_uppcase) {
 7646|      0|                                fwrite_uppcase(p, (char const *)bufp, _n___7);
 7647|      0|                            }
 7648|     16|                            else {
 7649|     16|                                fwrite((void const *)bufp, _n___7, (size_t)1, p);
 7650|     16|                            }
 7651|     16|                        }
 7652|     16|                        goto while_break___53;
 7653|     16|                    }
 7654|     16|while_break___53:
 7655|     16|                    ;
 7656|     16|                }
 7657|     16|                i += _incr___7;
 7658|     16|                goto while_break___48;
 7659|     16|            }
 7660|     16|while_break___48:
 7661|     16|            ;
 7662|     16|            goto switch_break___1;
 7663|      0|case_70:
 7664|      0|            if (modifier != 0) {
 7665|      0|                goto bad_format;
 7666|      0|            }
 7667|      0|            subfmt = "%Y-%m-%d";
 7668|      0|            goto subformat;
 7669|      1|case_72:
 7670|      1|            if (modifier == 69) {
 7671|      0|                goto bad_format;
 7672|      0|            }
 7673|      1|            digits = 2;
 7674|      1|            number_value = (int)tp->tm_hour;
 7675|      1|            goto do_number;
 7676|      0|case_73:
 7677|      0|            if (modifier == 69) {
 7678|      0|                goto bad_format;
 7679|      0|            }
 7680|      0|            digits = 2;
 7681|      0|            number_value = hour12;
 7682|      0|            goto do_number;
 7683|      0|case_107:
 7684|      0|            if (modifier == 69) {
 7685|      0|                goto bad_format;
 7686|      0|            }
 7687|      0|            digits = 2;
 7688|      0|            number_value = (int)tp->tm_hour;
 7689|      0|            goto do_number_spacepad;
 7690|      0|case_108:
 7691|      0|            if (modifier == 69) {
 7692|      0|                goto bad_format;
 7693|      0|            }
 7694|      0|            digits = 2;
 7695|      0|            number_value = hour12;
 7696|      0|            goto do_number_spacepad;
 7697|      0|case_106:
 7698|      0|            if (modifier == 69) {
 7699|      0|                goto bad_format;
 7700|      0|            }
 7701|      0|            digits = 3;
 7702|      0|            negative_number = (_Bool)(tp->tm_yday < -1);
 7703|      0|            u_number_value = (unsigned int)tp->tm_yday + 1U;
 7704|      0|            goto do_signed_number;
 7705|      1|case_77:
 7706|      1|            if (modifier == 69) {
 7707|      0|                goto bad_format;
 7708|      0|            }
 7709|      1|            digits = 2;
 7710|      1|            number_value = (int)tp->tm_min;
 7711|      1|            goto do_number;
 7712|      4|case_109:
 7713|      4|            if (modifier == 69) {
 7714|      0|                goto bad_format;
 7715|      0|            }
 7716|      4|            digits = 2;
 7717|      4|            negative_number = (_Bool)(tp->tm_mon < -1);
 7718|      4|            u_number_value = (unsigned int)tp->tm_mon + 1U;
 7719|      4|            goto do_signed_number;
 7720|      0|case_78:
 7721|      0|            if (modifier == 69) {
 7722|      0|                goto bad_format;
 7723|      0|            }
 7724|      0|            number_value = ns;
 7725|      0|            if (width == -1) {
 7726|      0|                width = 9;
 7727|      0|            }
 7728|      0|            else {
 7729|      0|                j = width;
 7730|      0|                while (1) {
 7731|       |
 7732|      0|                    if (!(j < 9)) {
 7733|      0|                        goto while_break___54;
 7734|      0|                    }
 7735|      0|                    number_value /= 10;
 7736|      0|                    j++;
 7737|      0|                }
 7738|      0|while_break___54:
 7739|      0|                ;
 7740|      0|            }
 7741|      0|            digits = width;
 7742|      0|            number_value = number_value;
 7743|      0|            goto do_number;
 7744|      0|case_110:
 7745|      0|            while (1) {
 7746|      0|                _n___8 = (size_t)1;
 7747|      0|                if (width < 0) {
 7748|      0|                    tmp___25 = 0;
 7749|      0|                }
 7750|      0|                else {
 7751|      0|                    tmp___25 = width;
 7752|      0|                }
 7753|      0|                _w___8 = (size_t)tmp___25;
 7754|      0|                if (_n___8 < _w___8) {
 7755|      0|                    tmp___26 = _w___8;
 7756|      0|                }
 7757|      0|                else {
 7758|      0|                    tmp___26 = _n___8;
 7759|      0|                }
 7760|      0|                _incr___8 = tmp___26;
 7761|      0|                if (_incr___8 >= maxsize - i) {
 7762|      0|                    return ((size_t)0);
 7763|      0|                }
 7764|      0|                if (p) {
 7765|      0|                    if (digits == 0) {
 7766|      0|                        if (_n___8 < _w___8) {
 7767|      0|                            _delta___8 = (size_t)width - _n___8;
 7768|      0|                            if (pad == 48) {
 7769|      0|                                while (1) {
 7770|      0|                                    _i___19 = (size_t)0;
 7771|      0|                                    while (1) {
 7772|       |
 7773|      0|                                        if (!(_i___19 < _delta___8)) {
 7774|      0|                                            goto while_break___57;
 7775|      0|                                        }
 7776|      0|                                        fputc('0', p);
 7777|      0|                                        _i___19++;
 7778|      0|                                    }
 7779|      0|while_break___57:
 7780|      0|                                    ;
 7781|      0|                                    goto while_break___56;
 7782|      0|                                }
 7783|      0|while_break___56:
 7784|      0|                                ;
 7785|      0|                            }
 7786|      0|                            else {
 7787|      0|                                while (1) {
 7788|      0|                                    _i___20 = (size_t)0;
 7789|      0|                                    while (1) {
 7790|       |
 7791|      0|                                        if (!(_i___20 < _delta___8)) {
 7792|      0|                                            goto while_break___59;
 7793|      0|                                        }
 7794|      0|                                        fputc(' ', p);
 7795|      0|                                        _i___20++;
 7796|      0|                                    }
 7797|      0|while_break___59:
 7798|      0|                                    ;
 7799|      0|                                    goto while_break___58;
 7800|      0|                                }
 7801|      0|while_break___58:
 7802|      0|                                ;
 7803|      0|                            }
 7804|      0|                        }
 7805|      0|                    }
 7806|      0|                    fputc('\n', p);
 7807|      0|                }
 7808|      0|                i += _incr___8;
 7809|      0|                goto while_break___55;
 7810|      0|            }
 7811|      0|while_break___55:
 7812|      0|            ;
 7813|      0|            goto switch_break___1;
 7814|      0|case_80:
 7815|      0|            to_lowcase = (_Bool)1;
 7816|      0|            format_char = 'p';
 7817|      0|case_112:
 7818|      0|            if (change_case) {
 7819|      0|                to_uppcase = (_Bool)0;
 7820|      0|                to_lowcase = (_Bool)1;
 7821|      0|            }
 7822|      0|            goto underlying_strftime;
 7823|      0|case_82:
 7824|      0|            subfmt = "%H:%M";
 7825|      0|            goto subformat;
 7826|      0|case_114:
 7827|      0|            goto underlying_strftime;
 7828|      1|case_83:
 7829|      1|            if (modifier == 69) {
 7830|      0|                goto bad_format;
 7831|      0|            }
 7832|      1|            digits = 2;
 7833|      1|            number_value = (int)tp->tm_sec;
 7834|      1|            goto do_number;
 7835|      1|case_115:
 7836|      1|            ltm = (struct tm) * tp;
 7837|      1|            t = mktime(&ltm);
 7838|      1|            bufp = buf___1 + sizeof(buf___1) / sizeof(buf___1[0]);
 7839|      1|            negative_number = (_Bool)(t < 0L);
 7840|     10|            while (1) {
 7841|     10|                d = (int)(t % 10L);
 7842|     10|                t /= 10L;
 7843|     10|                bufp--;
 7844|     10|                if (negative_number) {
 7845|      0|                    tmp___27 = -d;
 7846|      0|                }
 7847|     10|                else {
 7848|     10|                    tmp___27 = d;
 7849|     10|                }
 7850|     10|                *bufp = (char)(tmp___27 + 48);
 7851|     10|                if (!(t != 0L)) {
 7852|      1|                    goto while_break___60;
 7853|      1|                }
 7854|     10|            }
 7855|      1|while_break___60:
 7856|      1|            digits = 1;
 7857|      1|            always_output_a_sign = (_Bool)0;
 7858|      1|            goto do_number_sign_and_padding;
 7859|      0|case_88:
 7860|      0|            if (modifier == 79) {
 7861|      0|                goto bad_format;
 7862|      0|            }
 7863|      0|            goto underlying_strftime;
 7864|      0|case_84:
 7865|      0|            subfmt = "%H:%M:%S";
 7866|      0|            goto subformat;
 7867|      0|case_116:
 7868|      0|            while (1) {
 7869|      0|                _n___9 = (size_t)1;
 7870|      0|                if (width < 0) {
 7871|      0|                    tmp___28 = 0;
 7872|      0|                }
 7873|      0|                else {
 7874|      0|                    tmp___28 = width;
 7875|      0|                }
 7876|      0|                _w___9 = (size_t)tmp___28;
 7877|      0|                if (_n___9 < _w___9) {
 7878|      0|                    tmp___29 = _w___9;
 7879|      0|                }
 7880|      0|                else {
 7881|      0|                    tmp___29 = _n___9;
 7882|      0|                }
 7883|      0|                _incr___9 = tmp___29;
 7884|      0|                if (_incr___9 >= maxsize - i) {
 7885|      0|                    return ((size_t)0);
 7886|      0|                }
 7887|      0|                if (p) {
 7888|      0|                    if (digits == 0) {
 7889|      0|                        if (_n___9 < _w___9) {
 7890|      0|                            _delta___9 = (size_t)width - _n___9;
 7891|      0|                            if (pad == 48) {
 7892|      0|                                while (1) {
 7893|      0|                                    _i___21 = (size_t)0;
 7894|      0|                                    while (1) {
 7895|       |
 7896|      0|                                        if (!(_i___21 < _delta___9)) {
 7897|      0|                                            goto while_break___63;
 7898|      0|                                        }
 7899|      0|                                        fputc('0', p);
 7900|      0|                                        _i___21++;
 7901|      0|                                    }
 7902|      0|while_break___63:
 7903|      0|                                    ;
 7904|      0|                                    goto while_break___62;
 7905|      0|                                }
 7906|      0|while_break___62:
 7907|      0|                                ;
 7908|      0|                            }
 7909|      0|                            else {
 7910|      0|                                while (1) {
 7911|      0|                                    _i___22 = (size_t)0;
 7912|      0|                                    while (1) {
 7913|       |
 7914|      0|                                        if (!(_i___22 < _delta___9)) {
 7915|      0|                                            goto while_break___65;
 7916|      0|                                        }
 7917|      0|                                        fputc(' ', p);
 7918|      0|                                        _i___22++;
 7919|      0|                                    }
 7920|      0|while_break___65:
 7921|      0|                                    ;
 7922|      0|                                    goto while_break___64;
 7923|      0|                                }
 7924|      0|while_break___64:
 7925|      0|                                ;
 7926|      0|                            }
 7927|      0|                        }
 7928|      0|                    }
 7929|      0|                    fputc('\t', p);
 7930|      0|                }
 7931|      0|                i += _incr___9;
 7932|      0|                goto while_break___61;
 7933|      0|            }
 7934|      0|while_break___61:
 7935|      0|            ;
 7936|      0|            goto switch_break___1;
 7937|      0|case_117:
 7938|      0|            digits = 1;
 7939|      0|            number_value = (int)(((tp->tm_wday - 1) + 7) % 7 + 1);
 7940|      0|            goto do_number;
 7941|      0|case_85:
 7942|      0|            if (modifier == 69) {
 7943|      0|                goto bad_format;
 7944|      0|            }
 7945|      0|            digits = 2;
 7946|      0|            number_value = (int)(((tp->tm_yday - tp->tm_wday) + 7) / 7);
 7947|      0|            goto do_number;
 7948|      0|case_86:
 7949|      0|            if (modifier == 69) {
 7950|      0|                goto bad_format;
 7951|      0|            }
 7952|      0|            if (tp->tm_year < 0) {
 7953|      0|                tmp___30 = 300;
 7954|      0|            }
 7955|      0|            else {
 7956|      0|                tmp___30 = -100;
 7957|      0|            }
 7958|      0|            year___1 = (int)(tp->tm_year + (int const)tmp___30);
 7959|      0|            year_adjust = 0;
 7960|      0|            tmp___31 = iso_week_days((int)tp->tm_yday, (int)tp->tm_wday);
 7961|      0|            days = tmp___31;
 7962|      0|            if (days < 0) {
 7963|      0|                year_adjust = -1;
 7964|      0|                if ((year___1 - 1) % 4 == 0) {
 7965|      0|                    if ((year___1 - 1) % 100 != 0) {
 7966|      0|                        tmp___32 = 1;
 7967|      0|                    }
 7968|      0|                    else {
 7969|      0|                        if ((year___1 - 1) % 400 == 0) {
 7970|      0|                            tmp___32 = 1;
 7971|      0|                        }
 7972|      0|                        else {
 7973|      0|                            tmp___32 = 0;
 7974|      0|                        }
 7975|      0|                    }
 7976|      0|                }
 7977|      0|                else {
 7978|      0|                    tmp___32 = 0;
 7979|      0|                }
 7980|      0|                days = iso_week_days((int)(tp->tm_yday + (int const)(365 + tmp___32)),
 7981|      0|                                     (int)tp->tm_wday);
 7982|      0|            }
 7983|      0|            else {
 7984|      0|                if (year___1 % 4 == 0) {
 7985|      0|                    if (year___1 % 100 != 0) {
 7986|      0|                        tmp___33 = 1;
 7987|      0|                    }
 7988|      0|                    else {
 7989|      0|                        if (year___1 % 400 == 0) {
 7990|      0|                            tmp___33 = 1;
 7991|      0|                        }
 7992|      0|                        else {
 7993|      0|                            tmp___33 = 0;
 7994|      0|                        }
 7995|      0|                    }
 7996|      0|                }
 7997|      0|                else {
 7998|      0|                    tmp___33 = 0;
 7999|      0|                }
 8000|      0|                tmp___34 = iso_week_days(
 8001|      0|                               (int)(tp->tm_yday - (int const)(365 + tmp___33)), (int)tp->tm_wday);
 8002|      0|                d___0 = tmp___34;
 8003|      0|                if (0 <= d___0) {
 8004|      0|                    year_adjust = 1;
 8005|      0|                    days = d___0;
 8006|      0|                }
 8007|      0|            }
 8008|      0|            if ((int const) * f == 103) {
 8009|      0|                goto case_103___0;
 8010|      0|            }
 8011|      0|            if ((int const) * f == 71) {
 8012|      0|                goto case_71___0;
 8013|      0|            }
 8014|      0|            goto switch_default___1;
 8015|      0|case_103___0:
 8016|      0|            yy = (int)((tp->tm_year % 100 + (int const)year_adjust) % 100);
 8017|      0|            digits = 2;
 8018|      0|            if (0 <= yy) {
 8019|      0|                number_value = yy;
 8020|      0|            }
 8021|      0|            else {
 8022|      0|                if (tp->tm_year < (int const)(-1900 - year_adjust)) {
 8023|      0|                    tmp___35 = -yy;
 8024|      0|                }
 8025|      0|                else {
 8026|      0|                    tmp___35 = yy + 100;
 8027|      0|                }
 8028|      0|                number_value = tmp___35;
 8029|      0|            }
 8030|      0|            goto do_number;
 8031|      0|case_71___0:
 8032|      0|            digits = 4;
 8033|      0|            negative_number = (_Bool)(tp->tm_year < (int const)(-1900 - year_adjust));
 8034|      0|            u_number_value =
 8035|      0|                ((unsigned int)tp->tm_year + 1900U) + (unsigned int)year_adjust;
 8036|      0|            goto do_signed_number;
 8037|      0|switch_default___1:
 8038|      0|            digits = 2;
 8039|      0|            number_value = days / 7 + 1;
 8040|      0|            goto do_number;
 8041|       |
 8042|      0|case_87:
 8043|      0|            if (modifier == 69) {
 8044|      0|                goto bad_format;
 8045|      0|            }
 8046|      0|            digits = 2;
 8047|      0|            number_value =
 8048|      0|                (int)(((tp->tm_yday - ((tp->tm_wday - 1) + 7) % 7) + 7) / 7);
 8049|      0|            goto do_number;
 8050|      0|case_119:
 8051|      0|            if (modifier == 69) {
 8052|      0|                goto bad_format;
 8053|      0|            }
 8054|      0|            digits = 1;
 8055|      0|            number_value = (int)tp->tm_wday;
 8056|      0|            goto do_number;
 8057|      4|case_89:
 8058|      4|            if (modifier == 69) {
 8059|      0|                goto underlying_strftime;
 8060|      0|            }
 8061|      4|            if (modifier == 79) {
 8062|      0|                goto bad_format;
 8063|      0|            }
 8064|      4|            else {
 8065|      4|                digits = 4;
 8066|      4|            }
 8067|      4|            negative_number = (_Bool)(tp->tm_year < -1900);
 8068|      4|            u_number_value = (unsigned int)tp->tm_year + 1900U;
 8069|      4|            goto do_signed_number;
 8070|      0|case_121:
 8071|      0|            if (modifier == 69) {
 8072|      0|                goto underlying_strftime;
 8073|      0|            }
 8074|      0|            yy___0 = (int)(tp->tm_year % 100);
 8075|      0|            if (yy___0 < 0) {
 8076|      0|                if (tp->tm_year < -1900) {
 8077|      0|                    yy___0 = -yy___0;
 8078|      0|                }
 8079|      0|                else {
 8080|      0|                    yy___0 += 100;
 8081|      0|                }
 8082|      0|            }
 8083|      0|            digits = 2;
 8084|      0|            number_value = yy___0;
 8085|      0|            goto do_number;
 8086|      0|case_90:
 8087|      0|            if (change_case) {
 8088|      0|                to_uppcase = (_Bool)0;
 8089|      0|                to_lowcase = (_Bool)1;
 8090|      0|            }
 8091|      0|            if (!zone) {
 8092|      0|                zone = "";
 8093|      0|            }
 8094|      0|            while (1) {
 8095|      0|                tmp___36 = strlen(zone);
 8096|      0|                _n___10 = tmp___36;
 8097|      0|                if (width < 0) {
 8098|      0|                    tmp___37 = 0;
 8099|      0|                }
 8100|      0|                else {
 8101|      0|                    tmp___37 = width;
 8102|      0|                }
 8103|      0|                _w___10 = (size_t)tmp___37;
 8104|      0|                if (_n___10 < _w___10) {
 8105|      0|                    tmp___38 = _w___10;
 8106|      0|                }
 8107|      0|                else {
 8108|      0|                    tmp___38 = _n___10;
 8109|      0|                }
 8110|      0|                _incr___10 = tmp___38;
 8111|      0|                if (_incr___10 >= maxsize - i) {
 8112|      0|                    return ((size_t)0);
 8113|      0|                }
 8114|      0|                if (p) {
 8115|      0|                    if (digits == 0) {
 8116|      0|                        if (_n___10 < _w___10) {
 8117|      0|                            _delta___10 = (size_t)width - _n___10;
 8118|      0|                            if (pad == 48) {
 8119|      0|                                while (1) {
 8120|      0|                                    _i___23 = (size_t)0;
 8121|      0|                                    while (1) {
 8122|       |
 8123|      0|                                        if (!(_i___23 < _delta___10)) {
 8124|      0|                                            goto while_break___68;
 8125|      0|                                        }
 8126|      0|                                        fputc('0', p);
 8127|      0|                                        _i___23++;
 8128|      0|                                    }
 8129|      0|while_break___68:
 8130|      0|                                    ;
 8131|      0|                                    goto while_break___67;
 8132|      0|                                }
 8133|      0|while_break___67:
 8134|      0|                                ;
 8135|      0|                            }
 8136|      0|                            else {
 8137|      0|                                while (1) {
 8138|      0|                                    _i___24 = (size_t)0;
 8139|      0|                                    while (1) {
 8140|       |
 8141|      0|                                        if (!(_i___24 < _delta___10)) {
 8142|      0|                                            goto while_break___70;
 8143|      0|                                        }
 8144|      0|                                        fputc(' ', p);
 8145|      0|                                        _i___24++;
 8146|      0|                                    }
 8147|      0|while_break___70:
 8148|      0|                                    ;
 8149|      0|                                    goto while_break___69;
 8150|      0|                                }
 8151|      0|while_break___69:
 8152|      0|                                ;
 8153|      0|                            }
 8154|      0|                        }
 8155|      0|                    }
 8156|      0|                    while (1) {
 8157|       |
 8158|      0|                        if (to_lowcase) {
 8159|      0|                            fwrite_lowcase(p, zone, _n___10);
 8160|      0|                        }
 8161|      0|                        else {
 8162|      0|                            if (to_uppcase) {
 8163|      0|                                fwrite_uppcase(p, zone, _n___10);
 8164|      0|                            }
 8165|      0|                            else {
 8166|      0|                                fwrite((void const *)zone, _n___10, (size_t)1, p);
 8167|      0|                            }
 8168|      0|                        }
 8169|      0|                        goto while_break___71;
 8170|      0|                    }
 8171|      0|while_break___71:
 8172|      0|                    ;
 8173|      0|                }
 8174|      0|                i += _incr___10;
 8175|      0|                goto while_break___66;
 8176|      0|            }
 8177|      0|while_break___66:
 8178|      0|            ;
 8179|      0|            goto switch_break___1;
 8180|      0|case_58:
 8181|      0|            colons = (size_t)1;
 8182|      0|            while (1) {
 8183|       |
 8184|      0|                if (!((int const) * (f + colons) == 58)) {
 8185|      0|                    goto while_break___72;
 8186|      0|                }
 8187|      0|                goto __Cont___0;
 8188|      0|__Cont___0:
 8189|      0|                colons++;
 8190|      0|            }
 8191|      0|while_break___72:
 8192|      0|            ;
 8193|      0|            if ((int const) * (f + colons) != 122) {
 8194|      0|                goto bad_format;
 8195|      0|            }
 8196|      0|            f += colons;
 8197|      0|            goto do_z_conversion;
 8198|      0|case_122:
 8199|      0|            colons = (size_t)0;
 8200|      0|do_z_conversion:
 8201|      0|            if (tp->tm_isdst < 0) {
 8202|      0|                goto switch_break___1;
 8203|      0|            }
 8204|      0|            diff = (int)tp->tm_gmtoff;
 8205|      0|            hour_diff = (diff / 60) / 60;
 8206|      0|            min_diff = (diff / 60) % 60;
 8207|      0|            sec_diff = diff % 60;
 8208|      0|            if (colons == 0UL) {
 8209|      0|                goto case_0;
 8210|      0|            }
 8211|      0|            if (colons == 1UL) {
 8212|      0|                goto tz_hh_mm;
 8213|      0|            }
 8214|      0|            if (colons == 2UL) {
 8215|      0|                goto tz_hh_mm_ss;
 8216|      0|            }
 8217|      0|            if (colons == 3UL) {
 8218|      0|                goto case_3;
 8219|      0|            }
 8220|      0|            goto switch_default___2;
 8221|      0|case_0:
 8222|      0|            digits = 5;
 8223|      0|            negative_number = (_Bool)(diff < 0);
 8224|      0|            tz_colon_mask = 0;
 8225|      0|            u_number_value = (unsigned int)(hour_diff * 100 + min_diff);
 8226|      0|            goto do_tz_offset;
 8227|      0|tz_hh_mm:
 8228|      0|            digits = 6;
 8229|      0|            negative_number = (_Bool)(diff < 0);
 8230|      0|            tz_colon_mask = 4;
 8231|      0|            u_number_value = (unsigned int)(hour_diff * 100 + min_diff);
 8232|      0|            goto do_tz_offset;
 8233|      0|tz_hh_mm_ss:
 8234|      0|            digits = 9;
 8235|      0|            negative_number = (_Bool)(diff < 0);
 8236|      0|            tz_colon_mask = 20;
 8237|      0|            u_number_value =
 8238|      0|                (unsigned int)((hour_diff * 10000 + min_diff * 100) + sec_diff);
 8239|      0|            goto do_tz_offset;
 8240|      0|case_3:
 8241|      0|            if (sec_diff != 0) {
 8242|      0|                goto tz_hh_mm_ss;
 8243|      0|            }
 8244|      0|            if (min_diff != 0) {
 8245|      0|                goto tz_hh_mm;
 8246|      0|            }
 8247|      0|            digits = 3;
 8248|      0|            negative_number = (_Bool)(diff < 0);
 8249|      0|            tz_colon_mask = 0;
 8250|      0|            u_number_value = (unsigned int)hour_diff;
 8251|      0|            goto do_tz_offset;
 8252|      0|switch_default___2:
 8253|      0|            goto bad_format;
 8254|       |
 8255|      0|case_0___0:
 8256|      0|            f--;
 8257|      0|bad_format:
 8258|      0|            flen = 1;
 8259|      0|            while (1) {
 8260|       |
 8261|      0|                if (!((int const) * (f + (1 - flen)) != 37)) {
 8262|      0|                    goto while_break___73;
 8263|      0|                }
 8264|      0|                goto __Cont___1;
 8265|      0|__Cont___1:
 8266|      0|                flen++;
 8267|      0|            }
 8268|      0|while_break___73:
 8269|      0|            ;
 8270|      0|            while (1) {
 8271|      0|                _n___11 = (size_t)flen;
 8272|      0|                if (width < 0) {
 8273|      0|                    tmp___39 = 0;
 8274|      0|                }
 8275|      0|                else {
 8276|      0|                    tmp___39 = width;
 8277|      0|                }
 8278|      0|                _w___11 = (size_t)tmp___39;
 8279|      0|                if (_n___11 < _w___11) {
 8280|      0|                    tmp___40 = _w___11;
 8281|      0|                }
 8282|      0|                else {
 8283|      0|                    tmp___40 = _n___11;
 8284|      0|                }
 8285|      0|                _incr___11 = tmp___40;
 8286|      0|                if (_incr___11 >= maxsize - i) {
 8287|      0|                    return ((size_t)0);
 8288|      0|                }
 8289|      0|                if (p) {
 8290|      0|                    if (digits == 0) {
 8291|      0|                        if (_n___11 < _w___11) {
 8292|      0|                            _delta___11 = (size_t)width - _n___11;
 8293|      0|                            if (pad == 48) {
 8294|      0|                                while (1) {
 8295|      0|                                    _i___25 = (size_t)0;
 8296|      0|                                    while (1) {
 8297|       |
 8298|      0|                                        if (!(_i___25 < _delta___11)) {
 8299|      0|                                            goto while_break___76;
 8300|      0|                                        }
 8301|      0|                                        fputc('0', p);
 8302|      0|                                        _i___25++;
 8303|      0|                                    }
 8304|      0|while_break___76:
 8305|      0|                                    ;
 8306|      0|                                    goto while_break___75;
 8307|      0|                                }
 8308|      0|while_break___75:
 8309|      0|                                ;
 8310|      0|                            }
 8311|      0|                            else {
 8312|      0|                                while (1) {
 8313|      0|                                    _i___26 = (size_t)0;
 8314|      0|                                    while (1) {
 8315|       |
 8316|      0|                                        if (!(_i___26 < _delta___11)) {
 8317|      0|                                            goto while_break___78;
 8318|      0|                                        }
 8319|      0|                                        fputc(' ', p);
 8320|      0|                                        _i___26++;
 8321|      0|                                    }
 8322|      0|while_break___78:
 8323|      0|                                    ;
 8324|      0|                                    goto while_break___77;
 8325|      0|                                }
 8326|      0|while_break___77:
 8327|      0|                                ;
 8328|      0|                            }
 8329|      0|                        }
 8330|      0|                    }
 8331|      0|                    while (1) {
 8332|       |
 8333|      0|                        if (to_lowcase) {
 8334|      0|                            fwrite_lowcase(p, f + (1 - flen), _n___11);
 8335|      0|                        }
 8336|      0|                        else {
 8337|      0|                            if (to_uppcase) {
 8338|      0|                                fwrite_uppcase(p, f + (1 - flen), _n___11);
 8339|      0|                            }
 8340|      0|                            else {
 8341|      0|                                fwrite((void const *)(f + (1 - flen)), _n___11, (size_t)1, p);
 8342|      0|                            }
 8343|      0|                        }
 8344|      0|                        goto while_break___79;
 8345|      0|                    }
 8346|      0|while_break___79:
 8347|      0|                    ;
 8348|      0|                }
 8349|      0|                i += _incr___11;
 8350|      0|                goto while_break___74;
 8351|      0|            }
 8352|      0|while_break___74:
 8353|      0|            ;
 8354|      0|            goto switch_break___1;
 8355|     16|switch_break___1:
 8356|     16|            ;
 8357|     26|__Cont:
 8358|     26|            f++;
 8359|     26|        }
 8360|      6|while_break:
 8361|      6|        ;
 8362|      6|        return (i);
 8363|      6|    }
 8364|      6|}
 8365|       |size_t fprintftime(FILE *s, char const *format, struct tm const *tp, int ut,
 8366|       |                   int ns)
 8367|      6|{
 8368|      6|    size_t tmp;
 8369|       |
 8370|      6|    {
 8371|      6|        tmp = strftime_case____0((_Bool)0, s, format, tp, ut, ns);
 8372|      6|        return (tmp);
 8373|      6|    }
 8374|      6|}
 8375|       |#pragma GCC diagnostic push
 8376|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8377|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8378|       |#pragma GCC diagnostic pop
 8379|       |#pragma GCC diagnostic push
 8380|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8381|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8382|       |#pragma GCC diagnostic push
 8383|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8384|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8385|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=const"
 8386|       |#pragma GCC diagnostic push
 8387|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8388|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8389|       |#pragma GCC diagnostic pop
 8390|       |extern int fflush(FILE *__stream);
 8391|       |int rpl_fflush(FILE *stream);
 8392|       |#pragma GCC diagnostic push
 8393|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8394|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8395|       |#pragma GCC diagnostic pop
 8396|       |extern __attribute__((__nothrow__)) int(__attribute__((__leaf__)) __freading)(
 8397|       |    FILE *__fp);
 8398|       |static void clear_ungetc_buffer_preserving_position(FILE *fp)
 8399|      0|{
 8400|       |
 8401|      0|    {
 8402|      0|        if (fp->_flags & 256) {
 8403|      0|            rpl_fseeko(fp, (off_t)0, 1);
 8404|      0|        }
 8405|      0|        return;
 8406|      0|    }
 8407|      0|}
 8408|       |int rpl_fflush(FILE *stream)
 8409|     12|{
 8410|     12|    int tmp;
 8411|     12|    int tmp___0;
 8412|     12|    int tmp___1;
 8413|       |
 8414|     12|    {
 8415|     12|        if ((unsigned long)stream == (unsigned long)((void *)0)) {
 8416|      0|            tmp = fflush(stream);
 8417|      0|            return (tmp);
 8418|      0|        }
 8419|     12|        else {
 8420|     12|            tmp___0 = __freading(stream);
 8421|     12|            if (!(tmp___0 != 0)) {
 8422|     12|                tmp = fflush(stream);
 8423|     12|                return (tmp);
 8424|     12|            }
 8425|     12|        }
 8426|      0|        clear_ungetc_buffer_preserving_position(stream);
 8427|      0|        tmp___1 = fflush(stream);
 8428|      0|        return (tmp___1);
 8429|     12|    }
 8430|     12|}
 8431|       |#pragma GCC diagnostic push
 8432|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8433|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8434|       |#pragma GCC diagnostic pop
 8435|       |#pragma GCC diagnostic push
 8436|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8437|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8438|       |#pragma GCC diagnostic pop
 8439|       |#pragma GCC diagnostic push
 8440|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8441|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8442|       |#pragma GCC diagnostic pop
 8443|       |#pragma GCC diagnostic push
 8444|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8445|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8446|       |#pragma GCC diagnostic pop
 8447|       |#pragma GCC diagnostic push
 8448|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8449|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8450|       |#pragma GCC diagnostic pop
 8451|       |extern int fclose(FILE *__stream);
 8452|       |#pragma GCC diagnostic push
 8453|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8454|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8455|       |#pragma GCC diagnostic pop
 8456|       |int(__attribute__((__nonnull__(1))) rpl_fclose)(FILE *fp)
 8457|     12|{
 8458|     12|    int saved_errno;
 8459|     12|    int fd;
 8460|     12|    int result;
 8461|     12|    int tmp;
 8462|     12|    int *tmp___0;
 8463|     12|    int tmp___1;
 8464|     12|    int tmp___2;
 8465|     12|    __off_t tmp___3;
 8466|     12|    int tmp___4;
 8467|     12|    int *tmp___5;
 8468|       |
 8469|     12|    {
 8470|     12|        saved_errno = 0;
 8471|     12|        result = 0;
 8472|     12|        fd = fileno(fp);
 8473|     12|        if (fd < 0) {
 8474|      0|            tmp = fclose(fp);
 8475|      0|            return (tmp);
 8476|      0|        }
 8477|     12|        tmp___1 = __freading(fp);
 8478|     12|        if (tmp___1 != 0) {
 8479|      0|            tmp___2 = fileno(fp);
 8480|      0|            tmp___3 = lseek(tmp___2, (__off_t)0, 1);
 8481|      0|            if (tmp___3 != -1L) {
 8482|     12|_L:
 8483|     12|                tmp___4 = rpl_fflush(fp);
 8484|     12|                if (tmp___4) {
 8485|      0|                    tmp___0 = __errno_location();
 8486|      0|                    saved_errno = *tmp___0;
 8487|      0|                }
 8488|     12|            }
 8489|      0|        }
 8490|     12|        else {
 8491|     12|            goto _L;
 8492|     12|        }
 8493|     12|        result = fclose(fp);
 8494|     12|        if (saved_errno != 0) {
 8495|      0|            tmp___5 = __errno_location();
 8496|      0|            *tmp___5 = saved_errno;
 8497|      0|            result = -1;
 8498|      0|        }
 8499|     12|        return (result);
 8500|     12|    }
 8501|     12|}
 8502|       |#pragma GCC diagnostic push
 8503|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8504|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8505|       |#pragma GCC diagnostic pop
 8506|       |#pragma GCC diagnostic push
 8507|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8508|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8509|       |#pragma GCC diagnostic pop
 8510|       |#pragma GCC diagnostic push
 8511|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8512|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8513|       |int volatile exit_failure = (int volatile)1;
 8514|       |#pragma GCC diagnostic push
 8515|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8516|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8517|       |#pragma GCC diagnostic pop
 8518|       |#pragma GCC diagnostic push
 8519|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8520|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8521|       |#pragma GCC diagnostic pop
 8522|       |#pragma GCC diagnostic push
 8523|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8524|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8525|       |#pragma GCC diagnostic pop
 8526|       |#pragma GCC diagnostic push
 8527|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8528|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8529|       |#pragma GCC diagnostic push
 8530|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8531|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8532|       |#pragma GCC diagnostic pop
 8533|       |#pragma GCC diagnostic push
 8534|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8535|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8536|       |#pragma GCC diagnostic pop
 8537|       |#pragma GCC diagnostic push
 8538|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8539|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8540|       |#pragma GCC diagnostic pop
 8541|       |#pragma GCC diagnostic push
 8542|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8543|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8544|       |#pragma GCC diagnostic push
 8545|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8546|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8547|       |#pragma GCC diagnostic pop
 8548|       |char const diacrit_base[256];
 8549|       |char const diacrit_diac[256];
 8550|       |char const diacrit_base[256] = {
 8551|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8552|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8553|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8554|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8555|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8556|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8557|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8558|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8559|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8560|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8561|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8562|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8563|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8564|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8565|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8566|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8567|       |    (char const)0,   (char const)'A', (char const)'B', (char const)'C',
 8568|       |    (char const)'D', (char const)'E', (char const)'F', (char const)'G',
 8569|       |    (char const)'H', (char const)'I', (char const)'J', (char const)'K',
 8570|       |    (char const)'L', (char const)'M', (char const)'N', (char const)'O',
 8571|       |    (char const)'P', (char const)'Q', (char const)'R', (char const)'S',
 8572|       |    (char const)'T', (char const)'U', (char const)'V', (char const)'W',
 8573|       |    (char const)'X', (char const)'Y', (char const)'Z', (char const)0,
 8574|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8575|       |    (char const)0,   (char const)'a', (char const)'b', (char const)'c',
 8576|       |    (char const)'d', (char const)'e', (char const)'f', (char const)'g',
 8577|       |    (char const)'h', (char const)'i', (char const)'j', (char const)'k',
 8578|       |    (char const)'l', (char const)'m', (char const)'n', (char const)'o',
 8579|       |    (char const)'p', (char const)'q', (char const)'r', (char const)'s',
 8580|       |    (char const)'t', (char const)'u', (char const)'v', (char const)'w',
 8581|       |    (char const)'x', (char const)'y', (char const)'z', (char const)0,
 8582|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8583|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8584|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8585|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8586|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8587|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8588|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8589|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8590|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8591|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8592|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8593|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8594|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8595|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8596|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8597|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8598|       |    (char const)0,   (char const)0,   (char const)0,   (char const)0,
 8599|       |    (char const)'A', (char const)'A', (char const)'A', (char const)'A',
 8600|       |    (char const)'A', (char const)'A', (char const)'A', (char const)'C',
 8601|       |    (char const)'E', (char const)'E', (char const)'E', (char const)'E',
 8602|       |    (char const)'I', (char const)'I', (char const)'I', (char const)'I',
 8603|       |    (char const)0,   (char const)'N', (char const)'O', (char const)'O',
 8604|       |    (char const)'O', (char const)'O', (char const)'O', (char const)0,
 8605|       |    (char const)'O', (char const)'U', (char const)'U', (char const)'U',
 8606|       |    (char const)'U', (char const)'Y', (char const)0,   (char const)0,
 8607|       |    (char const)'a', (char const)'a', (char const)'a', (char const)'a',
 8608|       |    (char const)'a', (char const)'a', (char const)'a', (char const)'c',
 8609|       |    (char const)'e', (char const)'e', (char const)'e', (char const)'e',
 8610|       |    (char const)'i', (char const)'i', (char const)'i', (char const)'i',
 8611|       |    (char const)0,   (char const)'n', (char const)'o', (char const)'o',
 8612|       |    (char const)'o', (char const)'o', (char const)'o', (char const)0,
 8613|       |    (char const)'o', (char const)'u', (char const)'u', (char const)'u',
 8614|       |    (char const)'u', (char const)'y', (char const)0,   (char const)'y'
 8615|       |};
 8616|       |char const diacrit_diac[256] = {
 8617|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8618|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8619|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8620|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8621|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8622|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8623|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8624|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8625|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8626|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8627|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8628|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8629|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8630|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8631|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8632|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8633|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8634|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8635|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)4,
 8636|       |    (char const)0, (char const)3, (char const)0, (char const)0, (char const)0,
 8637|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8638|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8639|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8640|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8641|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8642|       |    (char const)0, (char const)6, (char const)0, (char const)0, (char const)0,
 8643|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8644|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8645|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8646|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8647|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8648|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8649|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8650|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8651|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8652|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8653|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8654|       |    (char const)0, (char const)0, (char const)0, (char const)0, (char const)0,
 8655|       |    (char const)0, (char const)0, (char const)3, (char const)2, (char const)4,
 8656|       |    (char const)6, (char const)5, (char const)8, (char const)1, (char const)7,
 8657|       |    (char const)3, (char const)2, (char const)4, (char const)5, (char const)3,
 8658|       |    (char const)2, (char const)4, (char const)5, (char const)0, (char const)6,
 8659|       |    (char const)3, (char const)2, (char const)4, (char const)6, (char const)5,
 8660|       |    (char const)0, (char const)9, (char const)3, (char const)2, (char const)4,
 8661|       |    (char const)5, (char const)2, (char const)0, (char const)0, (char const)3,
 8662|       |    (char const)2, (char const)4, (char const)6, (char const)5, (char const)8,
 8663|       |    (char const)1, (char const)7, (char const)3, (char const)2, (char const)4,
 8664|       |    (char const)5, (char const)3, (char const)2, (char const)4, (char const)5,
 8665|       |    (char const)0, (char const)6, (char const)3, (char const)2, (char const)4,
 8666|       |    (char const)6, (char const)5, (char const)0, (char const)9, (char const)3,
 8667|       |    (char const)2, (char const)4, (char const)5, (char const)2, (char const)0,
 8668|       |    (char const)0
 8669|       |};
 8670|       |#pragma GCC diagnostic push
 8671|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8672|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8673|       |#pragma GCC diagnostic pop
 8674|       |void close_stdout(void);
 8675|       |#pragma GCC diagnostic push
 8676|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8677|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8678|       |#pragma GCC diagnostic pop
 8679|       |int close_stream(FILE *stream);
 8680|       |static char const *file_name;
 8681|       |static _Bool ignore_EPIPE;
 8682|       |void close_stdout(void)
 8683|      6|{
 8684|      6|    char const *write_error;
 8685|      6|    char const *tmp;
 8686|      6|    char *tmp___0;
 8687|      6|    int *tmp___1;
 8688|      6|    int *tmp___2;
 8689|      6|    int tmp___3;
 8690|      6|    int *tmp___4;
 8691|      6|    int tmp___5;
 8692|       |
 8693|      6|    {
 8694|      6|        tmp___3 = close_stream(stdout);
 8695|      6|        if (tmp___3 != 0) {
 8696|      0|            if (ignore_EPIPE) {
 8697|      0|                tmp___4 = __errno_location();
 8698|      0|                if (!(*tmp___4 == 32)) {
 8699|      0|                    goto _L;
 8700|      0|                }
 8701|      0|            }
 8702|      0|            else {
 8703|      0|_L:
 8704|      0|                tmp = (char const *)gettext("write error");
 8705|      0|                write_error = tmp;
 8706|      0|                if (file_name) {
 8707|      0|                    tmp___0 = quotearg_colon(file_name);
 8708|      0|                    tmp___1 = __errno_location();
 8709|      0|                    error(0, *tmp___1, "%s: %s", tmp___0, write_error);
 8710|      0|                }
 8711|      0|                else {
 8712|      0|                    tmp___2 = __errno_location();
 8713|      0|                    error(0, *tmp___2, "%s", write_error);
 8714|      0|                }
 8715|      0|                _exit((int)exit_failure);
 8716|      0|            }
 8717|      0|        }
 8718|      6|        tmp___5 = close_stream(stderr);
 8719|      6|        if (tmp___5 != 0) {
 8720|      0|            _exit((int)exit_failure);
 8721|      0|        }
 8722|      6|        return;
 8723|      6|    }
 8724|      6|}
 8725|       |#pragma GCC diagnostic push
 8726|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8727|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8728|       |#pragma GCC diagnostic pop
 8729|       |extern __attribute__((__nothrow__))
 8730|       |size_t(__attribute__((__leaf__)) __fpending)(FILE *__fp);
 8731|       |int close_stream(FILE *stream)
 8732|     12|{
 8733|     12|    _Bool some_pending;
 8734|     12|    size_t tmp;
 8735|     12|    _Bool prev_fail;
 8736|     12|    int tmp___0;
 8737|     12|    _Bool fclose_fail;
 8738|     12|    int tmp___1;
 8739|     12|    int *tmp___2;
 8740|     12|    int *tmp___3;
 8741|       |
 8742|     12|    {
 8743|     12|        tmp = __fpending(stream);
 8744|     12|        some_pending = (_Bool)(tmp != 0UL);
 8745|     12|        tmp___0 = ferror_unlocked(stream);
 8746|     12|        prev_fail = (_Bool)(tmp___0 != 0);
 8747|     12|        tmp___1 = rpl_fclose(stream);
 8748|     12|        fclose_fail = (_Bool)(tmp___1 != 0);
 8749|     12|        if (prev_fail) {
 8750|      0|            goto _L___0;
 8751|      0|        }
 8752|     12|        else {
 8753|     12|            if (fclose_fail) {
 8754|      0|                if (some_pending) {
 8755|      0|                    goto _L___0;
 8756|      0|                }
 8757|      0|                else {
 8758|      0|                    tmp___3 = __errno_location();
 8759|      0|                    if (*tmp___3 != 9) {
 8760|      0|_L___0:
 8761|      0|                        if (!fclose_fail) {
 8762|      0|                            tmp___2 = __errno_location();
 8763|      0|                            *tmp___2 = 0;
 8764|      0|                        }
 8765|      0|                        return (-1);
 8766|      0|                    }
 8767|      0|                }
 8768|      0|            }
 8769|     12|        }
 8770|     12|        return (0);
 8771|     12|    }
 8772|     12|}
 8773|       |#pragma GCC diagnostic push
 8774|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8775|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8776|       |#pragma GCC diagnostic push
 8777|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8778|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8779|       |#pragma GCC diagnostic pop
 8780|       |#pragma GCC diagnostic push
 8781|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8782|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8783|       |#pragma GCC diagnostic push
 8784|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8785|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8786|       |#pragma GCC diagnostic push
 8787|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8788|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8789|       |#pragma GCC diagnostic push
 8790|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8791|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8792|       |#pragma GCC diagnostic pop
 8793|       |#pragma GCC diagnostic push
 8794|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8795|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8796|       |#pragma GCC diagnostic push
 8797|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8798|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8799|       |#pragma GCC diagnostic pop
 8800|       |#pragma GCC diagnostic push
 8801|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8802|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8803|       |#pragma GCC diagnostic pop
 8804|       |#pragma GCC diagnostic push
 8805|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8806|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8807|       |#pragma GCC diagnostic push
 8808|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8809|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8810|       |#pragma GCC diagnostic pop
 8811|       |#pragma GCC diagnostic push
 8812|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8813|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8814|       |#pragma GCC diagnostic push
 8815|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8816|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8817|       |#pragma GCC diagnostic push
 8818|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8819|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8820|       |#pragma GCC diagnostic pop
 8821|       |#pragma GCC diagnostic push
 8822|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8823|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8824|       |#pragma GCC diagnostic push
 8825|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8826|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8827|       |#pragma GCC diagnostic push
 8828|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8829|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8830|       |#pragma GCC diagnostic push
 8831|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8832|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8833|       |#pragma GCC diagnostic pop
 8834|       |#pragma GCC diagnostic push
 8835|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8836|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8837|       |#pragma GCC diagnostic pop
 8838|       |#pragma GCC diagnostic push
 8839|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8840|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8841|       |#pragma GCC diagnostic pop
 8842|       |#pragma GCC diagnostic push
 8843|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8844|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8845|       |#pragma GCC diagnostic pop
 8846|       |#pragma GCC diagnostic push
 8847|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8848|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8849|       |#pragma GCC diagnostic push
 8850|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8851|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8852|       |#pragma GCC diagnostic pop
 8853|       |#pragma GCC diagnostic push
 8854|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8855|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8856|       |#pragma GCC diagnostic pop
 8857|       |#pragma GCC diagnostic push
 8858|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8859|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8860|       |#pragma GCC diagnostic pop
 8861|       |#pragma GCC diagnostic push
 8862|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8863|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8864|       |#pragma GCC diagnostic pop
 8865|       |#pragma GCC diagnostic push
 8866|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8867|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8868|       |#pragma GCC diagnostic pop
 8869|       |#pragma GCC diagnostic push
 8870|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8871|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8872|       |#pragma GCC diagnostic pop
 8873|       |#pragma GCC diagnostic push
 8874|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8875|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8876|       |#pragma GCC diagnostic pop
 8877|       |#pragma GCC diagnostic push
 8878|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8879|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8880|       |#pragma GCC diagnostic pop
 8881|       |#pragma GCC diagnostic push
 8882|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8883|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8884|       |#pragma GCC diagnostic pop
 8885|       |#pragma GCC diagnostic push
 8886|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8887|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8888|       |#pragma GCC diagnostic pop
 8889|       |#pragma GCC diagnostic push
 8890|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8891|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8892|       |#pragma GCC diagnostic pop
 8893|       |#pragma GCC diagnostic push
 8894|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8895|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8896|       |#pragma GCC diagnostic pop
 8897|       |#pragma GCC diagnostic push
 8898|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8899|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8900|       |#pragma GCC diagnostic pop
 8901|       |#pragma GCC diagnostic push
 8902|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8903|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8904|       |#pragma GCC diagnostic pop
 8905|       |#pragma GCC diagnostic push
 8906|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8907|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8908|       |#pragma GCC diagnostic pop
 8909|       |#pragma GCC diagnostic push
 8910|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8911|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8912|       |#pragma GCC diagnostic pop
 8913|       |#pragma GCC diagnostic push
 8914|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8915|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8916|       |#pragma GCC diagnostic pop
 8917|       |#pragma GCC diagnostic push
 8918|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8919|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8920|       |#pragma GCC diagnostic push
 8921|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8922|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8923|       |#pragma GCC diagnostic pop
 8924|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 8925|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 8926|       |#pragma GCC diagnostic push
 8927|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8928|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8929|       |#pragma GCC diagnostic pop
 8930|       |#pragma GCC diagnostic push
 8931|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8932|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8933|       |#pragma GCC diagnostic pop
 8934|       |#pragma GCC diagnostic push
 8935|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8936|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8937|       |#pragma GCC diagnostic pop
 8938|       |#pragma GCC diagnostic push
 8939|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8940|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8941|       |#pragma GCC diagnostic pop
 8942|       |#pragma GCC diagnostic push
 8943|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8944|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8945|       |#pragma GCC diagnostic pop
 8946|       |#pragma GCC diagnostic push
 8947|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8948|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8949|       |#pragma GCC diagnostic pop
 8950|       |#pragma GCC diagnostic push
 8951|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8952|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8953|       |#pragma weak pthread_key_create
 8954|       |#pragma weak pthread_getspecific
 8955|       |#pragma weak pthread_setspecific
 8956|       |#pragma weak pthread_key_delete
 8957|       |#pragma weak pthread_self
 8958|       |#pragma weak pthread_cancel
 8959|       |#pragma GCC diagnostic push
 8960|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8961|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8962|       |#pragma GCC diagnostic pop
 8963|       |#pragma GCC diagnostic push
 8964|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8965|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8966|       |#pragma GCC diagnostic pop
 8967|       |#pragma GCC diagnostic push
 8968|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8969|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8970|       |#pragma GCC diagnostic pop
 8971|       |#pragma GCC diagnostic push
 8972|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8973|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8974|       |#pragma GCC diagnostic pop
 8975|       |#pragma GCC diagnostic push
 8976|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8977|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8978|       |#pragma GCC diagnostic pop
 8979|       |#pragma GCC diagnostic push
 8980|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8981|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8982|       |#pragma GCC diagnostic pop
 8983|       |#pragma GCC diagnostic push
 8984|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8985|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8986|       |#pragma GCC diagnostic pop
 8987|       |#pragma GCC diagnostic push
 8988|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8989|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8990|       |#pragma GCC diagnostic pop
 8991|       |#pragma GCC diagnostic push
 8992|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8993|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8994|       |#pragma GCC diagnostic pop
 8995|       |#pragma GCC diagnostic push
 8996|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 8997|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 8998|       |#pragma GCC diagnostic pop
 8999|       |#pragma GCC diagnostic push
 9000|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9001|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9002|       |#pragma GCC diagnostic pop
 9003|       |#pragma GCC diagnostic push
 9004|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9005|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9006|       |#pragma GCC diagnostic pop
 9007|       |#pragma GCC diagnostic push
 9008|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9009|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9010|       |#pragma GCC diagnostic pop
 9011|       |#pragma GCC diagnostic push
 9012|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9013|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9014|       |#pragma GCC diagnostic push
 9015|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9016|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9017|       |#pragma GCC diagnostic push
 9018|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9019|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9020|       |#pragma GCC diagnostic pop
 9021|       |#pragma GCC diagnostic push
 9022|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9023|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9024|       |#pragma GCC diagnostic pop
 9025|       |#pragma GCC diagnostic push
 9026|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9027|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9028|       |#pragma GCC diagnostic pop
 9029|       |#pragma GCC diagnostic push
 9030|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9031|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9032|       |#pragma GCC diagnostic push
 9033|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9034|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9035|       |#pragma GCC diagnostic push
 9036|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9037|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9038|       |#pragma GCC diagnostic pop
 9039|       |#pragma GCC diagnostic push
 9040|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9041|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9042|       |#pragma GCC diagnostic pop
 9043|       |#pragma GCC diagnostic push
 9044|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9045|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9046|       |#pragma GCC diagnostic pop
 9047|       |#pragma GCC diagnostic push
 9048|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9049|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9050|       |#pragma GCC diagnostic push
 9051|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9052|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9053|       |#pragma GCC diagnostic pop
 9054|       |#pragma GCC diagnostic push
 9055|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9056|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9057|       |#pragma GCC diagnostic pop
 9058|       |#pragma GCC diagnostic push
 9059|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9060|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9061|       |#pragma GCC diagnostic pop
 9062|       |#pragma GCC diagnostic push
 9063|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9064|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9065|       |#pragma GCC diagnostic pop
 9066|       |#pragma GCC diagnostic push
 9067|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9068|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9069|       |#pragma GCC diagnostic pop
 9070|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=pure"
 9071|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 9072|       |#pragma GCC diagnostic push
 9073|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9074|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9075|       |#pragma GCC diagnostic pop
 9076|       |#pragma GCC diagnostic push
 9077|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9078|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9079|       |#pragma GCC diagnostic push
 9080|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9081|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9082|       |#pragma GCC diagnostic push
 9083|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9084|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9085|       |#pragma GCC diagnostic pop
 9086|       |#pragma GCC diagnostic push
 9087|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9088|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9089|       |#pragma GCC diagnostic push
 9090|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9091|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9092|       |#pragma GCC diagnostic push
 9093|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9094|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9095|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=pure"
 9096|       |#pragma GCC diagnostic push
 9097|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9098|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9099|       |#pragma GCC diagnostic push
 9100|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9101|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9102|       |#pragma GCC diagnostic pop
 9103|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=const"
 9104|       |#pragma GCC diagnostic push
 9105|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9106|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9107|       |#pragma GCC diagnostic pop
 9108|       |#pragma GCC diagnostic push
 9109|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9110|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9111|       |#pragma GCC diagnostic pop
 9112|       |#pragma GCC diagnostic push
 9113|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9114|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9115|       |#pragma GCC diagnostic pop
 9116|       |#pragma GCC diagnostic push
 9117|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9118|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9119|       |#pragma GCC diagnostic push
 9120|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9121|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9122|       |#pragma GCC diagnostic pop
 9123|       |#pragma GCC diagnostic push
 9124|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9125|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9126|       |#pragma GCC diagnostic pop
 9127|       |#pragma GCC diagnostic push
 9128|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9129|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9130|       |#pragma GCC diagnostic pop
 9131|       |#pragma GCC diagnostic push
 9132|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9133|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9134|       |#pragma GCC diagnostic pop
 9135|       |#pragma GCC diagnostic push
 9136|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9137|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9138|       |#pragma GCC diagnostic push
 9139|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9140|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9141|       |#pragma GCC diagnostic pop
 9142|       |#pragma GCC diagnostic push
 9143|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9144|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9145|       |#pragma GCC diagnostic pop
 9146|       |#pragma GCC diagnostic push
 9147|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9148|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9149|       |#pragma GCC diagnostic pop
 9150|       |#pragma GCC diagnostic push
 9151|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9152|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9153|       |#pragma GCC diagnostic pop
 9154|       |#pragma GCC diagnostic push
 9155|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9156|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9157|       |#pragma GCC diagnostic pop
 9158|       |#pragma GCC diagnostic push
 9159|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9160|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9161|       |#pragma GCC diagnostic pop
 9162|       |#pragma GCC diagnostic push
 9163|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9164|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9165|       |#pragma GCC diagnostic pop
 9166|       |#pragma GCC diagnostic push
 9167|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9168|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9169|       |#pragma GCC diagnostic pop
 9170|       |#pragma GCC diagnostic push
 9171|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9172|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9173|       |#pragma GCC diagnostic push
 9174|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9175|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9176|       |#pragma GCC diagnostic pop
 9177|       |#pragma GCC diagnostic push
 9178|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9179|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9180|       |#pragma GCC diagnostic pop
 9181|       |#pragma GCC diagnostic push
 9182|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9183|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9184|       |#pragma GCC diagnostic pop
 9185|       |#pragma GCC diagnostic push
 9186|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9187|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9188|       |#pragma GCC diagnostic pop
 9189|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 9190|       |#pragma GCC diagnostic push
 9191|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9192|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9193|       |#pragma GCC diagnostic pop
 9194|       |#pragma GCC diagnostic push
 9195|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9196|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9197|       |#pragma GCC diagnostic pop
 9198|       |#pragma GCC diagnostic push
 9199|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9200|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9201|       |#pragma GCC diagnostic pop
 9202|       |#pragma GCC diagnostic push
 9203|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9204|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9205|       |#pragma GCC diagnostic pop
 9206|       |#pragma GCC diagnostic push
 9207|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9208|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9209|       |#pragma GCC diagnostic push
 9210|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9211|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9212|       |#pragma GCC diagnostic pop
 9213|       |#pragma GCC diagnostic push
 9214|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9215|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9216|       |#pragma GCC diagnostic push
 9217|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9218|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9219|       |#pragma GCC diagnostic pop
 9220|       |#pragma GCC diagnostic push
 9221|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9222|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9223|       |#pragma GCC diagnostic pop
 9224|       |#pragma GCC diagnostic push
 9225|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9226|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9227|       |#pragma GCC diagnostic pop
 9228|       |#pragma GCC diagnostic push
 9229|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9230|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9231|       |#pragma GCC diagnostic pop
 9232|       |#pragma GCC diagnostic push
 9233|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9234|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9235|       |#pragma GCC diagnostic pop
 9236|       |#pragma GCC diagnostic push
 9237|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9238|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9239|       |#pragma GCC diagnostic pop
 9240|       |#pragma GCC diagnostic push
 9241|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9242|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9243|       |#pragma GCC diagnostic pop
 9244|       |#pragma GCC diagnostic push
 9245|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9246|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9247|       |#pragma GCC diagnostic pop
 9248|       |#pragma GCC diagnostic push
 9249|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9250|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9251|       |#pragma GCC diagnostic pop
 9252|       |#pragma GCC diagnostic push
 9253|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9254|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9255|       |#pragma GCC diagnostic pop
 9256|       |#pragma GCC diagnostic push
 9257|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9258|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9259|       |#pragma GCC diagnostic pop
 9260|       |#pragma GCC diagnostic push
 9261|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9262|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9263|       |#pragma GCC diagnostic pop
 9264|       |#pragma GCC diagnostic push
 9265|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9266|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9267|       |#pragma GCC diagnostic pop
 9268|       |#pragma GCC diagnostic push
 9269|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9270|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9271|       |#pragma GCC diagnostic pop
 9272|       |#pragma GCC diagnostic push
 9273|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9274|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9275|       |#pragma GCC diagnostic pop
 9276|       |#pragma GCC diagnostic push
 9277|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9278|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9279|       |#pragma GCC diagnostic pop
 9280|       |#pragma GCC diagnostic push
 9281|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9282|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9283|       |#pragma GCC diagnostic pop
 9284|       |#pragma GCC diagnostic push
 9285|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9286|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9287|       |#pragma GCC diagnostic pop
 9288|       |#pragma GCC diagnostic push
 9289|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9290|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9291|       |#pragma GCC diagnostic pop
 9292|       |#pragma GCC diagnostic push
 9293|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9294|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9295|       |#pragma GCC diagnostic pop
 9296|       |#pragma GCC diagnostic push
 9297|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9298|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9299|       |#pragma GCC diagnostic pop
 9300|       |#pragma GCC diagnostic push
 9301|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9302|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9303|       |#pragma GCC diagnostic pop
 9304|       |#pragma GCC diagnostic push
 9305|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9306|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9307|       |#pragma GCC diagnostic pop
 9308|       |#pragma GCC diagnostic push
 9309|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9310|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9311|       |#pragma GCC diagnostic pop
 9312|       |#pragma GCC diagnostic push
 9313|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9314|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9315|       |#pragma GCC diagnostic pop
 9316|       |#pragma weak pthread_mutex_init
 9317|       |#pragma weak pthread_mutex_lock
 9318|       |#pragma weak pthread_mutex_unlock
 9319|       |#pragma weak pthread_mutex_destroy
 9320|       |#pragma weak pthread_rwlock_init
 9321|       |#pragma weak pthread_rwlock_rdlock
 9322|       |#pragma weak pthread_rwlock_wrlock
 9323|       |#pragma weak pthread_rwlock_unlock
 9324|       |#pragma weak pthread_rwlock_destroy
 9325|       |#pragma weak pthread_once
 9326|       |#pragma weak pthread_cond_init
 9327|       |#pragma weak pthread_cond_wait
 9328|       |#pragma weak pthread_cond_signal
 9329|       |#pragma weak pthread_cond_broadcast
 9330|       |#pragma weak pthread_cond_destroy
 9331|       |#pragma weak pthread_mutexattr_init
 9332|       |#pragma weak pthread_mutexattr_settype
 9333|       |#pragma weak pthread_mutexattr_destroy
 9334|       |#pragma weak pthread_self
 9335|       |#pragma weak pthread_cancel
 9336|       |#pragma GCC diagnostic push
 9337|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9338|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9339|       |#pragma GCC diagnostic pop
 9340|       |#pragma GCC diagnostic push
 9341|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9342|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9343|       |#pragma GCC diagnostic pop
 9344|       |#pragma GCC diagnostic push
 9345|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9346|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9347|       |#pragma GCC diagnostic push
 9348|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9349|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9350|       |#pragma GCC diagnostic pop
 9351|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 9352|       |#pragma GCC diagnostic ignored "-Wtype-limits"
 9353|       |#pragma GCC diagnostic push
 9354|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9355|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9356|       |#pragma GCC diagnostic pop
 9357|       |#pragma GCC diagnostic push
 9358|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9359|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9360|       |#pragma GCC diagnostic push
 9361|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9362|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9363|       |#pragma GCC diagnostic pop
 9364|       |#pragma GCC diagnostic push
 9365|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9366|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9367|       |#pragma GCC diagnostic push
 9368|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9369|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9370|       |#pragma GCC diagnostic pop
 9371|       |#pragma GCC diagnostic push
 9372|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9373|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9374|       |#pragma GCC diagnostic pop
 9375|       |#pragma GCC diagnostic push
 9376|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9377|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9378|       |#pragma GCC diagnostic pop
 9379|       |#pragma GCC diagnostic push
 9380|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9381|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9382|       |#pragma GCC diagnostic pop
 9383|       |#pragma GCC diagnostic push
 9384|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9385|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9386|       |#pragma GCC diagnostic push
 9387|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9388|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9389|       |#pragma GCC diagnostic pop
 9390|       |#pragma GCC diagnostic push
 9391|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9392|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9393|       |#pragma GCC diagnostic pop
 9394|       |#pragma GCC diagnostic push
 9395|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9396|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9397|       |#pragma GCC diagnostic pop
 9398|       |#pragma GCC diagnostic push
 9399|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9400|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9401|       |#pragma GCC diagnostic pop
 9402|       |#pragma GCC diagnostic push
 9403|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9404|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9405|       |#pragma GCC diagnostic pop
 9406|       |#pragma GCC diagnostic push
 9407|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9408|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9409|       |#pragma GCC diagnostic pop
 9410|       |#pragma GCC diagnostic push
 9411|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9412|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9413|       |#pragma GCC diagnostic pop
 9414|       |#pragma GCC diagnostic push
 9415|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9416|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9417|       |#pragma GCC diagnostic pop
 9418|       |#pragma GCC diagnostic push
 9419|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9420|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9421|       |#pragma GCC diagnostic pop
 9422|       |#pragma GCC diagnostic push
 9423|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9424|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9425|       |#pragma GCC diagnostic pop
 9426|       |#pragma GCC diagnostic push
 9427|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9428|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9429|       |#pragma GCC diagnostic push
 9430|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9431|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9432|       |#pragma GCC diagnostic ignored "-Wsuggest-attribute=const"
 9433|       |#pragma GCC diagnostic push
 9434|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9435|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9436|       |#pragma GCC diagnostic pop
 9437|       |#pragma GCC diagnostic push
 9438|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9439|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9440|       |#pragma GCC diagnostic pop
 9441|       |#pragma GCC diagnostic push
 9442|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9443|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9444|       |#pragma GCC diagnostic pop
 9445|       |#pragma GCC diagnostic push
 9446|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9447|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9448|       |#pragma GCC diagnostic pop
 9449|       |#pragma GCC diagnostic push
 9450|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9451|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9452|       |#pragma GCC diagnostic pop
 9453|       |#pragma GCC diagnostic push
 9454|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9455|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9456|       |#pragma GCC diagnostic pop
 9457|       |#pragma GCC diagnostic push
 9458|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9459|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9460|       |#pragma GCC diagnostic pop
 9461|       |#pragma GCC diagnostic push
 9462|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9463|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9464|       |#pragma GCC diagnostic pop
 9465|       |#pragma GCC diagnostic push
 9466|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9467|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9468|       |#pragma GCC diagnostic pop
 9469|       |#pragma GCC diagnostic push
 9470|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9471|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9472|       |#pragma GCC diagnostic pop
 9473|       |#pragma GCC diagnostic push
 9474|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9475|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9476|       |#pragma GCC diagnostic push
 9477|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9478|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9479|       |#pragma GCC diagnostic pop
 9480|       |#pragma GCC diagnostic push
 9481|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9482|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9483|       |#pragma GCC diagnostic pop
 9484|       |#pragma GCC diagnostic push
 9485|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9486|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9487|       |#pragma GCC diagnostic pop
 9488|       |#pragma GCC diagnostic push
 9489|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9490|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9491|       |#pragma GCC diagnostic push
 9492|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9493|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9494|       |#pragma GCC diagnostic pop
 9495|       |#pragma GCC diagnostic push
 9496|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9497|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9498|       |#pragma GCC diagnostic pop
 9499|       |#pragma GCC diagnostic push
 9500|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9501|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9502|       |#pragma GCC diagnostic pop
 9503|       |#pragma GCC diagnostic push
 9504|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9505|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9506|       |#pragma GCC diagnostic push
 9507|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9508|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9509|       |#pragma GCC diagnostic pop
 9510|       |#pragma GCC diagnostic push
 9511|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9512|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9513|       |#pragma GCC diagnostic pop
 9514|       |#pragma GCC diagnostic push
 9515|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9516|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9517|       |#pragma GCC diagnostic pop
 9518|       |#pragma GCC diagnostic push
 9519|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9520|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9521|       |#pragma GCC diagnostic pop
 9522|       |#pragma GCC diagnostic push
 9523|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9524|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9525|       |#pragma GCC diagnostic pop
 9526|       |#pragma GCC diagnostic push
 9527|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9528|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9529|       |#pragma GCC diagnostic pop
 9530|       |#pragma GCC diagnostic push
 9531|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9532|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9533|       |#pragma GCC diagnostic pop
 9534|       |#pragma GCC diagnostic push
 9535|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9536|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9537|       |#pragma GCC diagnostic pop
 9538|       |#pragma GCC diagnostic push
 9539|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9540|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9541|       |#pragma GCC diagnostic pop
 9542|       |#pragma GCC diagnostic push
 9543|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9544|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9545|       |#pragma GCC diagnostic pop
 9546|       |#pragma GCC diagnostic push
 9547|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9548|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9549|       |#pragma GCC diagnostic pop
 9550|       |#pragma GCC diagnostic push
 9551|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9552|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9553|       |#pragma GCC diagnostic pop
 9554|       |#pragma GCC diagnostic push
 9555|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9556|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9557|       |#pragma GCC diagnostic push
 9558|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9559|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9560|       |#pragma GCC diagnostic pop
 9561|       |#pragma GCC diagnostic push
 9562|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9563|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9564|       |#pragma GCC diagnostic pop
 9565|       |#pragma GCC diagnostic push
 9566|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9567|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9568|       |#pragma GCC diagnostic pop
 9569|       |#pragma GCC diagnostic push
 9570|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9571|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9572|       |#pragma GCC diagnostic push
 9573|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9574|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9575|       |#pragma GCC diagnostic push
 9576|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9577|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9578|       |#pragma GCC diagnostic pop
 9579|       |#pragma GCC diagnostic push
 9580|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9581|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9582|       |#pragma GCC diagnostic pop
 9583|       |#pragma GCC diagnostic push
 9584|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9585|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9586|       |#pragma GCC diagnostic pop
 9587|       |#pragma GCC diagnostic push
 9588|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9589|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9590|       |#pragma GCC diagnostic pop
 9591|       |char const *Version = "8.21";
 9592|       |extern int fputc_unlocked(int __c, FILE *__stream);
 9593|       |extern char *optarg;
 9594|       |#pragma GCC diagnostic push
 9595|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9596|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9597|       |#pragma GCC diagnostic pop
 9598|       |extern __attribute__((__nothrow__)) int(
 9599|       |    __attribute__((__nonnull__(1), __leaf__)) putenv)(char *__string);
 9600|       |#pragma GCC diagnostic push
 9601|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9602|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9603|       |#pragma GCC diagnostic pop
 9604|       |extern __attribute__((__nothrow__)) char *(
 9605|       |    __attribute__((__leaf__)) textdomain)(char const *__domainname);
 9606|       |extern __attribute__((__nothrow__)) char *(__attribute__((
 9607|       |            __leaf__)) bindtextdomain)(char const *__domainname, char const *__dirname);
 9608|       |#pragma GCC diagnostic push
 9609|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9610|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9611|       |#pragma GCC diagnostic push
 9612|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9613|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9614|       |#pragma GCC diagnostic pop
 9615|       |__inline static void emit_mandatory_arg_note(void)
 9616|      0|{
 9617|      0|    char *tmp;
 9618|       |
 9619|      0|    {
 9620|      0|        tmp = gettext("\nMandatory arguments to long options are mandatory for "
 9621|      0|                      "short options too.\n");
 9622|      0|        fputs_unlocked((char const *)tmp, stdout);
 9623|      0|        return;
 9624|      0|    }
 9625|      0|}
 9626|       |__inline static void emit_ancillary_info(void)
 9627|      0|{
 9628|      0|    char *tmp;
 9629|      0|    char *tmp___0;
 9630|      0|    char *tmp___1;
 9631|      0|    char *tmp___2;
 9632|      0|    char const *lc_messages;
 9633|      0|    char const *tmp___3;
 9634|      0|    char *tmp___4;
 9635|      0|    char *tmp___5;
 9636|      0|    int tmp___6;
 9637|      0|    char *tmp___7;
 9638|      0|    char *tmp___8;
 9639|       |
 9640|      0|    {
 9641|      0|        tmp = last_component(program_name);
 9642|      0|        tmp___0 = gettext("\nReport %s bugs to %s\n");
 9643|      0|        printf((char const *)tmp___0, tmp, "bug-coreutils@gnu.org");
 9644|      0|        tmp___1 = gettext("%s home page: <%s>\n");
 9645|      0|        printf((char const *)tmp___1, "GNU coreutils",
 9646|      0|               "http://www.gnu.org/software/coreutils/");
 9647|      0|        tmp___2 = gettext(
 9648|      0|                      "General help using GNU software: <http://www.gnu.org/gethelp/>\n");
 9649|      0|        fputs_unlocked((char const *)tmp___2, stdout);
 9650|      0|        tmp___3 = (char const *)setlocale(5, (char const *)((void *)0));
 9651|      0|        lc_messages = tmp___3;
 9652|      0|        if (lc_messages) {
 9653|      0|            tmp___6 = strncmp(lc_messages, "en_", sizeof("en_") - 1UL);
 9654|      0|            if (tmp___6) {
 9655|      0|                tmp___4 = last_component(program_name);
 9656|      0|                tmp___5 = gettext("Report %s translation bugs to "
 9657|      0|                                  "<http://translationproject.org/team/>\n");
 9658|      0|                printf((char const *)tmp___5, tmp___4);
 9659|      0|            }
 9660|      0|        }
 9661|      0|        tmp___7 = last_component(program_name);
 9662|      0|        tmp___8 = gettext(
 9663|      0|                      "For complete documentation, run: info coreutils \'%s invocation\'\n");
 9664|      0|        printf((char const *)tmp___8, tmp___7);
 9665|      0|        return;
 9666|      0|    }
 9667|      0|}
 9668|       |__inline static void emit_try_help(void)
 9669|      0|{
 9670|      0|    char *tmp;
 9671|       |
 9672|      0|    {
 9673|      0|        tmp = gettext("Try \'%s --help\' for more information.\n");
 9674|      0|        fprintf(stderr, (char const *)tmp, program_name);
 9675|      0|        return;
 9676|      0|    }
 9677|      0|}
 9678|       |__inline static char *timetostr(time_t t, char *buf___1)
 9679|      0|{
 9680|      0|    char *tmp;
 9681|       |
 9682|      0|    {
 9683|      0|        tmp = imaxtostr(t, buf___1);
 9684|      0|        return (tmp);
 9685|      0|    }
 9686|      0|}
 9687|       |__inline static char *bad_cast(char const *s)
 9688|      0|{
 9689|       |
 9690|      0|    {
 9691|      0|        return ((char *)s);
 9692|      0|    }
 9693|      0|}
 9694|       |#pragma GCC diagnostic push
 9695|       |#pragma GCC diagnostic ignored "-Wmissing-prototypes"
 9696|       |#pragma GCC diagnostic ignored "-Wmissing-declarations"
 9697|       |#pragma GCC diagnostic pop
 9698|       |static _Bool show_date(char const *format, struct timespec when);
 9699|       |static char const *const time_spec_string[6] = {
 9700|       |    "hours", "minutes", "date", "seconds", "ns", (char const *)((void *)0)
 9701|       |};
 9702|       |static enum Time_spec const time_spec[5] = {
 9703|       |    (enum Time_spec const)3, (enum Time_spec const)4, (enum Time_spec const)0,
 9704|       |    (enum Time_spec const)1, (enum Time_spec const)2
 9705|       |};
 9706|       |static char const rfc_2822_format[25] = {
 9707|       |    (char const)'%',   (char const)'a', (char const)',', (char const)' ',
 9708|       |    (char const)'%',   (char const)'d', (char const)' ', (char const)'%',
 9709|       |    (char const)'b',   (char const)' ', (char const)'%', (char const)'Y',
 9710|       |    (char const)' ',   (char const)'%', (char const)'H', (char const)':',
 9711|       |    (char const)'%',   (char const)'M', (char const)':', (char const)'%',
 9712|       |    (char const)'S',   (char const)' ', (char const)'%', (char const)'z',
 9713|       |    (char const)'\000'
 9714|       |};
 9715|       |static char const short_options[14] = {
 9716|       |    (char const)'d', (char const)':',   (char const)'f', (char const)':',
 9717|       |    (char const)'I', (char const)':',   (char const)':', (char const)'r',
 9718|       |    (char const)':', (char const)'R',   (char const)'s', (char const)':',
 9719|       |    (char const)'u', (char const)'\000'
 9720|       |};
 9721|       |static struct option const long_options___1[14] = {
 9722|       |    {"date", 1, (int *)((void *)0), 'd'},
 9723|       |    {"file", 1, (int *)((void *)0), 'f'},
 9724|       |    {"iso-8601", 2, (int *)((void *)0), 'I'},
 9725|       |    {"reference", 1, (int *)((void *)0), 'r'},
 9726|       |    {"rfc-822", 0, (int *)((void *)0), 'R'},
 9727|       |    {"rfc-2822", 0, (int *)((void *)0), 'R'},
 9728|       |    {"rfc-3339", 1, (int *)((void *)0), 128},
 9729|       |    {"set", 1, (int *)((void *)0), 's'},
 9730|       |    {"uct", 0, (int *)((void *)0), 'u'},
 9731|       |    {"utc", 0, (int *)((void *)0), 'u'},
 9732|       |    {"universal", 0, (int *)((void *)0), 'u'},
 9733|       |    {"help", 0, (int *)((void *)0), -130},
 9734|       |    {"version", 0, (int *)((void *)0), -131},
 9735|       |    {(char const *)((void *)0), 0, (int *)((void *)0), 0}
 9736|       |};
 9737|       |__attribute__((__noreturn__)) void usage(int status);
 9738|       |void usage(int status)
 9739|      0|{
 9740|      0|    char *tmp;
 9741|      0|    char *tmp___0;
 9742|      0|    char *tmp___1;
 9743|      0|    char *tmp___2;
 9744|      0|    char *tmp___3;
 9745|      0|    char *tmp___4;
 9746|      0|    char *tmp___5;
 9747|      0|    char *tmp___6;
 9748|      0|    char *tmp___7;
 9749|      0|    char *tmp___8;
 9750|      0|    char *tmp___9;
 9751|      0|    char *tmp___10;
 9752|      0|    char *tmp___11;
 9753|      0|    char *tmp___12;
 9754|      0|    char *tmp___13;
 9755|      0|    char *tmp___14;
 9756|      0|    char *tmp___15;
 9757|      0|    char *tmp___16;
 9758|      0|    char *tmp___17;
 9759|      0|    char *tmp___18;
 9760|      0|    char *tmp___19;
 9761|       |
 9762|      0|    {
 9763|      0|        if (status != 0) {
 9764|      0|            emit_try_help();
 9765|      0|        }
 9766|      0|        else {
 9767|      0|            tmp = gettext("Usage: %s [OPTION]... [+FORMAT]\n  or:  %s "
 9768|      0|                          "[-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\n");
 9769|      0|            printf((char const *)tmp, program_name, program_name);
 9770|      0|            tmp___0 = gettext("Display the current time in the given FORMAT, or set "
 9771|      0|                              "the system date.\n");
 9772|      0|            fputs_unlocked((char const *)tmp___0, stdout);
 9773|      0|            emit_mandatory_arg_note();
 9774|      0|            tmp___1 = gettext(
 9775|      0|                          "  -d, --date=STRING         display time described by STRING, not "
 9776|      0|                          "\'now\'\n  -f, --file=DATEFILE       like --date once for each line "
 9777|      0|                          "of DATEFILE\n  -I[TIMESPEC], --iso-8601[=TIMESPEC]  output "
 9778|      0|                          "date/time in ISO 8601 format.\n                            "
 9779|      0|                          "TIMESPEC=\'date\' for date only (the default),\n                    "
 9780|      0|                          "        \'hours\', \'minutes\', \'seconds\', or \'ns\' for date\n   "
 9781|      0|                          "                         and time to the indicated precision.\n");
 9782|      0|            fputs_unlocked((char const *)tmp___1, stdout);
 9783|      0|            tmp___2 =
 9784|      0|                gettext("  -r, --reference=FILE      display the last modification "
 9785|      0|                        "time of FILE\n  -R, --rfc-2822            output date and "
 9786|      0|                        "time in RFC 2822 format.\n                            "
 9787|      0|                        "Example: Mon, 07 Aug 2006 12:34:56 -0600\n");
 9788|      0|            fputs_unlocked((char const *)tmp___2, stdout);
 9789|      0|            tmp___3 = gettext(
 9790|      0|                          "      --rfc-3339=TIMESPEC   output date and time in RFC 3339 "
 9791|      0|                          "format.\n                            TIMESPEC=\'date\', "
 9792|      0|                          "\'seconds\', or \'ns\' for\n                            date and "
 9793|      0|                          "time to the indicated precision.\n                            Date "
 9794|      0|                          "and time components are separated by\n                            a "
 9795|      0|                          "single space: 2006-08-07 12:34:56-06:00\n  -s, --set=STRING         "
 9796|      0|                          " set time described by STRING\n  -u, --utc, --universal    print or "
 9797|      0|                          "set Coordinated Universal Time\n");
 9798|      0|            fputs_unlocked((char const *)tmp___3, stdout);
 9799|      0|            tmp___4 = gettext("      --help     display this help and exit\n");
 9800|      0|            fputs_unlocked((char const *)tmp___4, stdout);
 9801|      0|            tmp___5 =
 9802|      0|                gettext("      --version  output version information and exit\n");
 9803|      0|            fputs_unlocked((char const *)tmp___5, stdout);
 9804|      0|            tmp___6 = gettext("\nFORMAT controls the output.  Interpreted sequences "
 9805|      0|                              "are:\n\n  %%   a literal %\n  %a   locale\'s "
 9806|      0|                              "abbreviated weekday name (e.g., Sun)\n");
 9807|      0|            fputs_unlocked((char const *)tmp___6, stdout);
 9808|      0|            tmp___7 =
 9809|      0|                gettext("  %A   locale\'s full weekday name (e.g., Sunday)\n  %b   "
 9810|      0|                        "locale\'s abbreviated month name (e.g., Jan)\n  %B   "
 9811|      0|                        "locale\'s full month name (e.g., January)\n  %c   locale\'s "
 9812|      0|                        "date and time (e.g., Thu Mar  3 23:05:25 2005)\n");
 9813|      0|            fputs_unlocked((char const *)tmp___7, stdout);
 9814|      0|            tmp___8 =
 9815|      0|                gettext("  %C   century; like %Y, except omit last two digits (e.g., "
 9816|      0|                        "20)\n  %d   day of month (e.g., 01)\n  %D   date; same as "
 9817|      0|                        "%m/%d/%y\n  %e   day of month, space padded; same as %_d\n");
 9818|      0|            fputs_unlocked((char const *)tmp___8, stdout);
 9819|      0|            tmp___9 =
 9820|      0|                gettext("  %F   full date; same as %Y-%m-%d\n  %g   last two digits "
 9821|      0|                        "of year of ISO week number (see %G)\n  %G   year of ISO "
 9822|      0|                        "week number (see %V); normally useful only with %V\n");
 9823|      0|            fputs_unlocked((char const *)tmp___9, stdout);
 9824|      0|            tmp___10 = gettext("  %h   same as %b\n  %H   hour (00..23)\n  %I   hour "
 9825|      0|                               "(01..12)\n  %j   day of year (001..366)\n");
 9826|      0|            fputs_unlocked((char const *)tmp___10, stdout);
 9827|      0|            tmp___11 = gettext("  %k   hour, space padded ( 0..23); same as %_H\n  "
 9828|      0|                               "%l   hour, space padded ( 1..12); same as %_I\n  %m  "
 9829|      0|                               " month (01..12)\n  %M   minute (00..59)\n");
 9830|      0|            fputs_unlocked((char const *)tmp___11, stdout);
 9831|      0|            tmp___12 = gettext(
 9832|      0|                           "  %n   a newline\n  %N   nanoseconds (000000000..999999999)\n  %p   "
 9833|      0|                           "locale\'s equivalent of either AM or PM; blank if not known\n  %P   "
 9834|      0|                           "like %p, but lower case\n  %r   locale\'s 12-hour clock time (e.g., "
 9835|      0|                           "11:11:04 PM)\n  %R   24-hour hour and minute; same as %H:%M\n  %s   "
 9836|      0|                           "seconds since 1970-01-01 00:00:00 UTC\n");
 9837|      0|            fputs_unlocked((char const *)tmp___12, stdout);
 9838|      0|            tmp___13 =
 9839|      0|                gettext("  %S   second (00..60)\n  %t   a tab\n  %T   time; same as "
 9840|      0|                        "%H:%M:%S\n  %u   day of week (1..7); 1 is Monday\n");
 9841|      0|            fputs_unlocked((char const *)tmp___13, stdout);
 9842|      0|            tmp___14 = gettext(
 9843|      0|                           "  %U   week number of year, with Sunday as first day of week "
 9844|      0|                           "(00..53)\n  %V   ISO week number, with Monday as first day of week "
 9845|      0|                           "(01..53)\n  %w   day of week (0..6); 0 is Sunday\n  %W   week "
 9846|      0|                           "number of year, with Monday as first day of week (00..53)\n");
 9847|      0|            fputs_unlocked((char const *)tmp___14, stdout);
 9848|      0|            tmp___15 =
 9849|      0|                gettext("  %x   locale\'s date representation (e.g., 12/31/99)\n  %X "
 9850|      0|                        "  locale\'s time representation (e.g., 23:13:48)\n  %y   "
 9851|      0|                        "last two digits of year (00..99)\n  %Y   year\n");
 9852|      0|            fputs_unlocked((char const *)tmp___15, stdout);
 9853|      0|            tmp___16 =
 9854|      0|                gettext("  %z   +hhmm numeric time zone (e.g., -0400)\n  %:z  +hh:mm "
 9855|      0|                        "numeric time zone (e.g., -04:00)\n  %::z  +hh:mm:ss numeric "
 9856|      0|                        "time zone (e.g., -04:00:00)\n  %:::z  numeric time zone "
 9857|      0|                        "with : to necessary precision (e.g., -04, +05:30)\n  %Z   "
 9858|      0|                        "alphabetic time zone abbreviation (e.g., EDT)\n\nBy "
 9859|      0|                        "default, date pads numeric fields with zeroes.\n");
 9860|      0|            fputs_unlocked((char const *)tmp___16, stdout);
 9861|      0|            tmp___17 =
 9862|      0|                gettext("The following optional flags may follow \'%\':\n\n  -  "
 9863|      0|                        "(hyphen) do not pad the field\n  _  (underscore) pad with "
 9864|      0|                        "spaces\n  0  (zero) pad with zeros\n  ^  use upper case if "
 9865|      0|                        "possible\n  #  use opposite case if possible\n");
 9866|      0|            fputs_unlocked((char const *)tmp___17, stdout);
 9867|      0|            tmp___18 = gettext(
 9868|      0|                           "\nAfter any flags comes an optional field width, as a decimal "
 9869|      0|                           "number;\nthen an optional modifier, which is either\nE to use the "
 9870|      0|                           "locale\'s alternate representations if available, or\nO to use the "
 9871|      0|                           "locale\'s alternate numeric symbols if available.\n");
 9872|      0|            fputs_unlocked((char const *)tmp___18, stdout);
 9873|      0|            tmp___19 = gettext(
 9874|      0|                           "\nExamples:\nConvert seconds since the epoch (1970-01-01 UTC) to a "
 9875|      0|                           "date\n  $ date --date=\'@2147483647\'\n\nShow the time on the west "
 9876|      0|                           "coast of the US (use tzselect(1) to find TZ)\n  $ "
 9877|      0|                           "TZ=\'America/Los_Angeles\' date\n\nShow the local time for 9AM next "
 9878|      0|                           "Friday on the west coast of the US\n  $ date "
 9879|      0|                           "--date=\'TZ=\"America/Los_Angeles\" 09:00 next Fri\'\n");
 9880|      0|            fputs_unlocked((char const *)tmp___19, stdout);
 9881|      0|            emit_ancillary_info();
 9882|      0|        }
 9883|      0|        exit(status);
 9884|      0|    }
 9885|      0|}
 9886|       |static _Bool batch_convert(char const *input_filename, char const *format)
 9887|      0|{
 9888|      0|    _Bool ok;
 9889|      0|    FILE *in_stream;
 9890|      0|    char *line;
 9891|      0|    size_t buflen;
 9892|      0|    struct timespec when;
 9893|      0|    char const *tmp;
 9894|      0|    int *tmp___0;
 9895|      0|    int tmp___1;
 9896|      0|    ssize_t line_length;
 9897|      0|    ssize_t tmp___2;
 9898|      0|    char const *tmp___3;
 9899|      0|    char *tmp___4;
 9900|      0|    _Bool tmp___5;
 9901|      0|    _Bool tmp___6;
 9902|      0|    char const *tmp___7;
 9903|      0|    int *tmp___8;
 9904|      0|    int tmp___9;
 9905|       |
 9906|      0|    {
 9907|      0|        tmp___1 = strcmp(input_filename, "-");
 9908|      0|        if (tmp___1 == 0) {
 9909|      0|            input_filename = (char const *)gettext("standard input");
 9910|      0|            in_stream = stdin;
 9911|      0|        }
 9912|      0|        else {
 9913|      0|            in_stream = fopen(input_filename, "r");
 9914|      0|            if ((unsigned long)in_stream == (unsigned long)((void *)0)) {
 9915|      0|                tmp = quote(input_filename);
 9916|      0|                tmp___0 = __errno_location();
 9917|      0|                error(1, *tmp___0, "%s", tmp);
 9918|      0|            }
 9919|      0|        }
 9920|      0|        line = (char *)((void *)0);
 9921|      0|        buflen = (size_t)0;
 9922|      0|        ok = (_Bool)1;
 9923|      0|        while (1) {
 9924|      0|            tmp___2 = getline(&line, &buflen, in_stream);
 9925|      0|            line_length = tmp___2;
 9926|      0|            if (line_length < 0L) {
 9927|      0|                goto while_break;
 9928|      0|            }
 9929|      0|            tmp___6 = parse_datetime(&when, (char const *)line,
 9930|      0|                                     (struct timespec const *)((void *)0));
 9931|      0|            if (tmp___6) {
 9932|      0|                tmp___5 = show_date(format, when);
 9933|      0|                ok = (_Bool)((int)ok & (int)tmp___5);
 9934|      0|            }
 9935|      0|            else {
 9936|      0|                if ((int)*(line + (line_length - 1L)) == 10) {
 9937|      0|                    *(line + (line_length - 1L)) = (char)'\000';
 9938|      0|                }
 9939|      0|                tmp___3 = quote((char const *)line);
 9940|      0|                tmp___4 = gettext("invalid date %s");
 9941|      0|                error(0, 0, (char const *)tmp___4, tmp___3);
 9942|      0|                ok = (_Bool)0;
 9943|      0|            }
 9944|      0|        }
 9945|      0|while_break:
 9946|      0|        tmp___9 = rpl_fclose(in_stream);
 9947|      0|        if (tmp___9 == -1) {
 9948|      0|            tmp___7 = quote(input_filename);
 9949|      0|            tmp___8 = __errno_location();
 9950|      0|            error(1, *tmp___8, "%s", tmp___7);
 9951|      0|        }
 9952|      0|        free((void *)line);
 9953|      0|        return (ok);
 9954|      0|    }
 9955|      0|}
 9956|       |int main(int argc, char **argv);
 9957|       |static char const rfc_3339_format[3][32] = {
 9958|       |    {
 9959|       |        (char const)'%', (char const)'Y', (char const)'-', (char const)'%',
 9960|       |        (char const)'m', (char const)'-', (char const)'%', (char const)'d',
 9961|       |        (char const)'\000'
 9962|       |    },
 9963|       |    {
 9964|       |        (char const)'%',   (char const)'Y', (char const)'-', (char const)'%',
 9965|       |        (char const)'m',   (char const)'-', (char const)'%', (char const)'d',
 9966|       |        (char const)' ',   (char const)'%', (char const)'H', (char const)':',
 9967|       |        (char const)'%',   (char const)'M', (char const)':', (char const)'%',
 9968|       |        (char const)'S',   (char const)'%', (char const)':', (char const)'z',
 9969|       |        (char const)'\000'
 9970|       |    },
 9971|       |    {
 9972|       |        (char const)'%', (char const)'Y', (char const)'-', (char const)'%',
 9973|       |        (char const)'m', (char const)'-', (char const)'%', (char const)'d',
 9974|       |        (char const)' ', (char const)'%', (char const)'H', (char const)':',
 9975|       |        (char const)'%', (char const)'M', (char const)':', (char const)'%',
 9976|       |        (char const)'S', (char const)'.', (char const)'%', (char const)'N',
 9977|       |        (char const)'%', (char const)':', (char const)'z', (char const)'\000'
 9978|       |    }
 9979|       |};
 9980|       |static char const iso_8601_format[5][32] = {
 9981|       |    {
 9982|       |        (char const)'%', (char const)'Y', (char const)'-', (char const)'%',
 9983|       |        (char const)'m', (char const)'-', (char const)'%', (char const)'d',
 9984|       |        (char const)'\000'
 9985|       |    },
 9986|       |    {
 9987|       |        (char const)'%', (char const)'Y', (char const)'-', (char const)'%',
 9988|       |        (char const)'m', (char const)'-', (char const)'%', (char const)'d',
 9989|       |        (char const)'T', (char const)'%', (char const)'H', (char const)':',
 9990|       |        (char const)'%', (char const)'M', (char const)':', (char const)'%',
 9991|       |        (char const)'S', (char const)'%', (char const)'z', (char const)'\000'
 9992|       |    },
 9993|       |    {
 9994|       |        (char const)'%', (char const)'Y', (char const)'-',   (char const)'%',
 9995|       |        (char const)'m', (char const)'-', (char const)'%',   (char const)'d',
 9996|       |        (char const)'T', (char const)'%', (char const)'H',   (char const)':',
 9997|       |        (char const)'%', (char const)'M', (char const)':',   (char const)'%',
 9998|       |        (char const)'S', (char const)',', (char const)'%',   (char const)'N',
 9999|       |        (char const)'%', (char const)'z', (char const)'\000'
10000|       |    },
10001|       |    {
10002|       |        (char const)'%', (char const)'Y', (char const)'-', (char const)'%',
10003|       |        (char const)'m', (char const)'-', (char const)'%', (char const)'d',
10004|       |        (char const)'T', (char const)'%', (char const)'H', (char const)'%',
10005|       |        (char const)'z', (char const)'\000'
10006|       |    },
10007|       |    {
10008|       |        (char const)'%', (char const)'Y', (char const)'-', (char const)'%',
10009|       |        (char const)'m', (char const)'-', (char const)'%', (char const)'d',
10010|       |        (char const)'T', (char const)'%', (char const)'H', (char const)':',
10011|       |        (char const)'%', (char const)'M', (char const)'%', (char const)'z',
10012|       |        (char const)'\000'
10013|       |    }
10014|       |};
10015|       |int main(int argc, char **argv)
10016|      6|{
10017|      6|    int optc;
10018|      6|    char const *datestr;
10019|      6|    char const *set_datestr;
10020|      6|    struct timespec when;
10021|      6|    _Bool set_date;
10022|      6|    char const *format;
10023|      6|    char *batch_file;
10024|      6|    char *reference;
10025|      6|    struct stat refstats;
10026|      6|    _Bool ok;
10027|      6|    int option_specified_date;
10028|      6|    char const *new_format;
10029|      6|    enum Time_spec i;
10030|      6|    ptrdiff_t tmp;
10031|      6|    enum Time_spec i___0;
10032|      6|    ptrdiff_t tmp___0;
10033|      6|    unsigned int tmp___1;
10034|      6|    char *tmp___2;
10035|      6|    int tmp___3;
10036|      6|    char *tmp___4;
10037|      6|    int tmp___5;
10038|      6|    int tmp___6;
10039|      6|    int tmp___7;
10040|      6|    char *tmp___8;
10041|      6|    char *tmp___9;
10042|      6|    char const *tmp___10;
10043|      6|    char *tmp___11;
10044|      6|    char *tmp___12;
10045|      6|    int tmp___13;
10046|      6|    char const *tmp___14;
10047|      6|    char *tmp___15;
10048|      6|    _Bool valid_date;
10049|      6|    int *tmp___16;
10050|      6|    int tmp___17;
10051|      6|    char const *tmp___18;
10052|      6|    char *tmp___19;
10053|      6|    char *tmp___20;
10054|      6|    int *tmp___21;
10055|      6|    int tmp___22;
10056|      6|    _Bool tmp___23;
10057|      6|    int tmp___24;
10058|       |
10059|      6|    {
10060|      6|        datestr = (char const *)((void *)0);
10061|      6|        set_datestr = (char const *)((void *)0);
10062|      6|        set_date = (_Bool)0;
10063|      6|        format = (char const *)((void *)0);
10064|      6|        batch_file = (char *)((void *)0);
10065|      6|        reference = (char *)((void *)0);
10066|      6|        set_program_name((char const *)*(argv + 0));
10067|      6|        setlocale(6, "");
10068|      6|        bindtextdomain("coreutils", "/usr/local/share/locale");
10069|      6|        textdomain("coreutils");
10070|      6|        atexit(&close_stdout);
10071|      9|        while (1) {
10072|      9|            optc = getopt_long(argc, (char *const *)argv, short_options,
10073|      9|                               long_options___1, (int *)((void *)0));
10074|      9|            if (!(optc != -1)) {
10075|      6|                goto while_break;
10076|      6|            }
10077|      3|            new_format = (char const *)((void *)0);
10078|      3|            if (optc == 100) {
10079|      3|                goto case_100;
10080|      3|            }
10081|      0|            if (optc == 102) {
10082|      0|                goto case_102;
10083|      0|            }
10084|      0|            if (optc == 128) {
10085|      0|                goto case_128;
10086|      0|            }
10087|      0|            if (optc == 73) {
10088|      0|                goto case_73;
10089|      0|            }
10090|      0|            if (optc == 114) {
10091|      0|                goto case_114;
10092|      0|            }
10093|      0|            if (optc == 82) {
10094|      0|                goto case_82;
10095|      0|            }
10096|      0|            if (optc == 115) {
10097|      0|                goto case_115;
10098|      0|            }
10099|      0|            if (optc == 117) {
10100|      0|                goto case_117;
10101|      0|            }
10102|      0|            if (optc == -130) {
10103|      0|                goto case_neg_130;
10104|      0|            }
10105|      0|            if (optc == -131) {
10106|      0|                goto case_neg_131;
10107|      0|            }
10108|      0|            goto switch_default;
10109|      3|case_100:
10110|      3|            datestr = (char const *)optarg;
10111|      3|            goto switch_break;
10112|      0|case_102:
10113|      0|            batch_file = optarg;
10114|      0|            goto switch_break;
10115|      0|case_128:
10116|      0|            tmp = __xargmatch_internal("--rfc-3339", (char const *)optarg,
10117|      0|                                       time_spec_string + 2,
10118|      0|                                       (char const *)(time_spec + 2),
10119|      0|                                       sizeof(*(time_spec + 2)), argmatch_die);
10120|      0|            i = (enum Time_spec) * ((time_spec + 2) + tmp);
10121|      0|            new_format = rfc_3339_format[i];
10122|      0|            goto switch_break;
10123|      0|case_73:
10124|      0|            if (optarg) {
10125|      0|                tmp___0 = __xargmatch_internal(
10126|      0|                              "--iso-8601", (char const *)optarg, time_spec_string,
10127|      0|                              (char const *)(time_spec), sizeof(time_spec[0]), argmatch_die);
10128|      0|                tmp___1 = (unsigned int)time_spec[tmp___0];
10129|      0|            }
10130|      0|            else {
10131|      0|                tmp___1 = 0U;
10132|      0|            }
10133|      0|            i___0 = (enum Time_spec)tmp___1;
10134|      0|            new_format = iso_8601_format[i___0];
10135|      0|            goto switch_break;
10136|      0|case_114:
10137|      0|            reference = optarg;
10138|      0|            goto switch_break;
10139|      0|case_82:
10140|      0|            new_format = rfc_2822_format;
10141|      0|            goto switch_break;
10142|      0|case_115:
10143|      0|            set_datestr = (char const *)optarg;
10144|      0|            set_date = (_Bool)1;
10145|      0|            goto switch_break;
10146|      0|case_117:
10147|      0|            tmp___2 = bad_cast("TZ=UTC0");
10148|      0|            tmp___3 = putenv(tmp___2);
10149|      0|            if (tmp___3 != 0) {
10150|      0|                xalloc_die();
10151|      0|            }
10152|      0|            goto switch_break;
10153|      0|case_neg_130:
10154|      0|            usage(0);
10155|      0|            goto switch_break;
10156|      0|case_neg_131:
10157|      0|            version_etc(stdout, "date", "GNU coreutils", Version, "David MacKenzie",
10158|      0|                        (char *)((void *)0));
10159|      0|            exit(0);
10160|      0|            goto switch_break;
10161|      0|switch_default:
10162|      0|            usage(1);
10163|      3|switch_break:
10164|      3|            ;
10165|      3|            if (new_format) {
10166|      0|                if (format) {
10167|      0|                    tmp___4 = gettext("multiple output formats specified");
10168|      0|                    error(1, 0, (char const *)tmp___4);
10169|      0|                }
10170|      0|                format = new_format;
10171|      0|            }
10172|      3|        }
10173|      6|while_break:
10174|      6|        ;
10175|      6|        if (datestr) {
10176|      3|            tmp___5 = 1;
10177|      3|        }
10178|      3|        else {
10179|      3|            tmp___5 = 0;
10180|      3|        }
10181|      6|        if (batch_file) {
10182|      0|            tmp___6 = 1;
10183|      0|        }
10184|      6|        else {
10185|      6|            tmp___6 = 0;
10186|      6|        }
10187|      6|        if (reference) {
10188|      0|            tmp___7 = 1;
10189|      0|        }
10190|      6|        else {
10191|      6|            tmp___7 = 0;
10192|      6|        }
10193|      6|        option_specified_date = (tmp___5 + tmp___6) + tmp___7;
10194|      6|        if (option_specified_date > 1) {
10195|      0|            tmp___8 = gettext(
10196|      0|                          "the options to specify dates for printing are mutually exclusive");
10197|      0|            error(0, 0, (char const *)tmp___8);
10198|      0|            usage(1);
10199|      0|        }
10200|      6|        if (set_date) {
10201|      0|            if (option_specified_date) {
10202|      0|                tmp___9 = gettext(
10203|      0|                              "the options to print and set the time may not be used together");
10204|      0|                error(0, 0, (char const *)tmp___9);
10205|      0|                usage(1);
10206|      0|            }
10207|      0|        }
10208|      6|        if (optind < argc) {
10209|      6|            if (optind + 1 < argc) {
10210|      0|                tmp___10 = quote((char const *)*(argv + (optind + 1)));
10211|      0|                tmp___11 = gettext("extra operand %s");
10212|      0|                error(0, 0, (char const *)tmp___11, tmp___10);
10213|      0|                usage(1);
10214|      0|            }
10215|      6|            if ((int)*(*(argv + optind) + 0) == 43) {
10216|      6|                if (format) {
10217|      0|                    tmp___12 = gettext("multiple output formats specified");
10218|      0|                    error(1, 0, (char const *)tmp___12);
10219|      0|                }
10220|      6|                tmp___13 = optind;
10221|      6|                optind++;
10222|      6|                format = (char const *)(*(argv + tmp___13) + 1);
10223|      6|            }
10224|      0|            else {
10225|      0|                if (set_date) {
10226|      0|                    tmp___14 = quote((char const *)*(argv + optind));
10227|      0|                    tmp___15 =
10228|      0|                        gettext("the argument %s lacks a leading \'+\';\nwhen using an "
10229|      0|                                "option to specify date(s), any non-option\nargument "
10230|      0|                                "must be a format string beginning with \'+\'");
10231|      0|                    error(0, 0, (char const *)tmp___15, tmp___14);
10232|      0|                    usage(1);
10233|      0|                }
10234|      0|                else {
10235|      0|                    if (option_specified_date) {
10236|      0|                        tmp___14 = quote((char const *)*(argv + optind));
10237|      0|                        tmp___15 =
10238|      0|                            gettext("the argument %s lacks a leading \'+\';\nwhen using an "
10239|      0|                                    "option to specify date(s), any non-option\nargument "
10240|      0|                                    "must be a format string beginning with \'+\'");
10241|      0|                        error(0, 0, (char const *)tmp___15, tmp___14);
10242|      0|                        usage(1);
10243|      0|                    }
10244|      0|                }
10245|      0|            }
10246|      6|        }
10247|      6|        if (!format) {
10248|      0|            format = (char const *)nl_langinfo(131180);
10249|      0|            if (!*format) {
10250|      0|                format = "%a %b %e %H:%M:%S %Z %Y";
10251|      0|            }
10252|      0|        }
10253|      6|        if ((unsigned long)batch_file != (unsigned long)((void *)0)) {
10254|      0|            ok = batch_convert((char const *)batch_file, format);
10255|      0|        }
10256|      6|        else {
10257|      6|            valid_date = (_Bool)1;
10258|      6|            ok = (_Bool)1;
10259|      6|            if (!option_specified_date) {
10260|      3|                if (!set_date) {
10261|      3|                    if (optind < argc) {
10262|      0|                        set_date = (_Bool)1;
10263|      0|                        datestr = (char const *)*(argv + optind);
10264|      0|                        valid_date = posixtime(&when.tv_sec, datestr, 14U);
10265|      0|                        when.tv_nsec = (__syscall_slong_t)0;
10266|      0|                    }
10267|      3|                    else {
10268|      3|                        gettime(&when);
10269|      3|                    }
10270|      3|                }
10271|      0|                else {
10272|      0|                    goto _L;
10273|      0|                }
10274|      3|            }
10275|      3|            else {
10276|      3|_L:
10277|      3|                if ((unsigned long)reference != (unsigned long)((void *)0)) {
10278|      0|                    tmp___17 = stat((char const *)reference, &refstats);
10279|      0|                    if (tmp___17 != 0) {
10280|      0|                        tmp___16 = __errno_location();
10281|      0|                        error(1, *tmp___16, "%s", reference);
10282|      0|                    }
10283|      0|                    when = get_stat_mtime((struct stat const *)(&refstats));
10284|      0|                }
10285|      3|                else {
10286|      3|                    if (set_datestr) {
10287|      0|                        datestr = set_datestr;
10288|      0|                    }
10289|      3|                    valid_date = parse_datetime(&when, datestr,
10290|      3|                                                (struct timespec const *)((void *)0));
10291|      3|                }
10292|      3|            }
10293|      6|            if (!valid_date) {
10294|      0|                tmp___18 = quote(datestr);
10295|      0|                tmp___19 = gettext("invalid date %s");
10296|      0|                error(1, 0, (char const *)tmp___19, tmp___18);
10297|      0|            }
10298|      6|            if (set_date) {
10299|      0|                tmp___22 = settime((struct timespec const *)(&when));
10300|      0|                if (tmp___22 != 0) {
10301|      0|                    tmp___20 = gettext("cannot set date");
10302|      0|                    tmp___21 = __errno_location();
10303|      0|                    error(0, *tmp___21, (char const *)tmp___20);
10304|      0|                    ok = (_Bool)0;
10305|      0|                }
10306|      0|            }
10307|      6|            tmp___23 = show_date(format, when);
10308|      6|            ok = (_Bool)((int)ok & (int)tmp___23);
10309|      6|        }
10310|      6|        if (ok) {
10311|      6|            tmp___24 = 0;
10312|      6|        }
10313|      0|        else {
10314|      0|            tmp___24 = 1;
10315|      0|        }
10316|      6|        exit(tmp___24);
10317|      6|    }
10318|      6|}
10319|       |static _Bool show_date(char const *format, struct timespec when)
10320|      6|{
10321|      6|    struct tm *tm;
10322|      6|    char
10323|      6|    buf___1[(((sizeof(intmax_t) * 8UL - 1UL) * 146UL + 484UL) / 485UL + 1UL) +
10324|      6|                                1UL];
10325|      6|    char *tmp;
10326|      6|    char *tmp___0;
10327|       |
10328|      6|    {
10329|      6|        tm = localtime((time_t const *)(&when.tv_sec));
10330|      6|        if (!tm) {
10331|      0|            tmp = timetostr(when.tv_sec, buf___1);
10332|      0|            tmp___0 = gettext("time %s is out of range");
10333|      0|            error(0, 0, (char const *)tmp___0, tmp);
10334|      0|            return ((_Bool)0);
10335|      0|        }
10336|      6|        if ((unsigned long)format == (unsigned long)(rfc_2822_format)) {
10337|      0|            setlocale(2, "C");
10338|      0|        }
10339|      6|        fprintftime(stdout, format, (struct tm const *)tm, 0, (int)when.tv_nsec);
10340|      6|        fputc_unlocked('\n', stdout);
10341|      6|        if ((unsigned long)format == (unsigned long)(rfc_2822_format)) {
10342|      0|            setlocale(2, "");
10343|      0|        }
10344|      6|        return ((_Bool)1);
10345|      6|    }
10346|      6|}

